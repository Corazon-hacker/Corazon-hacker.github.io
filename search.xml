<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【MySQL】MYSQL知识总结</title>
    <url>/posts/c826a854/</url>
    <content><![CDATA[<p>本文重点参考了CSDN的一篇博客：<a href="https://blog.csdn.net/weixin_45851945/article/details/114287877">MySQL 有这一篇就够</a>。</p>
<span id="more"></span>
<h2 id="数据库的三大范式">数据库的三大范式</h2>
<p>1、第一范式(1NF)是指数据库表的每一列都是不可分割的基本数据线；也就是说：每列的值具有原子性，不可再分割。<br>
2、第二范式(2NF)是在第一范式(1NF)的基础上建立起来得，满足第二范式(2NF)必须先满足第一范式(1NF)。如果表是单主键，那么主键以外的列必须完全依赖于主键；如果表是复合主键，那么主键以外的列必须完全依赖于主键，不能仅依赖主键的一部分。<br>
3、第三范式(3NF)是在第二范式的基础上建立起来的，即满足第三范式必须要先满足第二范式。第三范式(3NF)要求：表中的非主键列必须和主键直接相关而不能间接相关；也就是说：非主键列之间不能相关依赖。</p>
<h2 id="SQL简述">SQL简述</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>SQL的概述</strong></p>
</li>
</ul>
<p>Structure Query Language(结构化查询语言)简称SQL，它被美国国家标准局(ANSI)确定为关系型数据库语言的美国标准，后被国际化标准组织(ISO)采纳为关系数据库语言的国际标准。数据库管理系统可以通过SQL管理数据库；定义和操作数据，维护数据的完整性和安全性。</p>
<h3 id="SQL的优点">SQL的优点</h3>
<p>1、简单易学，具有很强的操作性<br>
2、绝大多数重要的数据库管理系统均支持SQL<br>
3、高度非过程化；用SQL操作数据库时大部分的工作由DBMS自动完成</p>
<h3 id="SQL的分类">SQL的分类</h3>
<p>1、DDL(Data Definition Language) 数据定义语言，用来操作数据库、表、列等； 常用语句：CREATE、 ALTER、DROP<br>
2、DML(Data Manipulation Language) 数据操作语言，用来操作数据库中表里的数据；常用语句：INSERT、 UPDATE、 DELETE<br>
3、DCL(Data Control Language) 数据控制语言，用来操作访问权限和安全级别； 常用语句：GRANT、DENY<br>
4、DQL(Data Query Language) 数据查询语言，用来查询数据 常用语句：SELECT</p>
<h3 id="SQL通用语法">SQL通用语法</h3>
<ol>
<li class="lvl-3">
<p>SQL语句可以单行或多行书写，以分号结尾</p>
</li>
<li class="lvl-3">
<p>可使用空格和缩进来增强语句的可读性</p>
</li>
<li class="lvl-3">
<p>MySQL数据库的SQL语句不区分大小写，建议使用大写，例如：SELECT * FROM user。</p>
</li>
<li class="lvl-3">
<p>同样可以使用/**/的方式完成注释</p>
</li>
<li class="lvl-3">
<p>MySQL中的我们常使用的数据类型如下</p>
</li>
</ol>
<p><img src="/posts/c826a854//image-20241210133749260.png" alt="image-20241210133749260"></p>
<h2 id="数据库的数据类型">数据库的数据类型</h2>
<p>MySQL数据库提供了多种数据类型，其中包括整数类型、浮点数类型、定点 数类型、日期和时间类型、字符串类型、二进制…等等数据类型。</p>
<h3 id="整数类型">整数类型</h3>
<p>根据数值取值范围的不同MySQL 中的整数类型可分为5种，下图列举了 MySQL不同整数类型所对应的字节大小和取值范围而最常用的为INT类型的，</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>字节数</th>
<th>无符号数的取值范围</th>
<th>有符号数的取值范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>TINYINT</td>
<td>1</td>
<td>0~255</td>
<td>-128~127</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>2</td>
<td>0~65535</td>
<td>-32768~32768</td>
</tr>
<tr>
<td>MEDIUINT</td>
<td>3</td>
<td>0~16777215</td>
<td>-8388608~8388608</td>
</tr>
<tr>
<td>INT（最常见）</td>
<td>4</td>
<td>0~4294967295</td>
<td>-2147483648~ 2147483648</td>
</tr>
<tr>
<td>BIGINT</td>
<td>8</td>
<td>0~18446744073709551615</td>
<td>-9223372036854775808~9223372036854775808</td>
</tr>
</tbody>
</table>
<p><font class="notice">注：INT又可写为integer</font></p>
<h3 id="浮点数类型和定点数类型">浮点数类型和定点数类型</h3>
<p>在MySQL数据库中使用浮点数和定点数来存储小数。浮点数的类型有两种：单精度浮点数类型（FLOAT)和双精度浮点数类型（DOUBLE)。而定点数类型只有一种即DECIMAL类型。下图列举了 MySQL中浮点数和定点数类型所对应的字节大小及其取值范围：</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>字节数</th>
<th>有符号数取值范围</th>
<th>无符号数取值范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>FLOAT</td>
<td>4</td>
<td>-3.402823466E+38~-1.175494351E-38</td>
<td>0和1.175494351E-38~3.402823466E+38</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>8</td>
<td>-1.7976931348623157E+308~2.2250738585072014E-308</td>
<td>0和2.2250738585072014E-308~1.7976931348623157E+308</td>
</tr>
<tr>
<td>DECIMAL（M,D）</td>
<td>M+2</td>
<td>-1.7976931348623157E+308~2.2250738585072014E-308</td>
<td>0和2.2250738585072014E-308~1.7976931348623157E+308</td>
</tr>
</tbody>
</table>
<p>从上图中可以看出：DECIMAL类型的取值范围与DOUBLE类型相同。但是，请注意：DECIMAL类型的有效取值范围是由M和D决定的。其中，M表示的是数据的长 度，D表示的是小数点后的长度。比如，将数据类型为DECIMAL(6,2)的数据6.5243 插入数据库后显示的结果为6.52</p>
<h3 id="字符串类型">字符串类型</h3>
<p>在MySQL中常用CHAR 和 VARCHAR 表示字符串。两者不同的是：VARCHAR存储可变长度的字符串。<br>
<strong>当数据为CHAR(M)类型时，不管插入值的长度是实际是多少它所占用的存储空间都是M个字节；而VARCHAR(M)所对应的数据所占用的字节数为实际长度加1</strong></p>
<table>
<thead>
<tr>
<th>插入值</th>
<th>CHAR(3)</th>
<th>存储需求</th>
<th>VARCHAR(3)</th>
<th>存储需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>‘’</td>
<td>‘’</td>
<td>3个字节</td>
<td>‘’</td>
<td>1个字节</td>
</tr>
<tr>
<td>‘a’</td>
<td>‘a’</td>
<td>3个字节</td>
<td>‘a’</td>
<td>2个字节</td>
</tr>
<tr>
<td>‘ab’</td>
<td>‘ab’</td>
<td>3个字节</td>
<td>‘ab’</td>
<td>3个字节</td>
</tr>
<tr>
<td>‘abc’</td>
<td>‘ab’</td>
<td>3个字节</td>
<td>‘abc’</td>
<td>4个字节</td>
</tr>
<tr>
<td>‘abcd’</td>
<td>‘ab’</td>
<td>3个字节</td>
<td>‘abc’</td>
<td>4字节</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>CHAR(M)</th>
<th>M为0~255之间的整数，固定长度为M，不足后面补全空格</th>
</tr>
</thead>
<tbody>
<tr>
<td>VARCHAR(M)</td>
<td>M为0~65535之间的整数</td>
</tr>
</tbody>
</table>
<h3 id="文本类型">文本类型</h3>
<p>文本类型用于表示大文本数据，例如，文章内容、评论、详情等，它的类型分为如下4种：</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>储存范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>TINYTEXT</td>
<td>0~255字节</td>
</tr>
<tr>
<td>TEXT</td>
<td>0~65535字节</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>0~16777215字节</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>0~4294967295字节</td>
</tr>
<tr>
<td>TINYBLOB</td>
<td>0~255字节</td>
</tr>
<tr>
<td>BLOB</td>
<td>0~65535字节</td>
</tr>
<tr>
<td>MEDIUMBLOB</td>
<td>0~16777215字节</td>
</tr>
<tr>
<td>LONGBLOB</td>
<td>0~4294967295字节</td>
</tr>
<tr>
<td>VARBINARY(M)</td>
<td>允许长度0~M个字节的变长字节字符串</td>
</tr>
<tr>
<td>BINARY(M)</td>
<td>允许长度0~M个字节的定长字节字符串</td>
</tr>
</tbody>
</table>
<h3 id="日期与时间类型">日期与时间类型</h3>
<p>MySQL提供的表示日期和时间的数据类型分别是 ：YEAR、DATE、TIME、DATETIME 和 TIMESTAMP。下图列举了日期和时间数据类型所对应的字节数、取值范围、日期格式以及零值：</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>字节数</th>
<th>取值范围</th>
<th>日期格式</th>
<th>零值</th>
</tr>
</thead>
<tbody>
<tr>
<td>YEAR</td>
<td>1</td>
<td>1901~2155</td>
<td>YYYY</td>
<td>0000</td>
</tr>
<tr>
<td>DATE</td>
<td>4</td>
<td>1000-01-01~9999-12-31</td>
<td>YYYY-MM-DD</td>
<td>0000-00-00</td>
</tr>
<tr>
<td>TIME</td>
<td>3</td>
<td>-838：59：59~ 838：59：59</td>
<td>HH:MM:SS</td>
<td>00:00:00</td>
</tr>
<tr>
<td>DATETIME</td>
<td>8</td>
<td>1000-01-01 00:00:00~9999-12-31 23:59:59</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>0000-00-00 00:00:00</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>4</td>
<td>1970-01-01 00:00:01~2038-01-19 03:14:07</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>0000-00-00 00:00:00</td>
</tr>
</tbody>
</table>
<ul class="lvl-0">
<li class="lvl-2">
<p>YEAR<strong>类型</strong></p>
</li>
</ul>
<p>YEAR类型用于表示年份，在MySQL中，可以使用以下三种格式指定YEAR类型 的值。<br>
1、使用4位字符串或数字表示，范围为’1901’—'2155’或1901—2155。例如，输入 ‘2019’或2019插入到数据库中的值均为2019。<br>
2、使用两位字符串表示，范围为’00’—‘99’。其中，‘00’—'69’范围的值会被转换为 2000—2069范围的YEAR值，‘70’—'99’范围的值会被转换为1970—1999范围的YEAR 值。例如，输入’19’插入到数据库中的值为2019。<br>
3、使用两位数字表示，范围为1—99。其中，1—69范围的值会被转换为2001— 2069范围的YEAR值，70—99范围的值会被转换为1970—1999范围的YEAR值。例 如，输入19插入到数据库中的值为2019。请注意：当使用YEAR类型时，一定要区分’0’和0。因为字符串格式的’0’表示的YEAR值是2000而数字格式的0表示的YEAR值是0000。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>TIME<strong>类型</strong></p>
</li>
</ul>
<p>TIME类型用于表示时间值，它的显示形式一般为HH:MM:SS，其中，HH表示小时， MM表示分,SS表示秒。在MySQL中，可以使用以下3种格式指定TIME类型的值。<br>
1、以’D HH:MM:SS’字符串格式表示。其中，D表示日可取0—34之间的值, 插入数据时，小时的值等于(DX24+HH)。例如，输入’2 11:30:50’插入数据库中的日期为59:30:50。<br>
2、以’HHMMSS’字符串格式或者HHMMSS数字格式表示。 例如，输入’115454’或115454,插入数据库中的日期为11:54:54<br>
3、使用CURRENT_TIME或NOW()输入当前系统时间。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>DATETIME类型</p>
</li>
</ul>
<p>DATETIME类型用于表示日期和时间，它的显示形式为’YYYY-MM-DD HH: MM:SS’，其中，YYYY表示年，MM表示月，DD表示日，HH表示小时，MM表示分，SS 表示秒。在MySQL中，可以使用以下4种格式指定DATETIME类型的值。<br>
以’YYYY-MM-DD HH:MM:SS’或者’YYYYMMDDHHMMSS’字符串格式表示的日期和时间，取值范围为’1000-01-01 00:00:00’—‘9999-12-3 23:59:59’。例如，输入’2019-01-22 09:01:23’或 ‘20140122_0_90123’插入数据库中的 DATETIME 值都为 2019-01-22 09:01:23。<br>
1、以’YY-MM-DD HH:MM:SS’或者’YYMMDDHHMMSS’字符串格式表示的日期和时间，其中YY表示年，取值范围为’00’—‘99’。与DATE类型中的YY相同，‘00’— '69’范围的值会被转换为2000—2069范围的值，‘70’—'99’范围的值会被转换为1970—1999范围的值。<br>
2、以YYYYMMDDHHMMSS或者YYMMDDHHMMSS数字格式表示的日期 和时间。例如，插入20190122090123或者190122090123,插入数据库中的DATETIME值都 为 2019-01-22 09:01:23。<br>
3、使用NOW来输入当前系统的日期和时间。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>TIMESTAMP类型</p>
</li>
</ul>
<p>TIMESTAMP类型用于表示日期和时间，它的显示形式与DATETIME相同但取值范围比DATETIME小。在此，介绍几种TIMESTAMP类型与DATATIME类型不同的形式：<br>
1、使用CURRENT_TIMESTAMP输入系统当前日期和时间。<br>
2、输入NULL时系统会输入系统当前日期和时间。<br>
3、无任何输入时系统会输入系统当前日期和时间。</p>
<h3 id="二进制类型">二进制类型</h3>
<p>在MySQL中常用BLOB存储二进制类型的数据，例如：图片、PDF文档等。BLOB类型分为如下四种：</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>储存范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>TINYBLOB</td>
<td>0~255字节</td>
</tr>
<tr>
<td>BLOB</td>
<td>0~65535字节</td>
</tr>
<tr>
<td>MEDIUMBLOB</td>
<td>0~16777215字节</td>
</tr>
<tr>
<td>LONGBLOB</td>
<td>0~4294967295字节</td>
</tr>
</tbody>
</table>
<h2 id="数据库、数据表的基本操作">数据库、数据表的基本操作</h2>
<h3 id="数据库的基本操作">数据库的基本操作</h3>
<p>MySQL安装完成后，要想将数据存储到数据库的表中，首先要创建一个数据库。创建数据库就是在数据库系统中划分一块空间存储数据，语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">创建数据库</span><br><span class="line"><span class="keyword">create</span> database 数据库名称;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>创建一个叫db1的数据库MySQL命令：</span><br><span class="line"><span class="keyword">create</span> database db1;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>创建数据库后查看该数据库基本信息MySQL命令：</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database db1;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>查询出MySQL中所有的数据库MySQL命令：</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>将数据库的字符集修改为gbk MySQL命令：</span><br><span class="line"><span class="keyword">alter</span> database db1 <span class="type">character</span> <span class="keyword">set</span> gbk;</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>切换数据库 MySQL命令：</span><br><span class="line">use db1;</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>查看当前使用的数据库 MySQL命令：</span><br><span class="line"><span class="keyword">select</span> database();</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>删除数据库MySQL命令：</span><br><span class="line"><span class="keyword">drop</span> database db1;</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>退出数据库</span><br><span class="line">quit</span><br></pre></td></tr></table></figure>
<h3 id="数据表的基本操作">数据表的基本操作</h3>
<p>数据库创建成功后可在该数据库中创建数据表(简称为表)存储数据。请注意：在操作数据表之前应使用“USE 数据库名;”指定操作是在哪个数据库中进行先关操作，否则会抛出“No database selected”错误。 语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">         字段<span class="number">1</span> 字段类型,</span><br><span class="line">         字段<span class="number">2</span> 字段类型,</span><br><span class="line">         …</span><br><span class="line">         字段n 字段类型</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><figcaption><span>表示例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>创建学生表 MySQL命令：</span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"> id <span class="type">int</span>,</span><br><span class="line"> name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line"> gender <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line"> birthday <span class="type">date</span></span><br><span class="line"> );</span><br><span class="line"> </span><br><span class="line"><span class="number">2.</span>查看当前数据库中所有表</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>查表的基本信息</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> student;</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>查看表的字段信息</span><br><span class="line"><span class="keyword">desc</span> student;</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>修改表名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student rename <span class="keyword">to</span> stu;</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>修改字段名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu change name sname <span class="type">varchar</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>修改字段数据类型</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu modify sname <span class="type">int</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>增加字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu <span class="keyword">add</span> address <span class="type">varchar</span>(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">9.</span>删除字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu <span class="keyword">drop</span> address;</span><br><span class="line"></span><br><span class="line"><span class="number">10.</span>删除数据表</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> stu;</span><br></pre></td></tr></table></figure>
<h2 id="数据表的约束">数据表的约束</h2>
<p>为防止错误的数据被插入到数据表，MySQL中定义了一些维护数据库完整性的规则；这些规则常称为表的约束。常见约束如下：</p>
<table>
<thead>
<tr>
<th>约束条件</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>PRIMARY KEY</td>
<td>主键约束用于唯一标识对应的记录</td>
</tr>
<tr>
<td>FOREIGN KEY</td>
<td>外键约束</td>
</tr>
<tr>
<td>NOT NULL</td>
<td>非空约束</td>
</tr>
<tr>
<td>UNIQUE</td>
<td>唯一性约束</td>
</tr>
<tr>
<td>DEFAULT</td>
<td>默认值约束，用于设置字段的默认值</td>
</tr>
</tbody>
</table>
<p>以上五种约束条件针对表中字段进行限制从而保证数据表中数据的正确性和唯一性。换句话说，表的约束实际上就是表中数据的限制条件。</p>
<h3 id="主键约束">主键约束</h3>
<p>主键约束即primary key用于唯一的标识表中的每一行。被标识为主键的数据在表中是唯一的且其值不能为空。这点类似于我们每个人都有一个身份证号，并且这个身份证号是唯一的。 主键约束基本语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">字段名 数据类型 <span class="keyword">primary</span> key;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><figcaption><span>主键约束示例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>设置主键约束(<span class="keyword">primary</span> key)的第一种方式<span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 设置主键约束(<span class="keyword">primary</span> key)的第二·种方式</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student01(</span><br><span class="line">id <span class="type">int</span></span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line"><span class="keyword">primary</span> key(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>可使用<code>desc student01</code>命令查询</p>
<h3 id="非空约束">非空约束</h3>
<p>非空约束即 NOT NULL指的是字段的值不能为空，基本的语法格式如下所示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">字段名 数据类型 <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><figcaption><span>非空约束示例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student02(</span><br><span class="line">id <span class="type">int</span></span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="默认值约束">默认值约束</h3>
<p>默认值约束即DEFAULT用于给数据表中的字段指定默认值，即当在表中插入一条新记录时若未给该字段赋值，那么，数据库系统会自动为这个字段插入默认值；其基本的语法格式如下所示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">字段名 数据类型 <span class="keyword">DEFAULT</span> 默认值；</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><figcaption><span>默认值约束示例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student03(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">default</span> <span class="string">&#x27;male&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="唯一性约束">唯一性约束</h3>
<p>唯一性约束即UNIQUE用于保证数据表中字段的唯一性，即表中字段的值不能重复出现，其基本的语法格式如下所示：</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">字段名 数据类型 UNIQUE<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><figcaption><span>唯一性约束示例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student04(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="外键约束">外键约束</h3>
<h4 id="外键约束的创建">外键约束的创建</h4>
<p>外键约束即FOREIGN KEY常用于多张表之间的约束。基本语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 在创建数据表时语法如下：</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> 外键名 <span class="keyword">FOREIGN</span> KEY (从表外键字段) <span class="keyword">REFERENCES</span> 主表 (主键字段)</span><br><span class="line"><span class="comment">-- 将创建数据表创号后语法如下：</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 从表名 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> 外键名 <span class="keyword">FOREIGN</span> KEY (从表外键字段) <span class="keyword">REFERENCES</span> 主表 (主键字段);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><figcaption><span>外键约束示例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>创建一个学生表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student05(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>创建一个班级表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> class(</span><br><span class="line">classid <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">studentid <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>学生表作为主表，班级表作为副表设置外键</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> class <span class="keyword">add</span> <span class="keyword">constraint</span> fk_class_studentid <span class="keyword">foreign</span> key(studentid) <span class="keyword">references</span> student05(id);</span><br></pre></td></tr></table></figure>
<p>可通过<code>show create table class;</code>命令查看详细信息。</p>
<h4 id="外键约束的详细操作">外键约束的详细操作</h4>
<ol>
<li class="lvl-3">
<p>数据一致性概念</p>
</li>
</ol>
<p>大家知道：建立外键是为了保证数据的完整和统一性。但是，如果主表中的数据被删除或修改从表中对应的数据该怎么办呢？很明显，从表中对应的数据也应该被删除，否则数据库中会存在很多无意义的垃圾数据。</p>
<ol start="2">
<li class="lvl-3">
<p>删除外键</p>
</li>
</ol>
<p>语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 从表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> key 外键名；</span><br></pre></td></tr></table></figure>
<p>示例中删除外键的命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> class <span class="keyword">drop</span> <span class="keyword">foreign</span> key fk_class_studentid;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li class="lvl-3">
<p>关于外键约束需要注意的细节</p>
<ol>
<li class="lvl-6">从表里的外键通常为主表的主键</li>
<li class="lvl-6">从表里外键的数据类型必须与主表中主键的数据类型一致</li>
<li class="lvl-6">主表发生变化时应注意主表与从表的数据一致性问题</li>
</ol>
</li>
</ol>
<h2 id="数据表插入数据">数据表插入数据</h2>
<p>在MySQL通过INSERT语句向数据表中插入数据。在此，我们先准备一张学生表，代码如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">gender <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>向数据表中插入数据时，每个字段与其值是严格一一对应的。也就是说：每个值、值的顺序、值的类型必须与对应的字段相匹配。但是，各字段无须与其在表中定义的顺序一致，它们只要与 VALUES中值的顺序一致即可。同时，插入数据的方法和为表中所有字段插入数据一样，只是需要插入的字段由你自己指定。语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名（字段名<span class="number">1</span>,字段名<span class="number">2</span>,...) <span class="keyword">VALUES</span> (值 <span class="number">1</span>,值 <span class="number">2</span>,...);</span><br></pre></td></tr></table></figure>
<p>向表中插入多条数据的语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 [(字段名<span class="number">1</span>,字段名<span class="number">2</span>,...)]<span class="keyword">VALUES</span> (值 <span class="number">1</span>,值 <span class="number">2</span>,…),(值 <span class="number">1</span>,值 <span class="number">2</span>,…),...;</span><br></pre></td></tr></table></figure>
<p>在该方式中：(字段名1,字段名2,…)是可选的，它用于指定插入的字段名；(值 1,值 2,…),(值 1,值 2,…)表示要插入的记录，该记录可有多条并且每条记录之间用逗号隔开。示例如下：</p>
<figure class="highlight sql"><figcaption><span>向表中插入多条数据示例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student (id,name,age,gender) <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;lucy&#x27;</span>,<span class="number">17</span>,<span class="string">&#x27;female&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;male&#x27;</span>),(<span class="number">4</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;male&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="更新数据">更新数据</h2>
<p>在MySQL通过UPDATE语句更新数据表中的数据。在此，我们将就用六中的student学生表</p>
<ol>
<li class="lvl-3">
<p>UPDATE的基本语法为：</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 字段名<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>[,字段名<span class="number">2</span> <span class="operator">=</span>值<span class="number">2</span>,…] [<span class="keyword">WHERE</span> 条件表达式];</span><br></pre></td></tr></table></figure>
<p>在该语法中：字段名1、字段名2…用于指定要更新的字段名称；值1、值 2…用于表示字段的新数据；WHERE 条件表达式 是可选的，它用于指定更新数据需要满足的条件</p>
<ol start="2">
<li class="lvl-3">
<p>UPDATE更新部分数据</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">将name为tom的记录的age设置为<span class="number">20</span>并将其gender设置为female</span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> age<span class="operator">=</span><span class="number">20</span>,gender<span class="operator">=</span><span class="string">&#x27;female&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;tom&#x27;</span>;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li class="lvl-3">
<p>UPDATE更新全部数据</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> age<span class="operator">=</span><span class="number">18</span>;</span><br></pre></td></tr></table></figure>
<h2 id="删除数据">删除数据</h2>
<p>在MySQL通过DELETE语句删除数据表中的数据。在此，我们先准备一张数据表，代码如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"> id <span class="type">int</span>,</span><br><span class="line"> name <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line"> age <span class="type">int</span>,</span><br><span class="line"> gender <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line"> );</span><br><span class="line"> <span class="comment">-- 插入数据</span></span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> student (id,name,age,gender) <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;lucy&#x27;</span>,<span class="number">17</span>,<span class="string">&#x27;female&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;male&#x27;</span>),(<span class="number">4</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;male&#x27;</span>),(<span class="number">5</span>,<span class="string">&#x27;sal&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;female&#x27;</span>),(<span class="number">6</span>,<span class="string">&#x27;sun&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;male&#x27;</span>)</span><br><span class="line">,(<span class="number">7</span>,<span class="string">&#x27;sad&#x27;</span>,<span class="number">13</span>,<span class="string">&#x27;female&#x27;</span>),(<span class="number">8</span>,<span class="string">&#x27;sam&#x27;</span>,<span class="number">14</span>,<span class="string">&#x27;male&#x27;</span>);</span><br></pre></td></tr></table></figure>
<ol>
<li class="lvl-3">
<p>DELETE基本语法</p>
</li>
</ol>
<p>在该语法中：表名用于指定要执行删除操作的表；[WHERE 条件表达式]为可选参数用于指定删除的条件。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名 [<span class="keyword">WHERE</span> 条件表达式];</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>DELETE删除部分数据</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">删除age等于<span class="number">14</span>的所有记录</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> age<span class="operator">=</span><span class="number">14</span>;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li class="lvl-3">
<p>DELETE删除全部数据</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">删除student表中的所有记录</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li class="lvl-3">
<p>TRUNCATE与DELETE的区别</p>
</li>
</ol>
<p>TRUNCATE和DELETE都能实现删除表中的所有数据的功能，但两者也是有区别的：<br>
1、DELETE语句后可跟WHERE子句，可通过指定WHERE子句中的条件表达式只删除满足条件的部分记录；但是，TRUNCATE语句只能用于删除表中的所有记录。<br>
2、使用TRUNCATE语句删除表中的数据后，再次向表中添加记录时自动增加字段的默认初始值重新由1开始；使用DELETE语句删除表中所有记录后，再次向表中添加记录时自动增加字段的值为删除时该字段的最大值加1<br>
3、DELETE语句是DML语句，TRUNCATE语句通常被认为是DDL语句</p>
<h2 id="简单查询">简单查询</h2>
<p>简单查询即不含where的select语句。在此，我们讲解简单查询中最常用的两种查询：查询所有字段和查询指定字段。在此，先准备测试数据，代码如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> mydb;</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE mydb;</span><br><span class="line">USE mydb;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建student表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">    sid <span class="type">CHAR</span>(<span class="number">6</span>),</span><br><span class="line">    sname <span class="type">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    age <span class="type">INT</span>,</span><br><span class="line">    gender <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;male&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向student表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1001&#x27;</span>, <span class="string">&#x27;lili&#x27;</span>, <span class="number">14</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1002&#x27;</span>, <span class="string">&#x27;wang&#x27;</span>, <span class="number">15</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1003&#x27;</span>, <span class="string">&#x27;tywd&#x27;</span>, <span class="number">16</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1004&#x27;</span>, <span class="string">&#x27;hfgs&#x27;</span>, <span class="number">17</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1005&#x27;</span>, <span class="string">&#x27;qwer&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1006&#x27;</span>, <span class="string">&#x27;zxsd&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1007&#x27;</span>, <span class="string">&#x27;hjop&#x27;</span>, <span class="number">16</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1008&#x27;</span>, <span class="string">&#x27;tyop&#x27;</span>, <span class="number">15</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1009&#x27;</span>, <span class="string">&#x27;nhmk&#x27;</span>, <span class="number">13</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1010&#x27;</span>, <span class="string">&#x27;xdfv&#x27;</span>, <span class="number">17</span>, <span class="string">&#x27;female&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>数据表简单查询示例</p>
<figure class="highlight sql"><figcaption><span>数据表简单查询示例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>查询所有字段（方法不唯一）</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>查询指定字段（sid、sname）</span><br><span class="line"><span class="keyword">select</span> sid,sname <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>常数的查询（日期标记）</span><br><span class="line"><span class="keyword">select</span> sid,sname,<span class="string">&#x27;2021-03-02&#x27;</span> <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>从查询结果中过滤重复数据</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> gender <span class="keyword">from</span> student;</span><br><span class="line">注： 在<span class="keyword">SELECT</span>查询语句中<span class="keyword">DISTINCT</span>关键字只能用在第一个所查列名之前</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>算术运算符</span><br><span class="line"> <span class="keyword">select</span> sname,age<span class="operator">+</span><span class="number">10</span> <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>
<h2 id="函数">函数</h2>
<h3 id="聚合函数">聚合函数</h3>
<p>在开发中，我们常常有类似的需求：统计某个字段的最大值、最小值、 平均值等等。为此，MySQL中提供了聚合函数来实现这些功能。所谓聚合，就是将多行汇总成一行；其实，所有的聚合函数均如此——输入多行，输出一行。聚合函数具有自动滤空的功能，若某一个值为NULL，那么会自动将其过滤使其不参与运算。</p>
<p><strong>聚合函数使用规则：</strong><br>
只有SELECT子句和HAVING子句、ORDER BY子句中能够使用聚合函数。例如，在WHERE子句中使用聚合函数是错误的。接下来，我们学习常用聚合函数。</p>
<ol>
<li class="lvl-3">
<p>count()</p>
</li>
</ol>
<p>统计表中数据的行数或者统计指定列其值不为NULL的数据个数</p>
<p><em>查询有多少该表中有多少人</em></p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>max()</p>
</li>
</ol>
<p>计算指定列的最大值，如果指定列是字符串类型则使用字符串排序运算</p>
<p><em>查询该学生表中年纪最大的学生</em></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">max</span>(<span class="params">age</span>) <span class="keyword">from</span> student</span>;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li class="lvl-3">
<p>min()</p>
</li>
</ol>
<p>计算指定列的最小值，如果指定列是字符串类型则使用字符串排序运算</p>
<p>查询该学生表中年纪最小的学生 MySQL命令：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sname,<span class="built_in">min</span>(age) <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li class="lvl-3">
<p>sum()</p>
</li>
</ol>
<p>计算指定列的数值和，如果指定列类型不是数值类型则计算结果为0</p>
<p>查询该学生表中年纪的总和 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>(age) <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li class="lvl-3">
<p>avg()</p>
</li>
</ol>
<p>计算指定列的平均值，如果指定列类型不是数值类型则计算结果为</p>
<p>查询该学生表中年纪的平均数 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(age) <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>
<h3 id="其他函数">其他函数</h3>
<ol>
<li class="lvl-3">
<p>时间函数</p>
</li>
</ol>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NOW();</span><br><span class="line"><span class="keyword">SELECT</span> DAY (NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">DATE</span> (NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">TIME</span> (NOW());</span><br><span class="line"><span class="keyword">SELECT</span> YEAR (NOW());</span><br><span class="line"><span class="keyword">SELECT</span> MONTH (NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIME</span>();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span>();</span><br><span class="line"><span class="keyword">SELECT</span> ADDTIME(<span class="string">&#x27;14:23:12&#x27;</span>,<span class="string">&#x27;01:02:01&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(NOW(),<span class="type">INTERVAL</span> <span class="number">1</span> DAY);</span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(NOW(),<span class="type">INTERVAL</span> <span class="number">1</span> MONTH);</span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(NOW(),<span class="type">INTERVAL</span> <span class="number">1</span> DAY);</span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(NOW(),<span class="type">INTERVAL</span> <span class="number">1</span> MONTH);</span><br><span class="line"><span class="keyword">SELECT</span> DATEDIFF(<span class="string">&#x27;2019-07-22&#x27;</span>,<span class="string">&#x27;2019-05-05&#x27;</span>);</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>字符串函数</p>
</li>
</ol>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">--连接函数</span><br><span class="line"><span class="section">SELECT CONCAT ()</span></span><br><span class="line"><span class="section">--</span></span><br><span class="line">SELECT INSTR ();</span><br><span class="line">--统计长度</span><br><span class="line">SELECT LENGTH();</span><br></pre></td></tr></table></figure>
<ol start="3">
<li class="lvl-3">
<p>数学函数</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ABS</span>(<span class="number">-136</span>);</span><br><span class="line"><span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">3.14</span>);</span><br><span class="line"><span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEILING</span>(<span class="number">3.14</span>);</span><br></pre></td></tr></table></figure>
<h2 id="条件查询">条件查询</h2>
<p>数据库中存有大量数据，我们可根据需求获取指定的数据。此时，我们可在查询语句中通过WHERE子句指定查询条件对查询结果进行过滤。在开始学习条件查询之前，我们先准备测试数据，代码如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> mydb;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mydb;</span><br><span class="line">USE mydb;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建student表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">    sid <span class="type">CHAR</span>(<span class="number">6</span>),</span><br><span class="line">    sname <span class="type">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    age <span class="type">INT</span>,</span><br><span class="line">    gender <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;male&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向student表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1001&#x27;</span>, <span class="string">&#x27;lili&#x27;</span>, <span class="number">14</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1002&#x27;</span>, <span class="string">&#x27;wang&#x27;</span>, <span class="number">15</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1003&#x27;</span>, <span class="string">&#x27;tywd&#x27;</span>, <span class="number">16</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1004&#x27;</span>, <span class="string">&#x27;hfgs&#x27;</span>, <span class="number">17</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1005&#x27;</span>, <span class="string">&#x27;qwer&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1006&#x27;</span>, <span class="string">&#x27;zxsd&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1007&#x27;</span>, <span class="string">&#x27;hjop&#x27;</span>, <span class="number">16</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1008&#x27;</span>, <span class="string">&#x27;tyop&#x27;</span>, <span class="number">15</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1009&#x27;</span>, <span class="string">&#x27;nhmk&#x27;</span>, <span class="number">13</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1010&#x27;</span>, <span class="string">&#x27;xdfv&#x27;</span>, <span class="number">17</span>, <span class="string">&#x27;female&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1012&#x27;</span>, <span class="string">&#x27;lili&#x27;</span>, <span class="number">14</span>, <span class="string">&#x27;male&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (sid,sname,age,gender) <span class="keyword">VALUES</span> (<span class="string">&#x27;S_1013&#x27;</span>, <span class="string">&#x27;wang&#x27;</span>, <span class="number">15</span>, <span class="string">&#x27;female&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="关系运算符">关系运算符</h3>
<p>在WHERE中可使用关系运算符进行条件查询，常用的关系运算符如下所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">关系运算符</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">=</td>
<td style="text-align:center">等于</td>
</tr>
<tr>
<td style="text-align:center">&lt;&gt;</td>
<td style="text-align:center">不等于</td>
</tr>
<tr>
<td style="text-align:center">!=</td>
<td style="text-align:center">不等于</td>
</tr>
<tr>
<td style="text-align:center">&lt;</td>
<td style="text-align:center">小于</td>
</tr>
<tr>
<td style="text-align:center">&lt;=</td>
<td style="text-align:center">小于等于</td>
</tr>
<tr>
<td style="text-align:center">&gt;</td>
<td style="text-align:center">大于</td>
</tr>
<tr>
<td style="text-align:center">&gt;=</td>
<td style="text-align:center">大于等于</td>
</tr>
</tbody>
</table>
<h3 id="常用的关键字">常用的关键字</h3>
<ol>
<li class="lvl-3">
<p>AND关键字</p>
</li>
</ol>
<p>查询年纪大于15且性别为male的学生信息 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age&gt;<span class="number">15</span> and gender=<span class="string">&#x27;male&#x27;</span>;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>OR关键字</p>
</li>
</ol>
<p>查询年纪大于15或者性别为male的学生信息</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age&gt;<span class="number">15</span> or gender=<span class="string">&#x27;male&#x27;</span>;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li class="lvl-3">
<p>IN关键字</p>
</li>
</ol>
<p>IN关键字用于判断某个字段的值是否在指定集合中。如果字段的值恰好在指定的集合中，则将字段所在的记录将査询出来。</p>
<p>查询sid为S_1002和S_1003的学生信息</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="title">in</span> (<span class="params"><span class="string">&#x27;S_1002&#x27;</span>,<span class="string">&#x27;S_1003&#x27;</span></span>)</span>;</span><br></pre></td></tr></table></figure>
<p>查询sid为S_1001以外的学生的信息</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="keyword">not</span> <span class="title">in</span> (<span class="params"><span class="string">&#x27;S_1001&#x27;</span></span>)</span>;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li class="lvl-3">
<p>BETWEEN AND关键字</p>
</li>
</ol>
<p>BETWEEN AND用于判断某个字段的值是否在指定的范围之内。如果字段的值在指定范围内，则将所在的记录将查询出来（好像不太一定等于右边的还是左边的）</p>
<p>查询15到18岁的学生信息</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">15</span> <span class="keyword">and</span> <span class="number">18</span>;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li class="lvl-3">
<p>NULL关键字</p>
</li>
</ol>
<p>在MySQL中，使用 IS NULL关键字判断字段的值是否为空值。请注意：空值NULL不同于0，也不同于空字符串</p>
<p>查询sname不为空值的学生信息</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">is</span> not <span class="literal">null</span>;</span><br></pre></td></tr></table></figure>
<h3 id="LIKE关键字">LIKE关键字</h3>
<p>MySQL中可使用LIKE关键字可以判断两个字符串是否相匹配</p>
<ol>
<li class="lvl-4">
<p>普通字符串</p>
</li>
</ol>
<p>查询sname中与wang匹配的学生信息 MySQL命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">&#x27;wang&#x27;</span>;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>含有%通配的字符串</p>
</li>
</ol>
<p>%用于匹配任意长度的字符串。例如，字符串“a%”匹配以字符a开始任意长度的字符串</p>
<p>查询学生姓名以li开始的记录 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">&#x27;li%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>查询学生姓名以g结尾的记录 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">&#x27;%g&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>查询学生姓名包含s的记录 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">&#x27;%s%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li class="lvl-3">
<p>含有_通配的字符串</p>
</li>
</ol>
<p>下划线通配符只匹配单个字符，如果要匹配多个字符，需要连续使用多个下划线通配符。例如，字符串“ab_”匹配以字符串“ab”开始长度为3的字符串，如abc、abp等等；字符串“a__d”匹配在字符“a”和“d”之间包含两个字符的字符串，如&quot;abcd&quot;、&quot;atud&quot;等等。</p>
<p>查询学生姓名以zx开头且长度为4的记录 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">&#x27;zx__&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>查询学生姓名以g结尾且长度为4的记录 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">&#x27;___g&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="使用LIMIT限制查询结果的数量">使用LIMIT限制查询结果的数量</h3>
<p>当执行查询数据时可能会返回很多条记录，而用户需要的数据可能只是其中的一条或者几条</p>
<p>查询学生表中年纪最小的3位同学 MySQL命令：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span> <span class="keyword">limit</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure>
<h3 id="使用GROUP-BY进行分组查询">使用GROUP BY进行分组查询</h3>
<p>GROUP BY 子句可像切蛋糕一样将表中的数据进行分组，再进行查询等操作。换言之，可通俗地理解为：通过GROUP BY将原来的表拆分成了几张小表。</p>
<p>接下来，我们通过一个例子开始学习GROUP BY，代码如下</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> mydb;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mydb;</span><br><span class="line">USE mydb;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee (</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    <span class="type">name</span> <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">    salary <span class="type">int</span>,</span><br><span class="line">    departmentnumber <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向员工表中插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;tome&#x27;</span>,<span class="number">2000</span>,<span class="number">1001</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;lucy&#x27;</span>,<span class="number">9000</span>,<span class="number">1002</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;joke&#x27;</span>,<span class="number">5000</span>,<span class="number">1003</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;wang&#x27;</span>,<span class="number">3000</span>,<span class="number">1004</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">&#x27;chen&#x27;</span>,<span class="number">3000</span>,<span class="number">1001</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">6</span>,<span class="string">&#x27;yukt&#x27;</span>,<span class="number">7000</span>,<span class="number">1002</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">&#x27;rett&#x27;</span>,<span class="number">6000</span>,<span class="number">1003</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">8</span>,<span class="string">&#x27;mujk&#x27;</span>,<span class="number">4000</span>,<span class="number">1004</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">values</span>(<span class="number">9</span>,<span class="string">&#x27;poik&#x27;</span>,<span class="number">3000</span>,<span class="number">1001</span>);</span><br></pre></td></tr></table></figure>
<ol>
<li class="lvl-3">
<p>GROUP BY和聚合函数一起使用</p>
</li>
</ol>
<p>统计各部门员工个数 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*), departmentnumber <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> departmentnumber;</span><br></pre></td></tr></table></figure>
<p>统计部门编号大于1001的各部门员工个数 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*), departmentnumber <span class="keyword">from</span> employee <span class="keyword">where</span> departmentnumber&gt;<span class="number">1001</span> <span class="keyword">group</span> <span class="keyword">by</span> departmentnumber;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>GROUP BY和聚合函数HAVING一起使用</p>
</li>
</ol>
<p>统计工资总和大于8000的部门 MySQL命令：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(salary),departmentnumber <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> departmentnumber <span class="keyword">having</span> <span class="built_in">sum</span>(salary)&gt;<span class="number">8000</span>;</span><br></pre></td></tr></table></figure>
<h3 id="使用ORDER-BY对查询结果排序">使用ORDER BY对查询结果排序</h3>
<p>从表中査询出来的数据可能是无序的或者其排列顺序不是我们期望的。为此，我们可以使用ORDER BY对查询结果进行排序。其语法格式如下所示：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段名<span class="number">1</span>,字段名<span class="number">2</span>,…</span><br><span class="line"><span class="keyword">FROM</span> 表名</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 字段名<span class="number">1</span> [<span class="keyword">ASC</span> 丨 <span class="keyword">DESC</span>],字段名<span class="number">2</span> [<span class="keyword">ASC</span> | <span class="keyword">DESC</span>];</span><br></pre></td></tr></table></figure>
<p>在该语法中：字段名1、字段名2是查询结果排序的依据；参数 ASC表示按照升序排序，DESC表示按照降序排序；默认情况下，按照ASC方式排序。通常情况下，ORDER BY子句位于整个SELECT语句的末尾。</p>
<p>查询所有学生并按照年纪大小升序排列 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure>
<p>查询所有学生并按照年纪大小降序排列 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure>
<h2 id="别名设置">别名设置</h2>
<p>在査询数据时可为表和字段取別名，该别名代替表和字段的原名参与查询操作。</p>
<ol>
<li class="lvl-3">
<p>为表取名</p>
</li>
</ol>
<p>在查询操作时，假若表名很长使用起来就不太方便，此时可为表取一个別名，用该别名来代替表的名称。语法格式如下所示：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> 表名 [<span class="keyword">AS</span>] 表的别名 <span class="keyword">WHERE</span> .... ;</span><br></pre></td></tr></table></figure>
<p>将student改为stu查询整表 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">as</span> stu;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>为字段取名</p>
</li>
</ol>
<p>在查询操作时，假若字段名很长使用起来就不太方便，此时可该字段取一个別名，用该别名来代替字段的名称。语法格式如下所示：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段名<span class="number">1</span> [<span class="keyword">AS</span>] 别名<span class="number">1</span> , 字段名<span class="number">2</span> [<span class="keyword">AS</span>] 别名<span class="number">2</span> , ... <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> ... ;</span><br></pre></td></tr></table></figure>
<p>将student中的name取别名为“姓名” 查询整表 MySQL命令：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="type">name</span> <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>,id <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>
<h2 id="表的关联关系">表的关联关系</h2>
<p>在实际开发中数据表之间存在着各种关联关系。在此，介绍MySQL中数据表的三种关联关系。多对一多对一(亦称为一对多)是数据表中最常见的一种关系。例如：员工与部门之间的关系，一个部门可以有多个员工；而一个员工不能属于多个部门只属于某个部门。在多对一的表关系 中，应将外键建在多的一方否则会造成数据的冗余。多对多多对多是数据表中常见的一种关系。例如：学生与老师之间的关系，一个学生可以有多个老师而且一个老师有多个学生。通常情况下，为了实现这种关系需要定义一张中间表(亦称为连接表)该表会存在两个外键分别参照老师表和学生表。一对一在开发过程中，一对一的关联关系在数据库中并不常见；因为以这种方式存储的信息通常会放在同一张表中。接下来，我们来学习在一对多的关联关系中如果添加和删除数据。先准备一些测试数据，代码如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> student;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="keyword">class</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建班级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">class</span>(</span><br><span class="line">    cid <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    cname <span class="type">varchar</span>(<span class="number">30</span>) </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line">    sid <span class="type">int</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    sname <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">    classid <span class="type">int</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 为学生表添加外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_student_classid <span class="keyword">FOREIGN KEY</span>(classid) <span class="keyword">REFERENCES</span> <span class="keyword">class</span>(cid);</span><br><span class="line"><span class="comment">-- 向班级表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span>(cid,cname)<span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;Java&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span>(cid,cname)<span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;Python&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向学生表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(sid,sname,classid)<span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;tome&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(sid,sname,classid)<span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;lucy&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(sid,sname,classid)<span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;lili&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(sid,sname,classid)<span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;domi&#x27;</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<ol>
<li class="lvl-3">
<p>关联查询</p>
</li>
</ol>
<p>查询Java班的所有学生 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> classid=(<span class="keyword">select</span> cid <span class="keyword">from</span> <span class="keyword">class</span> <span class="title class_">where</span> cname=<span class="string">&#x27;Java&#x27;</span>);</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>关于关联关系的数据删除</p>
</li>
</ol>
<p>请从班级表中删除Java班级。在此，请注意：班级表和学生表之间存在关联关系；要删除Java班级，应该先删除学生表中与该班相关联的学生。否则，假若先删除Java班那么学生表中的cid就失去了关联</p>
<p>删除Java班 MySQL命令：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> from student where classid=(<span class="keyword">select</span> cid from <span class="class"><span class="keyword">class</span> <span class="title">where</span> <span class="title">cname</span>=&#x27;<span class="title">Java</span>&#x27;)</span>;</span><br><span class="line"><span class="keyword">delete</span> from <span class="class"><span class="keyword">class</span> <span class="title">where</span> <span class="title">cname</span>=&#x27;<span class="title">Java</span>&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h2 id="多表连接查询">多表连接查询</h2>
<h3 id="交叉连接查询">交叉连接查询</h3>
<p>交叉连接返回的结果是被连接的两个表中所有数据行的笛卡儿积；比如：集合A={a,b}，集合B={0,1,2}，则集合A和B的笛卡尔积为{(a,0),(a,1),(a,2),(b,0),(b,1),(b,2)}。所以，交叉连接也被称为笛卡尔连接，其语法格式如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> 表<span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<p><font class="notice">注：在该语法中，CROSS JOIN用于连接两个要查询的表，通过该语句可以查询两个表中所有的数据组合。</font></p>
<p><strong>由于这个交叉连接查询在实际运用中没有任何意义，所以只做为了解即可</strong></p>
<h3 id="内链接查询">内链接查询</h3>
<p>内连接(Inner Join)又称简单连接或自然连接，是一种非常常见的连接查询。内连接使用比较运算符对两个表中的数据进行比较并列出与连接条件匹配的数据行，组合成新的 记录。也就是说在内连接查询中只有满足条件的记录才能出现在查询结果中。其语法格式如下：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 查询字段<span class="number">1</span>,查询字段<span class="number">2</span>, ... <span class="keyword">FROM</span> 表<span class="number">1</span> [<span class="keyword">INNER</span>] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 表<span class="number">1.</span>关系字段=表<span class="number">2.</span>关系字段</span><br></pre></td></tr></table></figure>
<p>在该语法中：INNER JOIN用于连接两个表，ON来指定连接条件；其中INNER可以省略。</p>
<p>准备数据，代码如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 若存在数据库mydb则删除</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> mydb;</span><br><span class="line"><span class="comment">-- 创建数据库mydb</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mydb;</span><br><span class="line"><span class="comment">-- 选择数据库mydb</span></span><br><span class="line">USE mydb;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> department(</span><br><span class="line">  did <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY KEY</span>, </span><br><span class="line">  dname <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee (</span><br><span class="line">  eid <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY KEY</span>, </span><br><span class="line">  ename <span class="type">varchar</span> (<span class="number">20</span>), </span><br><span class="line">  eage <span class="type">int</span> (<span class="number">2</span>), </span><br><span class="line">  departmentid <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向部门表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> department <span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;财务部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> department <span class="keyword">VALUES</span>(<span class="number">1002</span>,<span class="string">&#x27;技术部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> department <span class="keyword">VALUES</span>(<span class="number">1003</span>,<span class="string">&#x27;行政部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> department <span class="keyword">VALUES</span>(<span class="number">1004</span>,<span class="string">&#x27;生活部&#x27;</span>);</span><br><span class="line"><span class="comment">-- 向员工表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">19</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">18</span>,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">20</span>,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="number">20</span>,<span class="number">1004</span>);</span><br></pre></td></tr></table></figure>
<p>查询员工姓名及其所属部门名称 MySQL命令：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> employee.ename,department.dname <span class="keyword">from</span> department <span class="keyword">inner</span> <span class="keyword">join</span> employee <span class="keyword">on</span> department.did=employee.departmentid;</span><br></pre></td></tr></table></figure>
<h3 id="外连接查询">外连接查询</h3>
<p>在使用内连接查询时我们发现：返回的结果只包含符合查询条件和连接条件的数据。但是，有时还需要在返回查询结果中不仅包含符合条件的数据，而且还包括左表、右表或两个表中的所有数据，此时我们就需要使用外连接查询。外连接又分为左(外)连接和右(外)连接。其语法格式如下：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 查询字段<span class="number">1</span>,查询字段<span class="number">2</span>, ... <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">LEFT</span> | <span class="keyword">RIGHT</span> [<span class="keyword">OUTER</span>] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 表<span class="number">1.</span>关系字段=表<span class="number">2.</span>关系字段 <span class="keyword">WHERE</span> 条件</span><br></pre></td></tr></table></figure>
<p>由此可见，外连接的语法格式和内连接非常相似，只不过使用的是LEFT [OUTER] JOIN、RIGHT [OUTER] JOIN关键字。其中，关键字左边的表被称为左表，关键字右边的表被称为右表；OUTER可以省略。</p>
<p>在使用左(外)连接和右(外)连接查询时，查询结果是不一致的，具体如下：</p>
<p><strong>1、LEFT [OUTER] JOIN 左(外)连接：返回包括左表中的所有记录和右表中符合连接条件的记录。<br>
2、RIGHT [OUTER] JOIN 右(外)连接：返回包括右表中的所有记录和左表中符合连接条件的记录。</strong></p>
<p>先准备数据，代码如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 若存在数据库mydb则删除</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> mydb;</span><br><span class="line"><span class="comment">-- 创建数据库mydb</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mydb;</span><br><span class="line"><span class="comment">-- 选择数据库mydb</span></span><br><span class="line">USE mydb;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建班级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">class</span>(</span><br><span class="line">  cid <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY KEY</span>, </span><br><span class="line">  cname <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">  sid <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY KEY</span>, </span><br><span class="line">  sname <span class="type">varchar</span> (<span class="number">20</span>), </span><br><span class="line">  sage <span class="type">int</span> (<span class="number">2</span>), </span><br><span class="line">  classid <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 向班级表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;Java&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1002</span>,<span class="string">&#x27;C++&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1003</span>,<span class="string">&#x27;Python&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1004</span>,<span class="string">&#x27;PHP&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向学生表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">20</span>,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">21</span>,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">24</span>,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="number">23</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;Jack&#x27;</span>,<span class="number">22</span>,<span class="number">1009</span>);</span><br></pre></td></tr></table></figure>
<ol>
<li class="lvl-3">
<p>左（外）连接查询</p>
</li>
</ol>
<p>左(外)连接的结果包括LEFT JOIN子句中指定的左表的所有记录，以及所有满足连接条件的记录。如果左表的某条记录在右表中不存在则在右表中显示为空。</p>
<p>查询每个班的班级ID、班级名称及该班的所有学生的名字 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">class</span>.cid,<span class="keyword">class</span>.cname,student.sname <span class="keyword">from</span> <span class="keyword">class</span> <span class="title class_">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> student on <span class="keyword">class</span>.cid=student.classid;</span><br></pre></td></tr></table></figure>
<p>运行效果展示</p>
<p><img src="/posts/c826a854//1aa93ef85390eaa0e11bbb16fefeedb6.png" alt="在这里插入图片描述"></p>
<p><font class="notice">展示结果分析：<br>
1、分别找出Java班、C++班、Python班的学生 <br>2、右表的Jack不满足查询条件故其没有出现在查询结果中 <br>3、虽然左表的PHP班没有学生，但是任然显示了PHP的信息；但是，它对应的学生名字为NULL</font></p>
<ol start="2">
<li class="lvl-3">
<p>右（外）连接查询</p>
</li>
</ol>
<p>右(外)连接的结果包括RIGHT JOIN子句中指定的右表的所有记录，以及所有满足连接条件的记录。如果右表的某条记录在左表中没有匹配，则左表将返回空值。</p>
<p>查询每个班的班级ID、班级名称及该班的所有学生的名字 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">class</span>.cid,<span class="keyword">class</span>.cname,student.sname <span class="keyword">from</span> <span class="keyword">class</span> <span class="title class_">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> student on <span class="keyword">class</span>.cid=student.classid;</span><br></pre></td></tr></table></figure>
<p>运行效果展示</p>
<p><img src="/posts/c826a854//dd82b94cb3886aaa58c04a9cf89c38eb.png" alt="在这里插入图片描述"></p>
<p><font class="notice">展示结果分析：<br><br>
1、分别找出Java班、C++班、Python班的学生<br><br>
2、左表的PHP班不满足查询条件故其没有出现在查询结果中<br><br>
3、虽然右表的jack没有对应班级，但是任然显示王跃跃的信息；但是，它对应的班级以及班级编号均为NULL</font></p>
<h2 id="子查询">子查询</h2>
<p>子查询是指一个查询语句嵌套在另一个查询语句内部的查询；该查询语句可以嵌套在一个 SELECT、SELECT…INTO、INSERT…INTO等语句中。在执行查询时，首先会执行子查询中的语句，再将返回的结果作为外层查询的过滤条件。在子査询中通常可以使用比较运算符和IN、EXISTS、ANY、ALL等关键字。</p>
<p>准备数据，代码如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> student;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="keyword">class</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建班级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">class</span>(</span><br><span class="line">  cid <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY KEY</span>, </span><br><span class="line">  cname <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">  sid <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY KEY</span>, </span><br><span class="line">  sname <span class="type">varchar</span> (<span class="number">20</span>), </span><br><span class="line">  sage <span class="type">int</span> (<span class="number">2</span>), </span><br><span class="line">  classid <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向班级表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;Java&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1002</span>,<span class="string">&#x27;C++&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1003</span>,<span class="string">&#x27;Python&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1004</span>,<span class="string">&#x27;PHP&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1005</span>,<span class="string">&#x27;Android&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向学生表插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">20</span>,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">21</span>,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">24</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="number">23</span>,<span class="number">1004</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;小明&#x27;</span>,<span class="number">21</span>,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">6</span>,<span class="string">&#x27;小红&#x27;</span>,<span class="number">26</span>,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">7</span>,<span class="string">&#x27;小亮&#x27;</span>,<span class="number">27</span>,<span class="number">1002</span>);</span><br></pre></td></tr></table></figure>
<ol>
<li class="lvl-3">
<p>带比较运算符的查询</p>
</li>
</ol>
<p>比较运算符前面我们提到过得，就是&gt;、&lt;、=、&gt;=、&lt;=、!=等</p>
<p>查询张三同学所在班级的信息 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">class</span> <span class="title class_">where</span> cid=(<span class="keyword">select</span> classid <span class="keyword">from</span> student <span class="keyword">where</span> sname=<span class="string">&#x27;张三&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>查询比张三同学所在班级编号还大的班级的信息 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">class</span> <span class="title class_">where</span> cid&gt;(<span class="keyword">select</span> classid <span class="keyword">from</span> student <span class="keyword">where</span> sname=<span class="string">&#x27;张三&#x27;</span>);</span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<p>带EXISTS关键字的查询</p>
</li>
</ol>
<p>EXISTS关键字后面的参数可以是任意一个子查询， 它不产生任何数据只返回TRUE或FALSE。当返回值为TRUE时外层查询才会 执行</p>
<p>假如王五同学在学生表中则从班级表查询所有班级信息 MySQL命令：</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">class</span> <span class="title class_">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname=<span class="string">&#x27;王五&#x27;</span>);</span><br></pre></td></tr></table></figure>
<ol start="3">
<li class="lvl-3">
<p>带ANY关键字的子查询</p>
</li>
</ol>
<p>ANY关键字表示满足其中任意一个条件就返回一个结果作为外层查询条件。</p>
<p>查询比任一学生所属班级号还大的班级编号 MySQL命令：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * from <span class="class"><span class="keyword">class</span> <span class="title">where</span> <span class="title">cid</span> &gt; <span class="title">any</span> (<span class="title">select</span> <span class="title">classid</span> <span class="title">from</span> <span class="title">student</span>)</span>;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li class="lvl-3">
<p>带ALL关键字的子查询</p>
</li>
</ol>
<p>ALL关键字与ANY有点类似，只不过带ALL关键字的子査询返回的结果需同时满足所有内层査询条件。</p>
<p>查询比所有学生所属班级号还大的班级编号 MySQL命令：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * from <span class="class"><span class="keyword">class</span> <span class="title">where</span> <span class="title">cid</span> &gt; <span class="title">all</span> (<span class="title">select</span> <span class="title">classid</span> <span class="title">from</span> <span class="title">student</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>关于外键</p>
<p><a href="https://blog.csdn.net/weixin_45851945/article/details/114287877">MySQL 有这一篇就够（呕心狂敲37k字，只为博君一点赞！！！）</a></p>
]]></content>
      <tags>
        <tag>MYSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】typora知识总结</title>
    <url>/posts/287bb156/</url>
    <content><![CDATA[<h2 id="Markdown语法">Markdown语法</h2>
<h3 id="快捷键汇总">快捷键汇总</h3>
<table>
<thead>
<tr>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">加粗</td>
<td style="text-align:center">Ctrl+B</td>
<td style="text-align:center">插入图像</td>
<td style="text-align:center">Ctrl+Shift+I</td>
</tr>
<tr>
<td style="text-align:center">斜体</td>
<td style="text-align:center">Ctrl+I</td>
<td style="text-align:center">删除线</td>
<td style="text-align:center">Alt+Shift+5</td>
</tr>
<tr>
<td style="text-align:center">下划线</td>
<td style="text-align:center">Ctrl+U</td>
<td style="text-align:center">公式块</td>
<td style="text-align:center">Ctrl+Shift+M</td>
</tr>
<tr>
<td style="text-align:center">超链接</td>
<td style="text-align:center">Ctrl+K</td>
<td style="text-align:center">代码块</td>
<td style="text-align:center">Ctrl+Shift+K</td>
</tr>
<tr>
<td style="text-align:center">表格</td>
<td style="text-align:center">Ctrl+T</td>
<td style="text-align:center">代码段</td>
<td style="text-align:center">Ctrl+Shift+`</td>
</tr>
<tr>
<td style="text-align:center">引用</td>
<td style="text-align:center">&gt;+空格</td>
<td style="text-align:center">退出引用</td>
<td style="text-align:center">Shift+Tab</td>
</tr>
<tr>
<td style="text-align:center">段落</td>
<td style="text-align:center">Ctrl+0</td>
<td style="text-align:center">有序列表</td>
<td style="text-align:center">Ctrl+Shift+[</td>
</tr>
<tr>
<td style="text-align:center">标题</td>
<td style="text-align:center">Ctrl+数字</td>
<td style="text-align:center">无序列表</td>
<td style="text-align:center">Ctrl+Shift+]</td>
</tr>
<tr>
<td style="text-align:center">全选</td>
<td style="text-align:center">Ctrl+A</td>
<td style="text-align:center">选中行/句</td>
<td style="text-align:center">Ctrl+L</td>
</tr>
<tr>
<td style="text-align:center">选中段落</td>
<td style="text-align:center">Ctrl+E</td>
<td style="text-align:center">选中当前词</td>
<td style="text-align:center">Ctrl+D</td>
</tr>
<tr>
<td style="text-align:center">跳转所选</td>
<td style="text-align:center">Ctrl+J</td>
<td style="text-align:center">跳转文首/末</td>
<td style="text-align:center">Ctrl+Home/End</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">源代码模式</td>
<td style="text-align:center">Ctrl+/</td>
</tr>
</tbody>
</table>
<span id="more"></span>
<h3 id="段落">段落</h3>
<h4 id="标题">标题</h4>
<p>使用 # 可以表示标题，一级标题对应一个 # ，二级标题对应两个 # 号，最多至六级标题。在Typora中，# 后要紧接着一个空格才能表示标题，否则就是普通字符。</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># h1   <span class="comment">//一级标题 对应 &lt;h1&gt; &lt;/h1&gt;</span></span><br><span class="line">## h2   <span class="comment">//二级标题 对应 &lt;h2&gt; &lt;/h2&gt;</span></span><br><span class="line">### h3  <span class="comment">//三级标题 对应 &lt;h3&gt; &lt;/h3&gt;</span></span><br><span class="line">#### h4  <span class="comment">//四级标题 对应 &lt;h4&gt; &lt;/h4&gt;</span></span><br><span class="line">##### h5  <span class="comment">//五级标题 对应 &lt;h5&gt; &lt;/h5&gt;</span></span><br><span class="line">###### h6  <span class="comment">//六级标题 对应 &lt;h6&gt; &lt;/h6&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="字体">字体</h4>
<table>
<thead>
<tr>
<th style="text-align:center">格式</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">展示</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">*这是斜体*<br>_这是斜体_</td>
<td style="text-align:center">斜体文本</td>
<td style="text-align:center">Ctrl+I</td>
<td style="text-align:center"><em>这是斜体</em></td>
</tr>
<tr>
<td style="text-align:center">**这是粗体**<br>__这是粗体__</td>
<td style="text-align:center">粗体文本</td>
<td style="text-align:center">Crtl+B</td>
<td style="text-align:center"><strong>这是粗体</strong></td>
</tr>
<tr>
<td style="text-align:center">***这是粗斜体***<br>___这是粗斜体___</td>
<td style="text-align:center">粗斜体文本</td>
<td style="text-align:center">无</td>
<td style="text-align:center"><em><strong>这是粗斜体</strong></em></td>
</tr>
</tbody>
</table>
<p>在hexo中，为避免字体样式错误，最好不要让修改字体样式的标识符中紧挨别的字符，或者在两端外添加空格。以如下代码进行示范：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="strong">**你好**</span>。我是全世界最帅的人</span><br><span class="line"><span class="strong">**你好。**</span>我是全世界最帅的人</span><br><span class="line"><span class="strong">**你好。**</span> 我是全世界最帅的人</span><br></pre></td></tr></table></figure>
<p><font class="notice">注：第二行其实没有空格，因为装了auto_spacing，强制加了空格</font></p>
<p><strong>你好</strong>。我是全世界最帅的人</p>
<p>**你好。**我是全世界最帅的人</p>
<p><strong>你好。</strong> 我是全世界最帅的人</p>
<p><font size="2">注：在typora中，并不会造成错误</font></p>
<h4 id="代码">代码</h4>
<p>如果是一行代码，可以使用段内代码块来表示，用一对 <strong>'</strong>（数字1旁边的符号）括住代码。比如<code>printf(&quot;Hello World!&quot;)</code></p>
<p>如果是代码段，那么可以使用<strong>三个 ` 加Enter/空格+编程语言</strong>来表示。如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Hello world!\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以在代码块的右下角选择编程语言。</p>
<h4 id="链接-a-id-t1p8-a">链接<a id="t1p8"></a></h4>
<p>我们可以使用链接打开网页，也可以打开本地文件和实现页内跳转。链接的几种使用方式如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>.<span class="selector-attr">[链接文字]</span>(链接地址)</span><br><span class="line"><span class="number">2</span>.&lt;链接地址&gt;</span><br><span class="line"><span class="number">3</span>.<span class="selector-attr">[链接文字]</span><span class="selector-attr">[链接ID]</span></span><br><span class="line">  <span class="selector-attr">[链接ID]</span>:http:<span class="comment">//XXXXXXXX.XXX</span></span><br><span class="line"><span class="number">4</span>.<span class="selector-attr">[链接文字]</span><span class="selector-attr">[]</span></span><br><span class="line">  <span class="selector-attr">[链接文字]</span>:http:<span class="comment">//XXXXXXXX.XXX</span></span><br></pre></td></tr></table></figure>
<p>以下列样例进行演示：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>.<span class="selector-attr">[百度]</span>(https:<span class="comment">//www.baidu.com/ &quot;百度搜索&quot;)   绝对链接</span></span><br><span class="line"><span class="number">2</span>.&lt;https:<span class="comment">//www.baidu.com/&gt;</span></span><br><span class="line"><span class="number">3</span>.<span class="selector-attr">[About]</span>(/about/ <span class="string">&quot;关于我&quot;</span>)   相对链接</span><br><span class="line"><span class="number">4</span>.<span class="selector-attr">[打开hello-word文档]</span>(../<span class="number">4</span>a17b156 <span class="string">&quot;hello-world&quot;</span>)  相对链接打开文章</span><br><span class="line"><span class="number">5</span>.<span class="selector-attr">[打开002.png照片]</span>(../../images/<span class="number">002</span><span class="selector-class">.png</span> <span class="string">&quot;002.png&quot;</span>)  相对链接打开图片</span><br><span class="line"><span class="number">6</span>.<span class="selector-attr">[My Home]</span><span class="selector-attr">[ID]</span></span><br><span class="line"><span class="selector-attr">[ID]</span>:https:<span class="comment">//www.mcorazon.top &quot;我的博客主页&quot;</span></span><br><span class="line"><span class="number">7</span>.<span class="selector-attr">[My Home]</span><span class="selector-attr">[]</span></span><br><span class="line"><span class="selector-attr">[My Home]</span>:https:<span class="comment">//www.mcorazon.top &quot;我的博客主页&quot;</span></span><br><span class="line"><span class="number">8</span>.<span class="selector-attr">[跳转到此小节首]</span>(#t1p8）</span><br></pre></td></tr></table></figure>
<p><font size="2"><em>注：1. 引号部分表示title，可以省略。样式2不可加title<br>2. 不能使用<code>&lt;  &gt;</code>跳转本地文件，如&lt;../../images/002.png&gt; ，其并不会表示为可连接状态<br>3.同时，使用第八个样例时需要添加锚点，在1.8的标题后添加了<code>&lt;a id=&quot;t1p8&quot;&gt;&lt;/a&gt;</code></em></font></p>
<p>以上代码的结果如下：</p>
<p>1.<a href="https://www.baidu.com/" title="百度搜索">百度</a>      绝对链接<br>
2.&lt;<a href="https://www.baidu.com/">https://www.baidu.com/</a> &gt;<br>
3.<a href="/about/" title="关于我">About</a>       相对链接<br>
4.<a href="../4a17b156" title="hello-world">打开hello-word文档</a>      相对链接打开文章<br>
5.<a href="../../images/002.png" title="002.png">打开002.png照片</a>      相对链接打开图片<br>
6.<a href="https://www.mcorazon.top" title="我的博客主页">My Home</a>     我的博客主页</p>
<p>7.<a href="https://www.mcorazon.top" title="我的博客主页">My Home</a>     我的博客主页</p>
<p>8.<a href="#t1p8">跳转到此小节首</a></p>
<h4 id="上标下标">上标下标</h4>
<p>上下标可以使用<code>^X^</code>，<code>~X~</code>来实现。如：</p>
<p>上标：a<sup>X</sup>，下标：a<sub>X</sub></p>
<p><s>如果作为上标、下标的符号不止一个，则需要用花括号{}将其括起来。如：</s></p>
<p><s>上 标 为 12 ： a 12 , 下 标 为 34 ： a 34 上标为12：a<sup>{12},下标为34：a~{34</sup>2^}~ 上标为12：a<sup>12</sup>,下标为34：a34</s></p>
<h4 id="特殊符号">特殊符号</h4>
<ul class="lvl-0">
<li class="lvl-2">
<p>（1）对于 Markdown 中的语法符号，前面加反斜线\即可显示符号本身。</p>
</li>
<li class="lvl-2">
<p>（2）其他特殊字符使用Unicode码表示，示例如下：</p>
<p><img src="/posts/287bb156//image-20241110173249216.png" alt="image-20241110173249216"></p>
</li>
</ul>
<h3 id="其他">其他</h3>
<h4 id="各种线">各种线</h4>
<p>你可以在一行中用三个以上的星号(*)、减号(-)、底线(_)来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">***</span></span><br><span class="line"><span class="string">___</span></span><br></pre></td></tr></table></figure>
<hr>
<hr>
<hr>
<h4 id="列表">列表</h4>
<ol>
<li class="lvl-3">
<p><strong>无序列表</strong></p>
</li>
</ol>
<p>使用*，+或-标记符号加空格来表示无需列表项，示例如下</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">+</span> 第一项</span><br><span class="line"><span class="bullet">+</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br></pre></td></tr></table></figure>
<ul class="lvl-0">
<li class="lvl-2">
<p>第一项</p>
</li>
<li class="lvl-2">
<p>第二项</p>
</li>
</ul>
<ul class="lvl-0">
<li class="lvl-2">
<p>第一项</p>
</li>
<li class="lvl-2">
<p>第二项</p>
</li>
</ul>
<ul class="lvl-0">
<li class="lvl-2">
<p>第一项</p>
</li>
<li class="lvl-2">
<p>第二项</p>
</li>
</ul>
<ol start="2">
<li class="lvl-3">
<p><strong>有序列表</strong></p>
</li>
</ol>
<p>使用数字加.再加空格来表示有序列表，其中，数字并不重要。示例如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">3.</span> 第二项</span><br><span class="line"><span class="bullet">10.</span> 第三项</span><br></pre></td></tr></table></figure>
<ol>
<li class="lvl-3">
<p>第一项</p>
</li>
<li class="lvl-3">
<p>第二项</p>
</li>
<li class="lvl-3">
<p>第三项</p>
</li>
<li class="lvl-3">
<p><strong>嵌套列表</strong></p>
</li>
</ol>
<p>首先使用<code>*</code>、<code>+</code>或<code>-</code>进入列表，然后回车换行，会发现系统自动生成列表第二项，此时按下<strong>Tab</strong>键，列表第二项变为第一项的子列表。<strong>按回车退出当前列表</strong>。可以在无序列表中嵌套有序列表。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 1. 一</span><br><span class="line"><span class="bullet">   1.</span> 一.一</span><br><span class="line"><span class="bullet">      1.</span> 一.一.一</span><br><span class="line"><span class="bullet">      2.</span> 一.一.二</span><br></pre></td></tr></table></figure>
<ol>
<li class="lvl-3">
<p>一</p>
<ol>
<li class="lvl-6">
<p>一.一</p>
<ol>
<li class="lvl-9">一.一.一</li>
<li class="lvl-9">一.一.二</li>
</ol>
</li>
<li class="lvl-6">
<p>一.二</p>
<ol>
<li class="lvl-9">一.二.一</li>
<li class="lvl-9">一.二.二</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="区块">区块</h4>
<p>可以使用<code>&gt;</code>加空格来表示区块。</p>
<p>当我们想要引用别人的文章内容或者需要对文字进行强调时，可以将其放在区块内。</p>
<blockquote>
<p>这是区块</p>
<p>区块也可以嵌套</p>
<blockquote>
<p>​	这是二级区块</p>
<blockquote>
<p>这是三级区块</p>
</blockquote>
</blockquote>
</blockquote>
<h4 id="图片">图片</h4>
<p><strong>引用图片和链接的唯一区别就是在最前方添加一个感叹号。</strong> 插入图片的语法如下：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">!<span class="selector-attr">[alt 属性文本]</span>(图片地址)</span><br><span class="line">!<span class="selector-attr">[alt 属性文本]</span>(图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure>
<p>示例如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>. !<span class="selector-attr">[绝对路径引用]</span>(/images/<span class="number">002</span><span class="selector-class">.png</span> <span class="string">&quot;绝对路径引用&quot;</span> =<span class="number">200</span>*<span class="number">200</span>)</span><br><span class="line"><span class="number">2</span>. !<span class="selector-attr">[相对路径引用]</span>(【Hexo】typora知识总结/<span class="number">001</span><span class="selector-class">.jpg</span> <span class="string">&quot;相对路径引用1&quot;</span>)</span><br><span class="line"><span class="number">3</span>. !<span class="selector-attr">[相对路径引用]</span>(<span class="number">001</span><span class="selector-class">.jpg</span> <span class="string">&quot;相对路径引用2&quot;</span>)</span><br><span class="line"><span class="number">4</span>. !<span class="selector-attr">[网络图片]</span>（https:<span class="comment">//www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png &quot;Baidu&quot;)</span></span><br></pre></td></tr></table></figure>
<p>由于使用插件markdown-it-imsize控制了图片大小，此图片在 typora 中无法显示↓</p>
<p><img src="/posts/287bb156//002.png" alt="本地png图片" title="绝对路径引用" width="200" height="200"></p>
<p><img src="/posts/287bb156//001.jpg" alt="相对路径引用" title="相对路径引用1"></p>
<p>由于使用了post_asset_folder，此图片在 typora 中无法显示↓</p>
<p><img src="/posts/287bb156//001.jpg" alt="相对路径引用" title="相对路径引用2"></p>
<p><img src="/posts/287bb156//PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png" alt="网络图片" title="Baidu"></p>
<p><font class="notice">注：因为我的 typora 使用了图片自动下载功能，会强制改为本地图片，因此此处已经自动下载到了本地，并且依然使用的本地图片。</font></p>
<p>在实际的使用过程中，虽然第三种方法最为方便，但是由于第三种方法图片不能在 typora 中显示，因此我采用了第二种方法来编写博客。其次由于我使用了 hexo 插件 abbrlink ，需要在主题配置文件中\node_modules\hexo-asset-image\index.js进行更改。</p>
<h4 id="表格">表格</h4>
<p>Markdown 制作表格使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行。<code>:-</code>表示左对齐<code>-:</code>表示右对齐<code>:-:</code>表示中间对齐。示例如下：</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string">左对齐</span>|<span class="string">右对齐</span>|<span class="string">中间对齐</span>|</span><br><span class="line">|<span class="string">:---</span>|<span class="string">---:</span>|<span class="string">:----:</span>|</span><br><span class="line">|<span class="string">单元格</span>|<span class="string">单元格</span>|<span class="string">单元格</span>|</span><br><span class="line">|<span class="string">单元格</span>|<span class="string">单元格</span>|<span class="string">单元格</span>|</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">左对齐</th>
<th style="text-align:right">右对齐</th>
<th style="text-align:center">中间对齐</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:right">单元格</td>
<td style="text-align:center">单元格</td>
</tr>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:right">单元格</td>
<td style="text-align:center">单元格</td>
</tr>
</tbody>
</table>
<p>在Typora中，我们可以使用快捷键<strong>Ctrl+T</strong>来插入表格，并选择行列，当选中表格某一单元格时，可以在表格左上角手动设置对齐方式，右上角选择更多操作。</p>
<p><img src="/posts/287bb156//image-20241028100647549.png" alt="image-20241028100647549"></p>
<h4 id="数学公式">数学公式</h4>
<p>在Typora中，有两种方法插入数学公式，示例如下：</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">第一种方法：<span class="symbol">$</span><span class="number">1</span>+<span class="number">2</span>=<span class="number">3</span><span class="symbol">$</span></span><br><span class="line">第二种方法：</span><br><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br><span class="line"><span class="number">1</span>+<span class="number">2</span>=<span class="number">3</span></span><br><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure>
<p>第一种方法：$1+2=3$</p>
<p>第二种方法：<br>
$$<br>
1+2=3<br>
$$</p>
<h2 id="三、Typora与HTML">三、Typora与HTML</h2>
<h3 id="3-1-改变字体颜色及大小">3.1 改变字体颜色及大小</h3>
<p>我们可以使用<code>&lt;font&gt; &lt;/font&gt;</code>标签来改变字体的颜色及大小，如：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;font <span class="attribute">size</span>=3 <span class="attribute">color</span>=<span class="string">&quot;red&quot;</span>&gt;字体颜色为红色，大小为3&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">&lt;font <span class="attribute">size</span>=4 <span class="attribute">color</span>=<span class="string">&quot;blue&quot;</span>&gt;字体颜色为蓝色，大小为4&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">&lt;font <span class="attribute">size</span>=6 <span class="attribute">color</span>=<span class="string">&quot;#ffffff&quot;</span>&gt;字体颜色为紫罗兰，大小为6&lt;/font&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><font size="3" color="red">字体颜色为红色，大小为3</font></p>
<p><font size="4" color="blue">字体颜色为蓝色，大小为4</font></p>
<p><font size="6" color="#ffffff">字体颜色为紫罗兰，大小为6</font></p>
<h3 id="3-2-改变对齐方式">3.2 改变对齐方式</h3>
<p>我们可以改变字体的对齐方式，用标签<code>&lt;p&gt; &lt;/p&gt;</code>加上属性<code>align</code>，如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;left&quot;</span>&gt;</span>左对齐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>中间对齐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>右对齐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p align="left">左对齐</p>
<p align="center">中间对齐</p>
<p align="right">右对齐</p>
<h3 id="3-3-插入头像">3.3 插入头像</h3>
<p>我们可以通过标签<code>&lt;img src=url /&gt;</code>来插入图片，如：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">img</span> <span class="attribute">src</span>=<span class="string">&quot;./【Hexo】typora知识总结/001.jpg&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>
<img src="/posts/287bb156//001.jpg">
<p>我们可以改变<code>&lt;img&gt;</code>标签的属性，来改变图片的大小。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">&quot;./【Hexo】typora知识总结/001.jpg&quot;</span> <span class="attribute">width</span>=100 <span class="attribute">height</span>=100/&gt;</span><br></pre></td></tr></table></figure>
<img src="/posts/287bb156//001.jpg" width="100" height="100/">
<p>也可以改变图片的位置，如：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">&quot;【Hexo】typora知识总结/001.jpg&quot;</span> <span class="attribute">width</span>=30 <span class="attribute">height</span>=30 <span class="attribute">style</span>=<span class="string">&quot;float:left&quot;</span>/&gt;图片在左边</span><br><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">&quot;【Hexo】typora知识总结/001.jpg&quot;</span> <span class="attribute">width</span>=30 <span class="attribute">height</span>=30 <span class="attribute">style</span>=<span class="string">&quot;float:right&quot;</span>/&gt;图片在右边</span><br></pre></td></tr></table></figure>
<p><img src="/posts/287bb156//001.jpg" width="30" height="30" style="float:left">图片在左边<img src="/posts/287bb156//001.jpg" width="30" height="30" style="float:right">图片在右边</p>
<h2 id="四、其他用法">四、其他用法</h2>
<h3 id="文章截断——阅读全文">文章截断——阅读全文</h3>
<p>若你是用的是NEXT主题，可以在文章中使用<code>&lt; !--more--&gt;</code> 手动进行截断这种方法可以根据文章的内容，自己在合适的位置添加 <code>&lt; !--more--&gt;</code> 标签，使用灵活，也是Hexo推荐的方法。</p>
<h3 id="目录功能">目录功能</h3>
<p>使用hexo-toc可以在文章头部添加目录。 其配置在博客根目录的_config.yml文件中。类似于文章截断功能，在需要显示文章目录的地方添加<code>&lt;!--toc--&gt;</code></p>
<p>额······因为使用这个以后侧边框的目录无法跳转，就又卸载了。</p>
<p>本文参考：</p>
<p><a href="https://blog.csdn.net/weixin_30745641/article/details/95686757">Hexo中添加emoji表情</a></p>
<p><a href="https://www.imczw.com/post/tech/hexo-next-tags-markdown.html"> Hexo-Next 常用 MD 语法合集</a></p>
<p><a href="https://blog.csdn.net/qq_41261251/article/details/102817673">https://blog.csdn.net/qq_41261251/article/details/102817673</a></p>
<p><a href="https://whatsid.me/2019/08/21/hexo-markdown-syntax/#">https://whatsid.me/2019/08/21/hexo-markdown-syntax/#</a></p>
<p><a href="https://blog.csdn.net/lewky_liu/article/details/82432003">Hexo系列(2) - NexT主题美化与博客功能增强</a></p>
<p><a href="https://theme-next.iissnan.com/theme-settings.html">主题配置 - NexT 使用文档</a></p>
<p><a href="https://blog.csdn.net/qq_32320399/article/details/99823695">Markdown连接的写法</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux】Linux学习</title>
    <url>/posts/5826694d/</url>
    <content><![CDATA[<h2 id="Linux介绍">Linux介绍</h2>
<h3 id="Linux目录">Linux目录</h3>
<p><img src="/posts/5826694d//image-20250208200527707.png" alt="image-20250208200527707"></p>
<ul class="lvl-0">
<li class="lvl-2">
<p>/：根目录，一般根目录下只存放目录，在Linux下有且只有一个根目录。所有的东西都是从这里开始。当你在终端里输入“/home”，你其实是在告诉电脑，先从/（根目录）开始，再进入到home目录。</p>
</li>
<li class="lvl-2">
<p>/bin: /usr/bin: 可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。</p>
</li>
<li class="lvl-2">
<p>/boot：放置linux系统启动时用到的一些文件，如Linux的内核文件：/boot/vmlinuz，系统引导管理器：/boot/grub。</p>
</li>
<li class="lvl-2">
<p>/dev：存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱 mount /dev/cdrom /mnt。</p>
</li>
<li class="lvl-2">
<p>/etc：系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有 /etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d。</p>
</li>
<li class="lvl-2">
<p>/home：系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，表示当前用户的家目录，edu 表示用户 edu 的家目录。</p>
</li>
<li class="lvl-2">
<p>/lib: /usr/lib: /usr/local/lib：系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助。</p>
</li>
<li class="lvl-2">
<p>/lost+fount：系统异常产生错误时，会将一些遗失的片段放置于此目录下。</p>
</li>
<li class="lvl-2">
<p>/mnt: /media：光盘默认挂载点，通常光盘挂载于 /mnt/cdrom 下，也不一定，可以选择任意位置进行挂载。</p>
</li>
<li class="lvl-2">
<p>/opt：给主机额外安装软件所摆放的目录。</p>
</li>
<li class="lvl-2">
<p>/proc：此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有 /proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/* 等。</p>
</li>
<li class="lvl-2">
<p>/root：系统管理员root的家目录。</p>
</li>
<li class="lvl-2">
<p>/sbin: /usr/sbin: /usr/local/sbin：放置系统管理员使用的可执行命令，如fdisk、shutdown、mount 等。与 /bin 不同的是，这几个目录是给系统管理员 root使用的命令，一般用户只能&quot;查看&quot;而不能设置和使用。</p>
</li>
<li class="lvl-2">
<p>/tmp：一般用户或正在执行的程序临时存放文件的目录，任何人都可以访问，重要数据不可放置在此目录下。</p>
</li>
<li class="lvl-2">
<p>/srv：服务启动之后需要访问的数据目录，如 www 服务需要访问的网页数据存放在 /srv/www 内。</p>
</li>
<li class="lvl-2">
<p>/usr：应用程序存放目录，/usr/bin 存放应用程序，/usr/share 存放共享数据，/usr/lib 存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。/usr/local: 存放软件升级包。/usr/share/doc: 系统说明文件存放目录。/usr/share/man: 程序说明文件存放目录。</p>
</li>
<li class="lvl-2">
<p>/var：放置系统执行过程中经常变化的文件，如随时更改的日志文件 /var/log，/var/log/message：所有的登录文件存放目录，/var/spool/mail：邮件存放的目录，/var/run:程序或服务启动后，其PID存放在该目录下。</p>
</li>
</ul>
<h2 id="用户目录">用户目录</h2>
<p>位于/home/user，称之为用户工作目录或家目录,表示方式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/home/user</span><br><span class="line">~</span><br></pre></td></tr></table></figure>
<p>从/目录开始描述的路径为<strong>绝对路径</strong>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">ls</span> /usr</span><br></pre></td></tr></table></figure>
<p>从当前位置开始描述的路径为<strong>相对路径</strong>，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../../</span><br><span class="line"><span class="built_in">ls</span> abc/def</span><br></pre></td></tr></table></figure>
<p>每个目录下都有**.和…**</p>
<p>. 表示当前目录</p>
<p>… 表示上一级目录，即父目录</p>
<p>根目录下的.和…都表示当前目录</p>
<table>
<thead>
<tr>
<th>文件的颜色</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>蓝色</td>
<td>目录</td>
</tr>
<tr>
<td>绿色</td>
<td>可执行文件</td>
</tr>
<tr>
<td>红色</td>
<td>压缩文件</td>
</tr>
<tr>
<td>浅蓝色</td>
<td>链接文件</td>
</tr>
<tr>
<td>灰色</td>
<td>其他文件</td>
</tr>
</tbody>
</table>
<h2 id="命令行基本操作">命令行基本操作</h2>
<h3 id="命令使用方法">命令使用方法</h3>
<p>Linux命令格式：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">command  <span class="selector-attr">[-options]</span>  <span class="selector-attr">[parameter1]</span>  …</span><br></pre></td></tr></table></figure>
<p>command: 命令名； [-options]：选项,可用来对命令进行控制，也可以省略，<code>[]代表可选</code> parameter1 …：传给命令的参数：可以是零个一个或多个</p>
<h3 id="查看帮助文档">查看帮助文档</h3>
<h4 id="help">help</h4>
<p>一般是linux命令自带的帮助信息</p>
<p>如：ls --help</p>
<h4 id="man-manual">man(manual)</h4>
<p>man是linux提供的一个手册，包含了绝大部分的命令、函数使用说明</p>
<p>该手册分成很多章节（section），使用man时可以指定不同的章节来浏览。</p>
<p>例：man ls ; man 2 printf</p>
<p>man中各个section意义如下：</p>
<ol>
<li class="lvl-3">
<p>Standard commands（标准命令）</p>
</li>
<li class="lvl-3">
<p>System calls（系统调用，如open,write）</p>
</li>
<li class="lvl-3">
<p>Library functions（库函数，如printf,fopen）</p>
</li>
<li class="lvl-3">
<p>Special devices（设备文件的说明，/dev下各种设备）</p>
</li>
<li class="lvl-3">
<p>File formats（文件格式，如passwd）</p>
</li>
<li class="lvl-3">
<p>Games and toys（游戏和娱乐）</p>
</li>
<li class="lvl-3">
<p>Miscellaneous（杂项、惯例与协定等，例如Linux档案系统、网络协定、ASCII 码；environ全局变量）</p>
</li>
<li class="lvl-3">
<p>Administrative Commands（管理员命令，如ifconfig）</p>
</li>
</ol>
<p>man是按照手册的章节号的顺序进行搜索的。</p>
<p>man设置了如下的功能键：功能键	功能空格键	显示手册页的下一屏<br>
Enter键	一次滚动手册页的一行<br>
b	回滚一屏<br>
f	前滚一屏<br>
q	退出man命令<br>
h	列出所有功能键<br>
/word	搜索word字符串</p>
<p>img</p>
<p><font class="notice">注意：实际上，我们不用指定第几个章节也用查看，如，man ls</font></p>
<h3 id="tab键自动补全">tab键自动补全</h3>
<p>在敲出命令的前几个字母的同时，按下tab键，系统会自动帮我们补全命令</p>
<h3 id="history游览历史">history游览历史</h3>
<p>当系统执行过一些命令后，可按上下键翻看以前的命令，history将执行过的命令列举出来</p>
<p>history保留了最近执行的命令记录，默认可以保留1000。历史清单从0开始编号到最大值。常见用法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">history</span> N		显示最近N条命令</span><br><span class="line"><span class="built_in">history</span> -c		清除所有的历史记录</span><br><span class="line"><span class="built_in">history</span> -w  xxx.txt	保存历史记录到文本xxx.txt</span><br></pre></td></tr></table></figure>
<h3 id="命令行中的ctrl组合键">命令行中的ctrl组合键</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p>Ctrl+c 结束正在运行的程序</p>
</li>
<li class="lvl-2">
<p>Ctrl+d 结束输入或退出shell</p>
</li>
<li class="lvl-2">
<p>Ctrl+s 暂停屏幕输出【锁住终端】</p>
</li>
<li class="lvl-2">
<p>Ctrl+q 恢复屏幕输出【解锁终端】</p>
</li>
<li class="lvl-2">
<p>Ctrl+l 清屏，【是字母L的小写】等同于Clear</p>
</li>
<li class="lvl-2">
<p>当前光标到行首：ctrl+a</p>
</li>
<li class="lvl-2">
<p>当前光标到行尾：ctrl+e</p>
</li>
<li class="lvl-2">
<p>删除当前光标到行首：ctrl+u</p>
</li>
<li class="lvl-2">
<p>删除当前光标到行尾：ctrl+k</p>
</li>
<li class="lvl-2">
<p>Ctrl+y 在光标处粘贴剪切的内容</p>
</li>
<li class="lvl-2">
<p>Ctrl+r 查找历史命令【输入关键字，就能调出以前执行过的命令】</p>
</li>
<li class="lvl-2">
<p>Ctrl+t 调换光标所在处与其之前字符位置，并把光标移到下个字符</p>
</li>
<li class="lvl-2">
<p>Ctrl+x+u 撤销操作</p>
</li>
<li class="lvl-2">
<p>Ctrl+z 转入后台运行</p>
</li>
</ul>
<h2 id="Linux命令">Linux命令</h2>
<h3 id="权限管理">权限管理</h3>
<h4 id="列出目录的内容：ls">列出目录的内容：ls</h4>
<p>Linux文件或者目录名称最长可以有265个字符，“.”代表当前目录，“…”代表上一级目录，以“.”开头的文件为隐藏文件，需要用 -a 参数才能显示。</p>
<p>ls常用参数：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>显示指定目录下所有子目录与文件，包括隐藏文件</td>
</tr>
<tr>
<td>-l</td>
<td>以列表方式显示文件的详细信息</td>
</tr>
<tr>
<td>-h</td>
<td>配合 -l 以人性化的方式显示文件大小</td>
</tr>
</tbody>
</table>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">[root@VM_0_9_centos ~]<span class="comment"># ll -h</span></span><br><span class="line">total 24K</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root 1.6K Dec <span class="number"> 1 </span><span class="number"> 2016 </span>CentOS7-Base-163.repo.1</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root 6.0K Nov<span class="number"> 12 </span><span class="number"> 2015 </span>mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root  <span class="number"> 90 </span>Nov<span class="number"> 23 </span>10:26 passwd</span><br><span class="line">drwxr-xr-t<span class="number"> 2 </span>root root 4.0K Nov<span class="number"> 22 </span>21:15 test</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root <span class="number"> 276 </span>Nov<span class="number"> 24 </span>10:01 user</span><br><span class="line">lrwxrwxrwx<span class="number"> 1 </span>root root  <span class="number"> 14 </span>Nov <span class="number"> 6 </span>19:18 web -&gt; /var/www/html/</span><br></pre></td></tr></table></figure>
<p>列出的信息的含义：</p>
<p><img src="/posts/5826694d//image-20250208201703934.png" alt="image-20250208201703934"></p>
<p>ls支持通配符：</p>
<table>
<thead>
<tr>
<th>通配符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>文件代表文件名中所有字符</td>
</tr>
<tr>
<td>ls te*</td>
<td>查找以te开头的文件</td>
</tr>
<tr>
<td>ls *html</td>
<td>查找结尾为html的文件</td>
</tr>
<tr>
<td>？</td>
<td>代表文件名中任意一个字符</td>
</tr>
<tr>
<td>ls ?.c</td>
<td>只找第一个字符任意，后缀为.c的文件</td>
</tr>
<tr>
<td>ls a.?</td>
<td>只找只有3个字符，前2字符为a.，最后一个字符任意的文件</td>
</tr>
<tr>
<td>[]</td>
<td>[”和“]”将字符组括起来，表示可以匹配字符组中的任意一个。“-”用于表示字符范围。</td>
</tr>
<tr>
<td>[abc]</td>
<td>匹配a、b、c中的任意一个</td>
</tr>
<tr>
<td>[a-f]</td>
<td>匹配从a到f范围内的的任意一个字符</td>
</tr>
<tr>
<td>ls [a-f]*</td>
<td>找到从a到f范围内的的任意一个字符开头的文件</td>
</tr>
<tr>
<td>ls a-f</td>
<td>查找文件名为a-f的文件,当“-”处于方括号之外失去通配符的作用</td>
</tr>
<tr>
<td>\</td>
<td>如果要使通配符作为普通字符使用，可以在其前面加上转义字符。“?”和“*”处于方括号内时不用使用转义字符就失去通配符的作用。</td>
</tr>
<tr>
<td>ls *a</td>
<td>查找文件名为*a的文件</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="显示inode的内容：stat">显示inode的内容：stat</h4>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">stat</span><span class="meta"> [文件或目录]</span></span><br></pre></td></tr></table></figure>
<p>查看 testfile 文件的inode内容内容，可以用以下命令：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">[root@VM_0_9_centos ~]# stat mysql-community-release-el7<span class="string">-5</span>.noarch.rpm </span><br><span class="line">  File: ‘mysql-community-release-el7<span class="string">-5</span>.noarch.rpm’</span><br><span class="line">  Size: 6140            Blocks: 16         IO Block: 4096   regular file</span><br><span class="line">Device: fd01h/64769d    Inode: 394398      Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)</span><br><span class="line">Access: 2019<span class="string">-11</span><span class="string">-23</span> 13:30:42.000000000 <span class="string">+0800</span></span><br><span class="line">Modify: 2015<span class="string">-11</span><span class="string">-12</span> 15:58:42.000000000 <span class="string">+0800</span></span><br><span class="line">Change: 2019<span class="string">-11</span><span class="string">-23</span> 13:30:42.400300171 <span class="string">+0800</span></span><br><span class="line"> Birth: -</span><br><span class="line"></span><br><span class="line">python@ubuntu:~/txt$ stat find我的Mr.Right.txt </span><br><span class="line">  文件：&#x27;find我的Mr.Right.txt&#x27;</span><br><span class="line">  大小：64768           块：128        IO 块：4096   普通文件</span><br><span class="line">设备：801h/2049d        Inode：655501      硬链接：1</span><br><span class="line">权限：(0664/-rw-rw-r--)  Uid：( 1000/  python)   Gid：( 1000/  python)</span><br><span class="line">最近访问：2019<span class="string">-11</span><span class="string">-22</span> 22:43:17.565105155 <span class="string">+0800</span></span><br><span class="line">最近更改：2019<span class="string">-11</span><span class="string">-22</span> 22:42:42.000000000 <span class="string">+0800</span></span><br><span class="line">最近改动：2019<span class="string">-11</span><span class="string">-22</span> 22:43:08.797116491 <span class="string">+0800</span></span><br><span class="line">创建时间：-</span><br></pre></td></tr></table></figure>
<p>文件访问权限</p>
<p>用户能够控制一个给定的文件或目录的访问程度，一个文件或目录可能有读、写及执行权限：</p>
<pre><code>读权限（r） ：对于文件，具有读取文件内容的权限；对于目录，具有浏览目录的权限。
写权限（w） ：对于文件，具有修改文件内容的权限；对于目录，具有删除、移动目录内文件的权限。
可执行权限（x）： 对于文件，具有执行文件的权限；对于目录，该用户具有进入目录的权限。
</code></pre>
<p>通常，Unix/Linux系统只允许文件的属主(所有者)或超级用户改变文件的读写权限。</p>
<p>示例：<br>
<img src="/posts/5826694d//image-20250208202309672.png" alt="image-20250208202309672"></p>
<p>第1个字母代表文件的类型：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>“d” 代表文件夹</p>
</li>
<li class="lvl-2">
<p>“-” 代表普通文件</p>
</li>
<li class="lvl-2">
<p>“c” 代表硬件字符设备</p>
</li>
<li class="lvl-2">
<p>“b” 代表硬件块设备</p>
</li>
<li class="lvl-2">
<p>“s”表示管道文件</p>
</li>
<li class="lvl-2">
<p>“l” 代表软链接文件。</p>
</li>
</ul>
<p>后9个字母分别代表三组权限：文件所有者、用户组、其他用户拥有的权限。</p>
<h4 id="修改文件权限：chmod">修改文件权限：chmod</h4>
<p>字母法：chmod u/g/o/a +/-/= rwx 文件</p>
<table>
<thead>
<tr>
<th>[ u/g/o/a ]</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>u</td>
<td>user 表示该文件的所有者</td>
</tr>
<tr>
<td>g</td>
<td>group 表示与该文件的所有者属于同一组( group )者，即用户组</td>
</tr>
<tr>
<td>o</td>
<td>other 表示其他以外的人</td>
</tr>
<tr>
<td>a</td>
<td>all 表示这三者皆是</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>[ ±= ]</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>增加权限</td>
</tr>
<tr>
<td>-</td>
<td>撤销权限</td>
</tr>
<tr>
<td>=</td>
<td>设定权限</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>rwx</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>read 表示可读取，对于一个目录，如果没有r权限，那么就意味着不能通过ls查看这个目录的内容。</td>
</tr>
<tr>
<td>w</td>
<td>write 表示可写入，对于一个目录，如果没有w权限，那么就意味着不能在目录下创建新的文件。</td>
</tr>
<tr>
<td>x</td>
<td>excute 表示可执行，对于一个目录，如果没有x权限，那么就意味着不能通过cd进入这个目录。</td>
</tr>
</tbody>
</table>
<p>数字法：“rwx” 这些权限也可以用数字来代替</p>
<table>
<thead>
<tr>
<th>字母</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>读取权限，数字代号为 “4”</td>
</tr>
<tr>
<td>w</td>
<td>写入权限，数字代号为 “2”</td>
</tr>
<tr>
<td>x</td>
<td>执行权限，数字代号为 “1”</td>
</tr>
<tr>
<td>-</td>
<td>不具任何权限，数字代号为 “0”</td>
</tr>
</tbody>
</table>
<p>如执行：chmod u=rwx,g=rx,o=r filename 就等同于：chmod u=7,g=5,o=4 filename</p>
<p>chmod 751 file：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>文件所有者：读、写、执行权限</p>
</li>
<li class="lvl-2">
<p>同组用户：读、执行的权限</p>
</li>
<li class="lvl-2">
<p>其它用户：执行的权限</p>
</li>
</ul>
<p>chmod 777 file：所有用户拥有读、写、执行权限</p>
<p>注意：如果想递归所有目录加上相同权限，需要加上参数“ -R ”。 如：chmod 777 test/ -R 递归 test 目录下所有文件加 777 权限</p>
<h4 id="修改文件所有者：chown">修改文件所有者：chown</h4>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll h.txt </span><br><span class="line">-rw------- <span class="number">1</span> python python <span class="number">4</span> <span class="number">11</span>月 <span class="number">22</span> <span class="number">22</span><span class="symbol">:</span><span class="number">35</span> h.txt</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>chown mike h.txt </span><br><span class="line"><span class="symbol">chown:</span> 正在更改<span class="string">&#x27;h.txt&#x27;</span> 的所有者: 不允许的操作</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>sudo chown mike h.txt </span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll h.txt              </span><br><span class="line">-rw------- <span class="number">1</span> mike python <span class="number">4</span> <span class="number">11</span>月 <span class="number">22</span> <span class="number">22</span><span class="symbol">:</span><span class="number">35</span> h.txt</span><br></pre></td></tr></table></figure>
<h4 id="修改文件所属组：chgrp">修改文件所属组：chgrp</h4>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll h.txt              </span><br><span class="line">-rw------- <span class="number">1</span> mike python <span class="number">4</span> <span class="number">11</span>月 <span class="number">22</span> <span class="number">22</span><span class="symbol">:</span><span class="number">35</span> h.txt</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>sudo chgrp mike h.txt </span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll h.txt              </span><br><span class="line">-rw------- <span class="number">1</span> mike mike <span class="number">4</span> <span class="number">11</span>月 <span class="number">22</span> <span class="number">22</span><span class="symbol">:</span><span class="number">35</span> h.txt</span><br></pre></td></tr></table></figure>
<h3 id="文件内容查看">文件内容查看</h3>
<p>Linux系统中使用以下命令来查看文件的内容：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>cat 由第一行开始显示文件内容</p>
</li>
<li class="lvl-2">
<p>tac 从最后一行开始显示</p>
</li>
<li class="lvl-2">
<p>nl 显示的时候，顺道输出行号</p>
</li>
<li class="lvl-2">
<p>more 一页一页的显示文件内容</p>
</li>
<li class="lvl-2">
<p>less与more 类似，但可以往前翻页</p>
</li>
<li class="lvl-2">
<p>head 只看头几行</p>
</li>
<li class="lvl-2">
<p>tail 只看尾巴几行</p>
</li>
</ul>
<h4 id="基本显示：cat、tac">基本显示：cat、tac</h4>
<p>语法：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">cat</span><span class="meta"> [-AbEnTv]</span></span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-A ：相当于 -vET 的整合选项，可列出一些特殊字符而不是空白而已；</p>
</li>
<li class="lvl-2">
<p>-v ：列出一些看不出来的特殊字符</p>
</li>
<li class="lvl-2">
<p>-E ：将结尾的断行字节 $ 显示出来；</p>
</li>
<li class="lvl-2">
<p>-T ：将 [tab] 按键以 ^I 显示出来；</p>
</li>
<li class="lvl-2">
<p>-b ：列出行号，空白行不标行号</p>
</li>
<li class="lvl-2">
<p>-n ：列出行号，连同空白行也会有行号</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_9_centos ~]# <span class="built_in">cat</span> -b /etc/issue</span><br><span class="line">     1  \S</span><br><span class="line">     2  Kernel \r on an \m</span><br><span class="line">[root@VM_0_9_centos ~]# <span class="built_in">cat</span> -n /etc/issue</span><br><span class="line">     1  \S</span><br><span class="line">     2  Kernel \r on an \m</span><br><span class="line">     3</span><br><span class="line">[root@VM_0_9_centos ~]# </span><br></pre></td></tr></table></figure>
<p>tac与cat命令刚好相反，文件内容从最后一行开始显示，可以看出 tac 是 cat 的倒着写！如：</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">[root@VM_0_9_centos ~]<span class="comment"># tac /etc/issue</span></span><br><span class="line">Kernel <span class="string">\r</span> <span class="literal">on</span> an <span class="string">\m</span></span><br><span class="line"><span class="string">\S</span></span><br></pre></td></tr></table></figure>
<h4 id="显示行号：nl">显示行号：nl</h4>
<p>语法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nl</span> [-bnw] 文件</span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-b ：指定行号指定的方式，主要有两种：<br>
-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；<br>
-b t ：如果有空行，空的那一行不要列出行号(默认值)；</p>
</li>
<li class="lvl-2">
<p>-n ：列出行号表示的方法，主要有三种：</p>
<p>-n ln ：行号在荧幕的最左方显示；</p>
<p>-n rn ：行号在自己栏位的最右方显示，且不加 0 ；</p>
<p>-n rz ：行号在自己栏位的最右方显示，且加 0 ；</p>
</li>
<li class="lvl-2">
<p>-w ：行号栏位的占用的位数。</p>
</li>
</ul>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># nl /etc/issue</span></span><br><span class="line">     <span class="number">1</span>  CentOS release <span class="number">6.4</span> (Final)</span><br><span class="line">     <span class="number">2</span>  Kernel <span class="string">\r</span> <span class="literal">on</span> an <span class="string">\m</span></span><br></pre></td></tr></table></figure>
<h4 id="分屏显示：more、less">分屏显示：more、less</h4>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># more /etc/man_db.config </span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Generated automatically from man.conf.in by the</span></span><br><span class="line"><span class="comment"># configure script.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># man.conf from man-1.6d</span></span><br><span class="line"><span class="string">....</span><span class="params">(中间省略)</span><span class="string">....</span></span><br><span class="line"><span class="params">--More--</span><span class="params">(28%)</span>  &lt;== 光标在这里等待命令</span><br></pre></td></tr></table></figure>
<p>more运行时可以输入的命令有：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>空白键 (space)：代表向下翻一页；</p>
</li>
<li class="lvl-2">
<p>Enter ：代表向下翻『一行』；</p>
</li>
<li class="lvl-2">
<p>/字串 ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；</p>
</li>
<li class="lvl-2">
<p>:f ：立刻显示出档名以及目前显示的行数；</p>
</li>
<li class="lvl-2">
<p>q ：代表立刻离开 more ，不再显示该文件内容。</p>
</li>
<li class="lvl-2">
<p>b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。</p>
</li>
</ul>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># less /etc/man.config</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Generated automatically from man.conf.in by the</span></span><br><span class="line"><span class="comment"># configure script.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># man.conf from man-1.6d</span></span><br><span class="line"><span class="string">....</span><span class="params">(中间省略)</span><span class="string">....</span></span><br><span class="line">:   &lt;== 这里可以等待你输入命令！</span><br></pre></td></tr></table></figure>
<p>less运行时可以输入的命令有：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>空白键 ：向下翻动一页；</p>
</li>
<li class="lvl-2">
<p>[pagedown]：向下翻动一页；</p>
</li>
<li class="lvl-2">
<p>[pageup] ：向上翻动一页；</p>
</li>
<li class="lvl-2">
<p>/字串 ：向下搜寻『字串』的功能；</p>
</li>
<li class="lvl-2">
<p>?字串 ：向上搜寻『字串』的功能；</p>
</li>
<li class="lvl-2">
<p>n ：重复前一个搜寻 (与 / 或 ? 有关！)</p>
</li>
<li class="lvl-2">
<p>N ：反向的重复前一个搜寻 (与 / 或 ? 有关！)</p>
</li>
<li class="lvl-2">
<p>q ：离开 less 这个程序；</p>
</li>
</ul>
<h4 id="取首尾n行：head、tail">取首尾n行：head、tail</h4>
<p>head取出文件前面几行,语法：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">head [-n <span class="built_in">number</span>] 文件 </span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-n ：后面接数字，代表显示几行的意思</p>
</li>
</ul>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@www</span> ~]<span class="meta"># head /etc/man.config</span></span><br></pre></td></tr></table></figure>
<p>默认的情况中，显示前面 10 行！若要显示前 20 行，就得要这样：</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@www</span> ~]<span class="meta"># head -n 20 /etc/man.config</span></span><br></pre></td></tr></table></figure>
<p>tail取出文件后面几行，语法：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">tail [-n <span class="built_in">number</span>] 文件 </span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-n ：后面接数字，代表显示几行的意思</p>
</li>
<li class="lvl-2">
<p>-f ：表示持续侦测后面所接的档名，要等到按下[ctrl]-c才会结束tail的侦测</p>
</li>
</ul>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@www</span> ~]<span class="meta"># tail /etc/man.config</span></span><br><span class="line"><span class="meta"># 默认的情况中，显示最后的十行！若要显示最后的 20 行，就得要这样：</span></span><br><span class="line">[root<span class="symbol">@www</span> ~]<span class="meta"># tail -n 20 /etc/man.config</span></span><br></pre></td></tr></table></figure>
<h3 id="文件管理">文件管理</h3>
<h4 id="输出重定向：">输出重定向：&gt;</h4>
<p>可将本应显示在终端上的内容保存到指定文件中。</p>
<p>如：ls &gt; test.txt ( test.txt 如果不存在，则创建，存在则覆盖其内容 )</p>
<p>注意： &gt;输出重定向会覆盖原来的内容，&gt;&gt;输出重定向则会追加到文件的尾部。</p>
<h4 id="管道：">管道：|</h4>
<p>管道：一个命令的输出可以通过管道做为另一个命令的输入。</p>
<p>“ | ”的左右分为两端，从左端写入到右端。</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">python@ubuntu:/bin$ ll -h |more   </span><br><span class="line">总用量 13M</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root root  4.0K 8月  <span class="number"> 4 </span><span class="number"> 2016 </span>./</span><br><span class="line">drwxr-xr-x<span class="number"> 26 </span>root root  4.0K 7月 <span class="number"> 30 </span><span class="number"> 2016 </span>../</span><br><span class="line">-rwxr-xr-x <span class="number"> 1 </span>root root 1014K 6月 <span class="number"> 24 </span><span class="number"> 2016 </span>bash*</span><br><span class="line">-rwxr-xr-x <span class="number"> 1 </span>root root   31K 5月 <span class="number"> 20 </span><span class="number"> 2015 </span>bunzip2*</span><br><span class="line">-rwxr-xr-x <span class="number"> 1 </span>root root  1.9M 8月 <span class="number"> 19 </span><span class="number"> 2015 </span>busybox*</span><br><span class="line">-rwxr-xr-x <span class="number"> 1 </span>root root   31K 5月 <span class="number"> 20 </span><span class="number"> 2015 </span>bzcat*</span><br><span class="line">lrwxrwxrwx <span class="number"> 1 </span>root root    <span class="number"> 6 </span>5月 <span class="number"> 16 </span><span class="number"> 2016 </span>bzcmp -&gt; bzdiff*</span><br><span class="line">-rwxr-xr-x <span class="number"> 1 </span>root root  2.1K 5月 <span class="number"> 20 </span><span class="number"> 2015 </span>bzdiff*</span><br><span class="line">lrwxrwxrwx <span class="number"> 1 </span>root root    <span class="number"> 6 </span>5月 <span class="number"> 16 </span><span class="number"> 2016 </span>bzegrep -&gt; bzgrep*</span><br><span class="line">--更多--</span><br></pre></td></tr></table></figure>
<h4 id="清屏：clear">清屏：clear</h4>
<p>clear作用为清除终端上的显示(类似于DOS的cls清屏功能)，快捷键：Ctrl + l ( “l” 为字母 )。</p>
<h4 id="切换工作目录：-cd">切换工作目录： cd</h4>
<p><font class="notice">Linux所有的目录和文件名大小写敏感</font></p>
<p>cd后面可跟绝对路径，也可以跟相对路径。如果省略目录，则默认切换到当前用户的主目录。</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>cd</td>
<td>相当于cd ~</td>
</tr>
<tr>
<td>cd ~</td>
<td>切换到当前用户的主目录(/home/用户目录)</td>
</tr>
<tr>
<td>cd .</td>
<td>切换到当前目录</td>
</tr>
<tr>
<td>cd …</td>
<td>切换到上级目录</td>
</tr>
<tr>
<td>cd -</td>
<td>进入上次所在的目录</td>
</tr>
</tbody>
</table>
<h4 id="显示当前路径：pwd">显示当前路径：pwd</h4>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line"><span class="keyword">python</span>@ubuntu:~$ <span class="keyword">pwd</span> </span><br><span class="line">/home/<span class="keyword">python</span></span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>-P</strong> ：显示出确实的路径，而非使用连结 (link) 路径。</p>
</li>
</ul>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@VM_0_9_centos</span> ~]<span class="comment"># cd /var/mail/</span></span><br><span class="line">[root<span class="variable">@VM_0_9_centos</span> mail]<span class="comment"># pwd</span></span><br><span class="line"><span class="regexp">/var/mail</span></span><br><span class="line">[root<span class="variable">@VM_0_9_centos</span> mail]<span class="comment"># pwd -P</span></span><br><span class="line"><span class="regexp">/var/spool</span><span class="regexp">/mail</span></span><br></pre></td></tr></table></figure>
<h4 id="创建目录：mkdir">创建目录：mkdir</h4>
<p>mkdir可以创建一个新的目录。</p>
<p>注意：新建目录的名称不能与当前目录中已有的目录或文件同名，并且目录创建者必须对当前目录具有写权限。</p>
<p>语法：</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">mkdir [-mp] 目录名称</span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-m ：指定被创建目录的权限，而不是根据默认权限 (umask) 设定</p>
</li>
<li class="lvl-2">
<p>-p ：递归创建所需要的目录</p>
</li>
</ul>
<p>实例：-p递归创建目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]# <span class="built_in">cd</span> /tmp</span><br><span class="line">[root@www tmp]# <span class="built_in">mkdir</span> <span class="built_in">test</span>    &lt;==创建一名为 <span class="built_in">test</span> 的新目录</span><br><span class="line">[root@www tmp]# <span class="built_in">mkdir</span> test1/test2/test3/test4</span><br><span class="line"><span class="built_in">mkdir</span>: cannot create directory `test1/test2/test3/test4<span class="string">&#x27;: </span></span><br><span class="line"><span class="string">No such file or directory       &lt;== 没办法直接创建此目录啊！</span></span><br><span class="line"><span class="string">[root@www tmp]# mkdir -p test1/test2/test3/test4</span></span><br></pre></td></tr></table></figure>
<p>mkdir创建的目录权限默认根据umask得到，而-m参数可以指定被创建目录的权限：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">[root@VM_0_9_centos ~]<span class="comment"># mkdir t1</span></span><br><span class="line">[root@VM_0_9_centos ~]<span class="comment"># ll</span></span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>root root<span class="number"> 4096 </span>Nov<span class="number"> 22 </span>18:54 t1</span><br><span class="line">[root@VM_0_9_centos ~]<span class="comment"># mkdir t2 -m 711 </span></span><br><span class="line">[root@VM_0_9_centos ~]<span class="comment"># ll</span></span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>root root<span class="number"> 4096 </span>Nov<span class="number"> 22 </span>18:54 t1</span><br><span class="line">drwx--x--x<span class="number"> 2 </span>root root<span class="number"> 4096 </span>Nov<span class="number"> 22 </span>18:54 t2</span><br></pre></td></tr></table></figure>
<h4 id="删除文件：rm">删除文件：rm</h4>
<p>可通过rm删除文件或目录。使用rm命令要小心，因为文件删除后不能恢复。为了防止文件误删，可以在rm后使用-i参数以逐个确认要删除的文件。</p>
<p>常用参数及含义如下表所示：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-i</td>
<td>以进行交互式方式执行</td>
</tr>
<tr>
<td>-f</td>
<td>强制删除，忽略不存在的文件，无需提示</td>
</tr>
<tr>
<td>-r</td>
<td>递归地删除目录下的内容，删除文件夹时必须加此参数</td>
</tr>
</tbody>
</table>
<h4 id="建立链接文件：ln">建立链接文件：ln</h4>
<p>软链接：ln -s 源文件 链接文件</p>
<p>硬链接：ln 源文件 链接文件</p>
<p>软链接类似于Windows下的快捷方式，如果软链接文件和源文件不在同一个目录，源文件要使用绝对路径，不能使用相对路径。</p>
<p>硬链接只能链接普通文件不能链接目录。 两个文件占用相同大小的硬盘空间，即使删除了源文件，链接文件还是存在，所以-s选项是更常见的形式。</p>
<h4 id="文本搜索：grep">文本搜索：grep</h4>
<p>Linux系统中grep命令是一种强大的文本搜索工具，grep允许对文本文件进行模式查找。如果找到匹配模式， grep打印包含模式的所有行。</p>
<p>grep一般格式为：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">grep</span> [-选项] <span class="string">&#x27;搜索内容串&#x27;</span> 文件名</span><br></pre></td></tr></table></figure>
<p>在grep命令中输入字符串参数时，最好引号或双引号括起来。例如：<code>grep 'a' 1.txt</code>。</p>
<p>在当前目录中，查找前缀有test字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">$ grep test test* <span class="meta">#查找前缀有test的文件包含test字符串的文件  </span></span><br><span class="line"><span class="symbol">testfile1:</span>This a Linux testfile! <span class="meta">#列出testfile1 文件中包含test字符的行  </span></span><br><span class="line"><span class="symbol">testfile_2:</span>This is a linux testfile! <span class="meta">#列出testfile_2 文件中包含test字符的行  </span></span><br><span class="line"><span class="symbol">testfile_2:</span>Linux test <span class="meta">#列出testfile_2 文件中包含test字符的行 </span></span><br></pre></td></tr></table></figure>
<p>以递归的方式查找符合条件的文件。例如，查找指定目录/etc/acpi 及其子目录（如果存在子目录的话）下所有文件中包含字符串&quot;update&quot;的文件，并打印出该字符串所在行的内容，使用的命令为：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ grep -r update <span class="regexp">/etc/</span>acpi <span class="comment">#以递归的方式查找“etc/acpi”  </span></span><br><span class="line"><span class="comment">#下包含“update”的文件  </span></span><br><span class="line"><span class="regexp">/etc/</span>acpi<span class="regexp">/ac.d/</span><span class="number">85</span>-anacron.sh:<span class="comment"># (Things like the slocate updatedb cause a lot of IO.)  </span></span><br><span class="line">Rather than  </span><br><span class="line"><span class="regexp">/etc/</span>acpi<span class="regexp">/resume.d/</span><span class="number">85</span>-anacron.sh:<span class="comment"># (Things like the slocate updatedb cause a lot of  </span></span><br><span class="line">IO.) Rather than  </span><br><span class="line"><span class="regexp">/etc/</span>acpi<span class="regexp">/events/</span>thinkpad-cmos:action=<span class="regexp">/usr/</span>sbin/thinkpad-keys--update </span><br></pre></td></tr></table></figure>
<p>反向查找。前面各个例子是查找并打印出符合条件的行，通过&quot;-v&quot;参数可以打印出不符合条件行的内容。</p>
<p>查找文件名中包含 test 的文件中不包含test 的行，此时，使用的命令为：</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">$ grep -v test* #查找文件名中包含test 的文件中不包含test 的行  </span><br><span class="line">testfile1:helLinux!  </span><br><span class="line">testfile1:Linis a free Unix-<span class="keyword">type</span> <span class="type">operating </span>system.  </span><br><span class="line">testfile1:Lin  </span><br><span class="line">testfile_1:HELLO LINUX!  </span><br><span class="line">testfile_1:LINUX <span class="keyword">IS</span> A FREE UNIX-<span class="keyword">TYPE</span> <span class="type">OPTERATING </span>SYSTEM.  </span><br><span class="line">testfile_1:THIS <span class="keyword">IS</span> A LINUX TESTFILE!  </span><br><span class="line">testfile_2:HELLO LINUX!  </span><br><span class="line">testfile_2:Linux <span class="keyword">is</span> a free unix-<span class="keyword">type</span> <span class="type">opterating </span>system. </span><br></pre></td></tr></table></figure>
<h4 id="查找文件：find">查找文件：find</h4>
<p>常用用法：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>find ./ -name <a href="http://test.sh">test.sh</a></td>
<td>查找当前目录下所有名为test.sh的文件</td>
</tr>
<tr>
<td>find ./ -name ‘*.sh’</td>
<td>查找当前目录下所有后缀为.sh的文件</td>
</tr>
<tr>
<td>find ./ -name “[A-Z]*”</td>
<td>查找当前目录下所有以大写字母开头的文件</td>
</tr>
<tr>
<td>find /tmp -size 2M</td>
<td>查找在/tmp 目录下等于2M的文件</td>
</tr>
<tr>
<td>find /tmp -size +2M</td>
<td>查找在/tmp 目录下大于2M的文件</td>
</tr>
<tr>
<td>find /tmp -size -2M</td>
<td>查找在/tmp 目录下小于2M的文件</td>
</tr>
<tr>
<td>find ./ -size +4k -size -5M</td>
<td>查找当前目录下大于4k，小于5M的文件</td>
</tr>
<tr>
<td>find ./ -perm 0777</td>
<td>查找当前目录下权限为 777 的文件或目录</td>
</tr>
</tbody>
</table>
<p>Linux find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">find <span class="selector-tag">path</span> -<span class="selector-tag">option</span> <span class="selector-attr">[ -print ]</span> <span class="selector-attr">[ -exec -ok command ]</span> &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p><strong>常用参数说明</strong> :</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-perm xxxx：权限为 xxxx的文件或目录</p>
</li>
<li class="lvl-2">
<p>-user： 按照文件属主来查找文件。</p>
</li>
<li class="lvl-2">
<p>-size n : n单位,b:512位元组的区块,c:字元数,k:kilo bytes,w:二个位元组</p>
</li>
<li class="lvl-2">
<p>-mount, -xdev : 只检查和指定目录在同一个文件系统下的文件，避免列出其它文件系统中的文件</p>
</li>
<li class="lvl-2">
<p>-amin n : 在过去 n 分钟内被读取过</p>
</li>
<li class="lvl-2">
<p>-anewer file : 比文件 file 更晚被读取过的文件</p>
</li>
<li class="lvl-2">
<p>-atime n : 在过去n天内被读取过的文件</p>
</li>
<li class="lvl-2">
<p>-cmin n : 在过去 n 分钟内被修改过</p>
</li>
<li class="lvl-2">
<p>-cnewer file :比文件 file 更新的文件</p>
</li>
<li class="lvl-2">
<p>-ctime n : 在过去n天内被修改过的文件</p>
</li>
<li class="lvl-2">
<p>-empty : 空的文件</p>
</li>
<li class="lvl-2">
<p>-gid n or -group name : gid 是 n 或是 group 名称是 name</p>
</li>
<li class="lvl-2">
<p>-ipath p, -path p : 路径名称符合 p 的文件，ipath 会忽略大小写</p>
</li>
<li class="lvl-2">
<p>-name name, -iname name : 文件名称符合 name 的文件。iname 会忽略大小写</p>
</li>
<li class="lvl-2">
<p>-type 查找某一类型的文件：</p>
<ul class="lvl-2">
<li class="lvl-4">
<p>b - 块设备文件</p>
</li>
<li class="lvl-4">
<p>d - 目录</p>
</li>
<li class="lvl-4">
<p>c - 字符设备文件</p>
</li>
<li class="lvl-4">
<p>p - 管道文件</p>
</li>
<li class="lvl-4">
<p>l - 符号链接文件</p>
</li>
<li class="lvl-4">
<p>f - 普通文件</p>
</li>
</ul>
</li>
<li class="lvl-2">
<p>-exec 命令名{} \ (注意：“}”和“\”之间有空格)</p>
</li>
</ul>
<p>find实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">显示当前目录中大于20字节并以.c结尾的文件名</span><br><span class="line">find . -name <span class="string">&quot;*.c&quot;</span> -size +20c </span><br><span class="line"></span><br><span class="line">将目前目录其其下子目录中所有一般文件列出</span><br><span class="line">find . -<span class="built_in">type</span> f</span><br><span class="line"></span><br><span class="line">将目前目录及其子目录下所有最近 20 天内更新过的文件列出</span><br><span class="line">find . -ctime -20</span><br><span class="line"></span><br><span class="line">查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们：</span><br><span class="line">find /var/log -<span class="built_in">type</span> f -mtime +7 -ok <span class="built_in">rm</span> &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">查找前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件：</span><br><span class="line">find . -<span class="built_in">type</span> f -perm 644 -<span class="built_in">exec</span> <span class="built_in">ls</span> -l &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">查找系统中所有文件长度为0的普通文件，并列出它们的完整路径：</span><br><span class="line">find / -<span class="built_in">type</span> f -size 0 -<span class="built_in">exec</span> <span class="built_in">ls</span> -l &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">从根目录查找类型为符号链接的文件，并将其删除：</span><br><span class="line">find / -<span class="built_in">type</span> l -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \</span><br><span class="line"></span><br><span class="line">从当前目录查找用户tom的所有文件并显示在屏幕上</span><br><span class="line">find . -user tom</span><br><span class="line"></span><br><span class="line">在当前目录中查找所有文件以.doc结尾，且更改时间在3天以上的文件，找到后删除，并且给出删除提示</span><br><span class="line">find . -name *.doc  -mtime +3 -ok <span class="built_in">rm</span> &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">在当前目录下查找所有链接文件，并且以长格式显示文件的基本信息</span><br><span class="line">find . -<span class="built_in">type</span> l -<span class="built_in">exec</span> <span class="built_in">ls</span> -l &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">在当前目录下查找文件名有一个小写字母、一个大写字母、两个数字组成，且扩展名为.doc的文件</span><br><span class="line">find . -name <span class="string">&#x27;[a-z][A-Z][0-9][0-9].doc&#x27;</span></span><br></pre></td></tr></table></figure>
<h4 id="拷贝文件：cp">拷贝文件：cp</h4>
<p>cp命令的功能是将给出的文件或目录复制到另一个文件或目录中，相当于DOS下的copy命令。</p>
<p>常用选项说明：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>该选项通常在复制目录时使用，它保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性。</td>
</tr>
<tr>
<td>-f</td>
<td>已经存在的目标文件而不提示</td>
</tr>
<tr>
<td>-i</td>
<td>交互式复制，在覆盖目标文件之前将给出提示要求用户确认</td>
</tr>
<tr>
<td>-r</td>
<td>若给出的源文件是目录文件，则cp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名。</td>
</tr>
<tr>
<td>-v</td>
<td>显示拷贝进度</td>
</tr>
<tr>
<td>-l</td>
<td>创建硬链接(hard link)，而非复制文件本身</td>
</tr>
<tr>
<td>-s</td>
<td>复制成为符号链接 (symbolic link)，相当于批量创建快捷方式</td>
</tr>
<tr>
<td>-u</td>
<td>若 destination 比 source 旧才升级 destination ！</td>
</tr>
</tbody>
</table>
<p>cp vim_configure/ code/ -ivr 把文件夹 vim_configure 拷贝到 code 目录里。</p>
<h4 id="移动文件：mv">移动文件：mv</h4>
<p>mv命令用来移动文件或目录，也可以给文件或目录重命名。</p>
<p>常用选项说明：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-f</td>
<td>禁止交互式操作，如有覆盖也不会给出提示</td>
</tr>
<tr>
<td>-i</td>
<td>确认交互方式操作，如果mv操作将导致对已存在的目标文件的覆盖，系统会询问是否重写，要求用户回答以避免误覆盖文件</td>
</tr>
<tr>
<td>-v</td>
<td>显示移动进度</td>
</tr>
</tbody>
</table>
<h4 id="归档管理：tar">归档管理：tar</h4>
<p>此命令可以把一系列文件归档到一个大文件中，也可以把档案文件解开以恢复数据。</p>
<p>tar使用格式 tar [参数] 打包文件名 文件</p>
<p>tar命令参数很特殊，其参数前面可以使用“-”，也可以不使用。</p>
<p>常用参数：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-c</td>
<td>生成档案文件，创建打包文件</td>
</tr>
<tr>
<td>-v</td>
<td>列出归档解档的详细过程，显示进度</td>
</tr>
<tr>
<td>-f</td>
<td>指定档案文件名称，f后面一定是.tar文件，所以必须放选项最后</td>
</tr>
<tr>
<td>-t</td>
<td>列出档案中包含的文件</td>
</tr>
<tr>
<td>-x</td>
<td>解开档案文件</td>
</tr>
</tbody>
</table>
<p>注意：除了f需要放在参数的最后，其它参数的顺序任意。</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>tar -cvf test.tar <span class="number">1</span>.txt <span class="number">2</span>.txt <span class="number">3</span>.txt </span><br><span class="line"><span class="number">1</span>.txt</span><br><span class="line"><span class="number">2</span>.txt</span><br><span class="line"><span class="number">3</span>.txt</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll</span><br><span class="line">总用量 <span class="number">32</span></span><br><span class="line">drwxrwxr-x  <span class="number">2</span> python python  <span class="number">4096</span> <span class="number">11</span>月 <span class="number">21</span> <span class="number">14</span><span class="symbol">:</span><span class="number">02</span> ./</span><br><span class="line">drwxr-xr-x <span class="number">31</span> python python  <span class="number">4096</span> <span class="number">11</span>月 <span class="number">21</span> <span class="number">13</span><span class="symbol">:</span><span class="number">34</span> ../</span><br><span class="line">-rw-rw-r--  <span class="number">1</span> python python    <span class="number">51</span> <span class="number">1</span>月  <span class="number">20</span>  <span class="number">2017</span> <span class="number">1</span>.txt</span><br><span class="line">-rw-rw-r--  <span class="number">1</span> python python    <span class="number">55</span> <span class="number">1</span>月  <span class="number">20</span>  <span class="number">2017</span> <span class="number">2</span>.txt</span><br><span class="line">-rw-rw-r--  <span class="number">1</span> python python    <span class="number">51</span> <span class="number">1</span>月  <span class="number">20</span>  <span class="number">2017</span> <span class="number">3</span>.txt</span><br><span class="line">-rw-rw-r--  <span class="number">1</span> python python <span class="number">10240</span> <span class="number">11</span>月 <span class="number">21</span> <span class="number">14</span><span class="symbol">:</span><span class="number">02</span> test.tar</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>rm -rf *.txt</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll</span><br><span class="line">总用量 <span class="number">20</span></span><br><span class="line">drwxrwxr-x  <span class="number">2</span> python python  <span class="number">4096</span> <span class="number">11</span>月 <span class="number">21</span> <span class="number">14</span><span class="symbol">:</span><span class="number">03</span> ./</span><br><span class="line">drwxr-xr-x <span class="number">31</span> python python  <span class="number">4096</span> <span class="number">11</span>月 <span class="number">21</span> <span class="number">13</span><span class="symbol">:</span><span class="number">34</span> ../</span><br><span class="line">-rw-rw-r--  <span class="number">1</span> python python <span class="number">10240</span> <span class="number">11</span>月 <span class="number">21</span> <span class="number">14</span><span class="symbol">:</span><span class="number">02</span> test.tar</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>tar -xvf test.tar </span><br><span class="line"><span class="number">1</span>.txt</span><br><span class="line"><span class="number">2</span>.txt</span><br><span class="line"><span class="number">3</span>.txt</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ls *.txt</span><br><span class="line"><span class="number">1</span>.txt  <span class="number">2</span>.txt  <span class="number">3</span>.txt</span><br></pre></td></tr></table></figure>
<h4 id="文件压缩解压：gzip、bzip2">文件压缩解压：gzip、bzip2</h4>
<p>tar与gzip命令结合使用实现文件打包、压缩。 tar只负责打包文件，但不压缩，用gzip压缩tar打包后的文件，其扩展名一般用xxxx.tar.gz。</p>
<p>gzip使用格式如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">gzip  <span class="selector-attr">[选项]</span>  被压缩文件</span><br></pre></td></tr></table></figure>
<p>常用选项：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-d</td>
<td>解压文件</td>
</tr>
<tr>
<td>-r</td>
<td>压缩文件</td>
</tr>
</tbody>
</table>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll *.tar*</span><br><span class="line">-rw-rw-r-- <span class="number">1</span> python python <span class="number">10240</span> <span class="number">11</span>月 <span class="number">25</span> <span class="number">07</span><span class="symbol">:</span><span class="number">39</span> test.tar</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>gzip -r test.tar test.tar.gz  ==&gt;或者<span class="symbol">:gzip</span> test.tar</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll *.tar*</span><br><span class="line">-rw-rw-r-- <span class="number">1</span> python python <span class="number">139</span> <span class="number">11</span>月 <span class="number">25</span> <span class="number">07</span><span class="symbol">:</span><span class="number">39</span> test.tar.gz</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>gzip -d test.tar.gz</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ll *.tar*  </span><br><span class="line">-rw-rw-r-- <span class="number">1</span> python python <span class="number">10240</span> <span class="number">11</span>月 <span class="number">25</span> <span class="number">07</span><span class="symbol">:</span><span class="number">39</span> test.tar</span><br></pre></td></tr></table></figure>
<p>tar命令中-z选项可以调用gzip实现了一个压缩的功能，实行一个先打包后压缩的过程。</p>
<p>压缩用法：tar zcvf 压缩包包名 文件1 文件2 …</p>
<p>例如： tar zcvf test.tar.gz 1.c 2.c 3.c 4.c把 1.c 2.c 3.c 4.c 压缩成 test.tar.gz</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="number">1</span>.c  <span class="number">2</span>.c  <span class="number">3</span>.c  <span class="number">4</span>.c</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>tar zcvf test.tar.gz <span class="number">1</span>.c <span class="number">2</span>.c <span class="number">3</span>.c <span class="number">4</span>.c </span><br><span class="line"></span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="number">1</span>.c  <span class="number">2</span>.c  <span class="number">3</span>.c  <span class="number">4</span>.c  test.tar.gz</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>tar -zcvf new.tar.gz <span class="number">1</span>.c <span class="number">2</span>.c <span class="number">3</span>.c <span class="number">4</span>.c        </span><br><span class="line"></span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="number">1</span>.c  <span class="number">2</span>.c  <span class="number">3</span>.c  <span class="number">4</span>.c  new.tar.gz  test.tar.gz</span><br></pre></td></tr></table></figure>
<p>解压用法： tar zxvf 压缩包包名</p>
<p>例如：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>ls</span><br><span class="line">new.tar.gz  test.tar.gz</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>tar zxvf new.tar.gz </span><br><span class="line"><span class="number">1</span>.c</span><br><span class="line"><span class="number">2</span>.c</span><br><span class="line"><span class="number">3</span>.c</span><br><span class="line"><span class="number">4</span>.c</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="number">1</span>.c  <span class="number">2</span>.c  <span class="number">3</span>.c  <span class="number">4</span>.c  new.tar.gz  test.tar.gz</span><br></pre></td></tr></table></figure>
<p>解压到指定目录：-C （解压时可以不指定-z选项）</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>ls number/     </span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>tar xvf test.tar.gz -C number/     </span><br><span class="line"></span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test/code</span><span class="variable">$ </span>ls number/                    </span><br><span class="line"><span class="number">1</span>.c  <span class="number">2</span>.c  <span class="number">3</span>.c  <span class="number">4</span>.c</span><br></pre></td></tr></table></figure>
<p>bzip2命令跟gzip用法类似</p>
<p>压缩用法：tar jcvf 压缩包包名 文件…(tar jcvf bk.tar.bz2 *.c)</p>
<p>解压用法：tar jxvf 压缩包包名 (tar jxvf bk.tar.bz2)</p>
<h4 id="文件压缩解压：zip、unzip">文件压缩解压：zip、unzip</h4>
<p>通过zip压缩文件的目标文件不需要指定扩展名，默认扩展名为zip。</p>
<p>压缩文件：zip [-r] 目标文件(没有扩展名) 源文件</p>
<p>解压文件：unzip -d 解压后目录文件 压缩文件</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="number">1</span>.txt  <span class="number">2</span>.txt  <span class="number">3</span>.txt  test.tar</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>zip myzip *.txt</span><br><span class="line">  <span class="symbol">adding:</span> <span class="number">1</span>.txt (stored <span class="number">0</span>%)</span><br><span class="line">  <span class="symbol">adding:</span> <span class="number">2</span>.txt (stored <span class="number">0</span>%)</span><br><span class="line">  <span class="symbol">adding:</span> <span class="number">3</span>.txt (stored <span class="number">0</span>%)</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="number">1</span>.txt  <span class="number">2</span>.txt  <span class="number">3</span>.txt  myzip.zip  test.tar</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>rm -f *.txt *.tar</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ls</span><br><span class="line">myzip.zip</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>unzip myzip.zip </span><br><span class="line"><span class="symbol">Archive:</span>  myzip.zip</span><br><span class="line"> <span class="symbol">extracting:</span> <span class="number">1</span>.txt                   </span><br><span class="line"> <span class="symbol">extracting:</span> <span class="number">2</span>.txt                   </span><br><span class="line"> <span class="symbol">extracting:</span> <span class="number">3</span>.txt                   </span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="number">1</span>.txt  <span class="number">2</span>.txt  <span class="number">3</span>.txt  myzip.zip</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>unzip -d dir myzip.zip </span><br><span class="line"><span class="symbol">Archive:</span>  myzip.zip</span><br><span class="line"> <span class="symbol">extracting:</span> dir/<span class="number">1</span>.txt               </span><br><span class="line"> <span class="symbol">extracting:</span> dir/<span class="number">2</span>.txt               </span><br><span class="line"> <span class="symbol">extracting:</span> dir/<span class="number">3</span>.txt               </span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>ls</span><br><span class="line"><span class="number">1</span>.txt  <span class="number">2</span>.txt  <span class="number">3</span>.txt  dir  myzip.zip</span><br></pre></td></tr></table></figure>
<h4 id="查看命令位置：which">查看命令位置：which</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python@ubuntu:~$ <span class="built_in">which</span> <span class="built_in">ls</span></span><br><span class="line">/bin/ls</span><br><span class="line">python@ubuntu:~$ <span class="built_in">which</span> <span class="built_in">sudo</span></span><br><span class="line">/usr/bin/sudo</span><br></pre></td></tr></table></figure>
<h3 id="用户和用户组管理">用户和用户组管理</h3>
<p>在Unix/Linux系统中，不论是由本机或是远程登录系统，每个系统都必须拥有一个账号，并且对于不同的系统资源拥有不同的使用权限。</p>
<p>Unix/Linux系统中的root账号通常用于系统的维护和管理，它对Unix/Linux操作系统的所有部分具有不受限制的访问权限。</p>
<p>在Unix/Linux安装的过程中，系统会自动创建许多用户账号，而这些默认的用户就称为“标准用户”。</p>
<p>在大多数版本的Unix/Linux中，都不推荐直接使用root账号登录系统。</p>
<h4 id="查看当前用户：whoami">查看当前用户：whoami</h4>
<p>查看当前系统当前账号的用户名。可通过cat /etc/passwd查看系统用户信息。</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>whoami</span><br><span class="line">python</span><br></pre></td></tr></table></figure>
<h4 id="查看登录用户：who">查看登录用户：who</h4>
<p>who命令用于查看当前所有登录系统的用户信息。</p>
<p>常用选项：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-m或am I</td>
<td>只显示运行who命令的用户名、登录终端和登录时间</td>
</tr>
<tr>
<td>-q或–count</td>
<td>只显示用户的登录账号和登录用户的数量</td>
</tr>
<tr>
<td>-u</td>
<td>在登录时间后显示该用户最后一次操作到当前的时间间隔</td>
</tr>
<tr>
<td>-u或–heading</td>
<td>显示列标题</td>
</tr>
</tbody>
</table>
<h4 id="退出登录账户：-exit">退出登录账户： exit</h4>
<p>如果是图形界面，退出当前终端；</p>
<p>如果是使用ssh远程登录，退出登陆账户；</p>
<p>如果是切换后的登陆用户，退出则返回上一个登陆账号。</p>
<h4 id="添加用户账号：useradd">添加用户账号：useradd</h4>
<p>在Unix/Linux中添加用户账号可以使用adduser或useradd命令，因为adduser命令是指向useradd命令的一个链接，因此，这两个命令的使用格式完全一样。</p>
<p>useradd命令的使用格式如下： useradd [参数] 新建用户账号</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-d</td>
<td>指定用户登录系统时的主目录</td>
</tr>
<tr>
<td>-m</td>
<td>自动建立目录，未指定-d参数时会在/home/{当前用户}目录下建立主目录</td>
</tr>
<tr>
<td>-g</td>
<td>指定组名称</td>
</tr>
</tbody>
</table>
<p>相关说明：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>Linux每个用户都要有一个主目录，主目录就是第一次登陆系统，用户的默认当前目录(/home/用户)；</p>
</li>
<li class="lvl-2">
<p>每一个用户必须有一个主目录，所以用useradd创建用户的时候，一定给用户指定一个主目录；</p>
</li>
<li class="lvl-2">
<p>如果创建用户的时候，不指定组名，那么系统会自动创建一个和用户名一样的组名。</p>
</li>
</ul>
<p>若创建用户时未指定家目录，后期可通过<code>usermod -d /home/abc abc</code>指定</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>useradd -d /home/abc abc -m</td>
<td>创建abc用户，如果/home/abc目录不存在，就自动创建这个目录，同时用户属于abc组</td>
</tr>
<tr>
<td>useradd -d /home/a a -g test -m</td>
<td>创建一个用户名字叫a，主目录在/home/a，如果主目录不存在，就自动创建主目录，同时用户属于test组</td>
</tr>
<tr>
<td>cat /etc/passwd</td>
<td>查看系统当前用户名</td>
</tr>
</tbody>
</table>
<h4 id="修改用户：usermod">修改用户：usermod</h4>
<p>常用的选项包括<code>-c, -d, -m, -g, -G, -s, -u以及-o等</code>，这些选项的意义与<code>useradd</code>命令中的选项一样，可以为用户指定新的资源值 。</p>
<p>修改用户所在组：usermod -g 用户组 用户名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usermod -g <span class="built_in">test</span> abc</span><br></pre></td></tr></table></figure>
<p>改abc用户的家目录位置：usermod -d 家目录 用户名</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">usermod -d /home/<span class="keyword">abc</span> <span class="keyword">abc</span></span><br></pre></td></tr></table></figure>
<p>选项<code>-l 新用户名</code>指定一个新的账号，可修改用户名：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/txt</span><span class="variable">$ </span>tail /etc/passwd -n <span class="number">1</span> </span><br><span class="line"><span class="symbol">aaa:</span><span class="symbol">x:</span><span class="number">1001</span><span class="symbol">:</span><span class="number">1001</span><span class="symbol">:</span><span class="symbol">:/home/aaa</span>:</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/txt</span><span class="variable">$ </span>sudo usermod -l bbb -d /home/bbb aaa   </span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/txt</span><span class="variable">$ </span>tail /etc/passwd -n <span class="number">1</span>               </span><br><span class="line"><span class="symbol">bbb:</span><span class="symbol">x:</span><span class="number">1001</span><span class="symbol">:</span><span class="number">1001</span><span class="symbol">:</span><span class="symbol">:/home/bbb</span><span class="symbol">:</span></span><br></pre></td></tr></table></figure>
<h4 id="设置用户密码：passwd">设置用户密码：passwd</h4>
<p>超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。命令的格式为：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">passwd</span> 选项 用户名</span><br></pre></td></tr></table></figure>
<p>可使用的选项：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-l 锁定口令，即禁用账号。</p>
</li>
<li class="lvl-2">
<p>-u 口令解锁。</p>
</li>
<li class="lvl-2">
<p>-d 使账号无口令。</p>
</li>
<li class="lvl-2">
<p>-f 强迫用户下次登录时修改口令。</p>
</li>
</ul>
<p>假设当前用户是sam，则下面的命令修改该用户自己的口令：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">$ passwd </span><br><span class="line"><span class="built_in">Old</span> <span class="keyword">password</span>:****** </span><br><span class="line"><span class="built_in">New</span> <span class="keyword">password</span>:******* </span><br><span class="line">Re-enter <span class="built_in">new</span> <span class="keyword">password</span>:*******</span><br></pre></td></tr></table></figure>
<p>如果是超级用户，可以用下列形式指定任何用户的口令：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># passwd sam </span></span><br><span class="line">New password:<span class="strong">****</span><span class="strong">*** </span></span><br><span class="line"><span class="strong">Re-enter new password:**</span><span class="strong">****</span><span class="emphasis">*</span></span><br></pre></td></tr></table></figure>
<p>普通用户修改自己的口令时，passwd命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。</p>
<p>为用户指定空口令时，执行下列形式的命令：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">passwd -d sam</span></span><br></pre></td></tr></table></figure>
<p>此命令将用户 sam 的口令删除，这样用户 sam 下一次登录时，系统就不再允许该用户登录了。</p>
<p>passwd 命令还可以用 -l(lock) 选项锁定某一用户，使其不能登录，例如：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">passwd -l sam</span></span><br></pre></td></tr></table></figure>
<h4 id="删除用户：userdel">删除用户：userdel</h4>
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>userdel abc(用户名)</td>
<td>删除abc用户，但不会自动删除用户的主目录</td>
</tr>
<tr>
<td>userdel -r abc(用户名)</td>
<td>删除用户，同时删除用户的主目录</td>
</tr>
</tbody>
</table>
<h4 id="切换用户：su">切换用户：su</h4>
<p>su后面可以加“-”会将当前的工作目录自动转换到切换后的用户主目录.</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>su</td>
<td>切换到root用户</td>
</tr>
<tr>
<td>su root</td>
<td>切换到root用户</td>
</tr>
<tr>
<td>su -</td>
<td>切换到root用户，同时切换目录到/root</td>
</tr>
<tr>
<td>su - root</td>
<td>切换到root用户，同时切换目录到/root</td>
</tr>
<tr>
<td>su 普通用户</td>
<td>切换到普通用户</td>
</tr>
<tr>
<td>su - 普通用户</td>
<td>切换到普通用户，同时切换普通用户所在的目录</td>
</tr>
</tbody>
</table>
<p>注意：对于ubuntu平台，只能通过sudo su进入root账号。</p>
<p>sudo允许系统管理员让普通用户执行一些或者全部的root命令的一个工具。</p>
<h4 id="以root身份执行指令：sudo">以root身份执行指令：sudo</h4>
<p>sudo命令可以临时获取root权限</p>
<p>使用权限：在 /etc/sudoers 中有出现的使用者。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">显示出自己（执行 <span class="built_in">sudo</span> 的使用者）的权限</span><br><span class="line"><span class="built_in">sudo</span> -l</span><br><span class="line">以root权限执行上一条命令</span><br><span class="line"><span class="built_in">sudo</span> !!</span><br></pre></td></tr></table></figure>
<p>sudoers文件配置语法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user  MACHINE=COMMANDS</span><br><span class="line">用户 登录的主机=（可以变换的身份） 可以执行的命令  </span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">允许root用户执行任意路径下的任意命令 </span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">允许wheel用户组中的用户执行所有命令  </span><br><span class="line">%wheel        ALL=(ALL)       ALL</span><br><span class="line">允许wheel用户组中的用户在不输入该用户的密码的情况下使用所有命令</span><br><span class="line">%wheel        ALL=(ALL)       NOPASSWD: ALL</span><br><span class="line">允许support用户在EPG的机器上不输入密码的情况下使用SQUID中的命令</span><br><span class="line">Cmnd_Alias   SQUID = /opt/vtbin/squid_refresh, /sbin/service, /bin/rm</span><br><span class="line">Host_Alias   EPG = 192.168.1.1, 192.168.1.2</span><br><span class="line">support EPG=(ALL) NOPASSWD: SQUID</span><br></pre></td></tr></table></figure>
<h4 id="添加、删除组账号：groupadd、groupdel">添加、删除组账号：groupadd、groupdel</h4>
<p>groupadd 新建组账号 groupdel 组账号 cat /etc/group 查看用户组</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>sudo groupadd abc</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>sudo groupdel abc</span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~/test</span><span class="variable">$ </span>sudo groupdel abc</span><br><span class="line">groupdel：“abc”组不存在</span><br></pre></td></tr></table></figure>
<h4 id="用户组管理：groupmod">用户组管理：groupmod</h4>
<p>修改用户组的属性使用groupmod命令。其语法如下：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">groupmod</span> 选项 用户组</span><br></pre></td></tr></table></figure>
<p>常用的选项有：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-g GID 为用户组指定新的组标识号。</p>
</li>
<li class="lvl-2">
<p>-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。</p>
</li>
<li class="lvl-2">
<p>-n新用户组 将用户组的名字改为新名字</p>
</li>
</ul>
<p>将组group2的组标识号修改为102：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">groupmod</span> -g <span class="number">102</span> group2</span><br></pre></td></tr></table></figure>
<p>将组group2的标识号改为10000，组名修改为group3：</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">groupmod –g 10000 -n group3 group2</span><br></pre></td></tr></table></figure>
<p>如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。</p>
<p>用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>newgrp root</span><br></pre></td></tr></table></figure>
<p>这条命令将当前用户切换到root用户组，前提条件是root用户组确实是该用户的主组或附加组。类似于用户账号的管理，用户组的管理也可以通过集成的系统管理工具来完成。</p>
<h3 id="系统管理">系统管理</h3>
<h4 id="查看当前日历：cal">查看当前日历：cal</h4>
<p>cal命令用于查看当前日历，-y显示整年日历：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">python@ubuntu:~$ cal</span><br><span class="line">      十一月<span class="number"> 2019 </span>       </span><br><span class="line">日 一 二 三 四 五 六  </span><br><span class="line">               <span class="number"> 1 </span><span class="number"> 2 </span> </span><br><span class="line"><span class="number"> 3 </span><span class="number"> 4 </span><span class="number"> 5 </span><span class="number"> 6 </span><span class="number"> 7 </span><span class="number"> 8 </span><span class="number"> 9 </span> </span><br><span class="line">10<span class="number"> 11 </span>12<span class="number"> 13 </span>14<span class="number"> 15 </span>16  </span><br><span class="line">17<span class="number"> 18 </span>19<span class="number"> 20 </span>21<span class="number"> 22 </span>23  </span><br><span class="line">24<span class="number"> 25 </span>26<span class="number"> 27 </span>28<span class="number"> 29 </span>30 </span><br></pre></td></tr></table></figure>
<h4 id="显示或设置时间：date">显示或设置时间：date</h4>
<p>设置时间格式（需要管理员权限）：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">date</span> [MMDDhhmm<span class="string">[[CC]YY][.ss]]</span> +<span class="built_in">format</span></span><br></pre></td></tr></table></figure>
<p>MM为月，DD为天，hh为小时，mm为分钟；CC为年前两位，YY为年的后两位，ss为秒。</p>
<p>如： date 010203042016.55。</p>
<p>显示时间格式（date ‘+%y,%m,%d,%H,%M,%S’）：</p>
<table>
<thead>
<tr>
<th>format格式</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>%Y，%y</td>
<td>年</td>
</tr>
<tr>
<td>%m</td>
<td>月</td>
</tr>
<tr>
<td>%d</td>
<td>日</td>
</tr>
<tr>
<td>%H</td>
<td>时</td>
</tr>
<tr>
<td>%M</td>
<td>分</td>
</tr>
<tr>
<td>%S</td>
<td>秒</td>
</tr>
</tbody>
</table>
<h4 id="查看网络状态：netstat">查看网络状态：netstat</h4>
<p>netstat命令用于显示网络状态。</p>
<p>利用netstat指令可让你得知整个Linux系统的网络情况。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">netstat <span class="selector-attr">[-acCeFghilMnNoprstuvVwx]</span><span class="selector-attr">[-A&lt;网络类型&gt;]</span><span class="selector-attr">[--ip]</span></span><br></pre></td></tr></table></figure>
<p><strong>参数说明</strong>：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-a或–all 显示所有连线中的Socket。</p>
</li>
<li class="lvl-2">
<p>-A&lt;网络类型&gt;或–&lt;网络类型&gt; 列出该网络类型连线中的相关地址。</p>
</li>
<li class="lvl-2">
<p>-c或–continuous 持续列出网络状态。</p>
</li>
<li class="lvl-2">
<p>-C或–cache 显示路由器配置的快取信息。</p>
</li>
<li class="lvl-2">
<p>-e或–extend 显示网络其他相关信息。</p>
</li>
<li class="lvl-2">
<p>-F或–fib 显示FIB。</p>
</li>
<li class="lvl-2">
<p>-g或–groups 显示多重广播功能群组组员名单。</p>
</li>
<li class="lvl-2">
<p>-h或–help 在线帮助。</p>
</li>
<li class="lvl-2">
<p>-i或–interfaces 显示网络界面信息表单。</p>
</li>
<li class="lvl-2">
<p>-l或–listening 显示监控中的服务器的Socket。</p>
</li>
<li class="lvl-2">
<p>-M或–masquerade 显示伪装的网络连线。</p>
</li>
<li class="lvl-2">
<p>-n或–numeric 直接使用IP地址，而不通过域名服务器。</p>
</li>
<li class="lvl-2">
<p>-N或–netlink或–symbolic 显示网络硬件外围设备的符号连接名称。</p>
</li>
<li class="lvl-2">
<p>-o或–timers 显示计时器。</p>
</li>
<li class="lvl-2">
<p>-p或–programs 显示正在使用Socket的程序识别码和程序名称。</p>
</li>
<li class="lvl-2">
<p>-r或–route 显示Routing Table。</p>
</li>
<li class="lvl-2">
<p>-s或–statistice 显示网络工作信息统计表。</p>
</li>
<li class="lvl-2">
<p>-t或–tcp 显示TCP传输协议的连线状况。</p>
</li>
<li class="lvl-2">
<p>-u或–udp 显示UDP传输协议的连线状况。</p>
</li>
<li class="lvl-2">
<p>-v或–verbose 显示指令执行过程。</p>
</li>
<li class="lvl-2">
<p>-V或–version 显示版本信息。</p>
</li>
<li class="lvl-2">
<p>-w或–raw 显示RAW传输协议的连线状况。</p>
</li>
<li class="lvl-2">
<p>-x或–unix 此参数的效果和指定&quot;-A unix&quot;参数相同。</p>
</li>
<li class="lvl-2">
<p>–ip或–inet 此参数的效果和指定&quot;-A inet&quot;参数相同。</p>
</li>
</ul>
<p>常用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM_0_9_centos ~]# netstat -nltp</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address  Foreign Address  State   PID/Program name</span><br><span class="line">tcp        0      0    0.0.0.0:22    0.0.0.0:*      LISTEN   3308/sshd</span><br><span class="line">tcp6       0      0         :::80         :::*      LISTEN   4624/httpd</span><br></pre></td></tr></table></figure>
<h4 id="查看进程信息：ps">查看进程信息：ps</h4>
<p>进程是一个具有一定独立功能的程序，它是操作系统动态执行的基本单元。</p>
<p><strong>ps命令选项：</strong></p>
<ul class="lvl-0">
<li class="lvl-2">
<p>ps a 显示现行终端机下的所有程序，包括其他用户的程序。</p>
</li>
<li class="lvl-2">
<p>ps -A 显示所有程序。</p>
</li>
<li class="lvl-2">
<p>ps c 列出程序时，显示每个程序真正的指令名称，而不包含路 径，参数或常驻服务的标示。</p>
</li>
<li class="lvl-2">
<p>ps -e 此参数的效果和指定&quot;A&quot;参数相同。</p>
</li>
<li class="lvl-2">
<p>ps e 列出程序时，显示每个程序所使用的环境变量。</p>
</li>
<li class="lvl-2">
<p>ps f 用ASCII字符显示树状结构，表达程序间的相互关系。</p>
</li>
<li class="lvl-2">
<p>ps -H 显示树状结构，表示程序间的相互关系。</p>
</li>
<li class="lvl-2">
<p>ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。</p>
</li>
<li class="lvl-2">
<p>ps s 采用程序信号的格式显示程序状况。</p>
</li>
<li class="lvl-2">
<p>ps u 以用户为主的格式来显示程序状况。</p>
</li>
<li class="lvl-2">
<p>ps x 显示所有程序，不以终端机来区分。</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>显示终端上的所有进程，包括其他用户的进程</td>
</tr>
<tr>
<td>-u</td>
<td>显示进程的详细状态</td>
</tr>
<tr>
<td>-x</td>
<td>显示没有控制终端的进程</td>
</tr>
<tr>
<td>-w</td>
<td>显示加宽，以便显示更多的信息</td>
</tr>
<tr>
<td>-r</td>
<td>只显示正在运行的进程</td>
</tr>
</tbody>
</table>
<p><strong>常见用法：</strong></p>
<ul class="lvl-0">
<li class="lvl-2">
<p>ps -e 查看所有进程信息（瞬时的）</p>
</li>
<li class="lvl-2">
<p>ps -u root -N 查看所有不是root运行的进程</p>
</li>
<li class="lvl-2">
<p>ps ax 显示所有进程状态状态</p>
</li>
<li class="lvl-2">
<p>ps -ef |grep xxx 显示含有xxx的进程</p>
</li>
</ul>
<p>实例：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ps -A 显示进程信息</span></span><br><span class="line">PID TTY     TIME CMD</span><br><span class="line"> <span class="number"> 1 </span>?    00:00:02 init</span><br><span class="line"> <span class="number"> 2 </span>?    00:00:00 kthreadd</span><br><span class="line">……省略部分结果</span><br><span class="line">30749 pts/0  00:00:15 gedit</span><br><span class="line">30886 ?    00:01:10 qtcreator.bin</span><br><span class="line">30894 ?    00:00:00 qtcreator.bin </span><br></pre></td></tr></table></figure>
<p>显示指定用户信息：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ps -u root //显示root进程用户信息</span></span><br><span class="line"> PID TTY     TIME CMD</span><br><span class="line"> <span class="number"> 1 </span>?    00:00:02 init</span><br><span class="line"> <span class="number"> 2 </span>?    00:00:00 kthreadd</span><br><span class="line"> <span class="number"> 3 </span>?    00:00:00 migration/0</span><br><span class="line">……省略部分结果</span><br><span class="line">30487 ?    00:00:06 gnome-terminal</span><br><span class="line">30488 ?    00:00:00 gnome-pty-helpe</span><br><span class="line">30489 pts/0  00:00:00 bash</span><br></pre></td></tr></table></figure>
<p>显示所有进程信息，连同命令行</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ps -ef //显示所有命令，连带命令行</span></span><br><span class="line">UID    PID PPID C STIME TTY     TIME CMD</span><br><span class="line">root    <span class="number"> 1 </span> <span class="number"> 0 </span>0 10:22 ?    00:00:02 /sbin/init</span><br><span class="line">root    <span class="number"> 2 </span> <span class="number"> 0 </span>0 10:22 ?    00:00:00 [kthreadd]</span><br><span class="line">root    <span class="number"> 3 </span> <span class="number"> 2 </span>0 10:22 ?    00:00:00 [migration/0]</span><br><span class="line">root    <span class="number"> 4 </span> <span class="number"> 2 </span>0 10:22 ?    00:00:00 [ksoftirqd/0]</span><br><span class="line">root    <span class="number"> 5 </span> <span class="number"> 2 </span>0 10:22 ?    00:00:00 [watchdog/0]</span><br><span class="line">root    <span class="number"> 6 </span> <span class="number"> 2 </span>0 10:22 ?    /usr/lib/NetworkManager</span><br><span class="line">……省略部分结果</span><br><span class="line">root  <span class="number"> 31302 </span>2095<span class="number"> 0 </span>17:42 ?    00:00:00 sshd: root@pts/2 </span><br><span class="line">root  <span class="number"> 31374 </span>31302<span class="number"> 0 </span>17:42 pts/2  00:00:00 -bash</span><br><span class="line">root  <span class="number"> 31400 </span> <span class="number"> 1 </span>0 17:46 ?    00:00:00 /usr/bin/python /usr/sbin/aptd</span><br><span class="line">root  <span class="number"> 31407 </span>31374<span class="number"> 0 </span>17:48 pts/2  00:00:00 ps -ef</span><br></pre></td></tr></table></figure>
<h4 id="以树状图显示进程关系：pstree">以树状图显示进程关系：pstree</h4>
<p>显示进程的关系</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">pstree</span><br><span class="line">init-+-amd</span><br><span class="line">|<span class="string">-apmd</span></span><br><span class="line"><span class="string"></span>|<span class="string">-atd</span></span><br><span class="line"><span class="string"></span>|<span class="string">-httpd---10*[httpd]</span></span><br><span class="line"><span class="string">%pstree -p</span></span><br><span class="line"><span class="string">init(1)-+-amd(447)</span></span><br><span class="line"><span class="string"></span>|<span class="string">-apmd(105)</span></span><br><span class="line"><span class="string"></span>|<span class="string">-atd(339)</span></span><br><span class="line"><span class="string">%pstree -c</span></span><br><span class="line"><span class="string">init-+-amd</span></span><br><span class="line"><span class="string"></span>|<span class="string">-apmd</span></span><br><span class="line"><span class="string"></span>|<span class="string">-atd</span></span><br><span class="line"><span class="string"></span>|<span class="string">-httpd-+-httpd</span></span><br><span class="line"><span class="string"></span>|<span class="string"> </span>|<span class="string">-httpd</span></span><br><span class="line"><span class="string"></span>|<span class="string"> </span>|<span class="string">-httpd</span></span><br><span class="line"><span class="string"></span>|<span class="string"> </span>|<span class="string">-httpd</span></span><br><span class="line"><span class="string">....</span></span><br></pre></td></tr></table></figure>
<p>特别表明在运行的进程：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># pstree -apnh <span class="comment">//显示进程间的关系</span></span></span><br></pre></td></tr></table></figure>
<p>同时显示用户名称：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># pstree -u <span class="comment">//显示用户名称</span></span></span><br></pre></td></tr></table></figure>
<h4 id="动态显示进程：top">动态显示进程：top</h4>
<p>top命令用来动态显示运行中的进程。top命令能够在运行后，在指定的时间间隔更新显示信息。-d参数可以指定显示信息更新的时间间隔。</p>
<p>在top命令执行后，可以按下按键得到对显示的结果进行排序：</p>
<table>
<thead>
<tr>
<th>按键</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>M</td>
<td>根据内存使用量来排序</td>
</tr>
<tr>
<td>P</td>
<td>根据CPU占有率来排序</td>
</tr>
<tr>
<td>T</td>
<td>根据进程运行时间的长短来排序</td>
</tr>
<tr>
<td>U</td>
<td>可以根据后面输入的用户名来筛选进程</td>
</tr>
<tr>
<td>K</td>
<td>可以根据后面输入的PID来杀死进程。</td>
</tr>
<tr>
<td>q</td>
<td>退出</td>
</tr>
<tr>
<td>h</td>
<td>获得帮助</td>
</tr>
</tbody>
</table>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">python@ubuntu:~$ top</span><br><span class="line">top - 08:31:54 up<span class="number"> 2 </span>min, <span class="number"> 1 </span>user,  load average: 0.25, 0.37, 0.17</span><br><span class="line">Tasks:<span class="number"> 271 </span>total,  <span class="number"> 1 </span>running,<span class="number"> 270 </span>sleeping,  <span class="number"> 0 </span>stopped,  <span class="number"> 0 </span>zombie</span><br><span class="line">%Cpu(s):  0.2 us,  0.0 sy,  0.0 ni, 99.8 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem : <span class="number"> 4028880 </span>total, <span class="number"> 3210104 </span>free,  <span class="number"> 331668 </span>used,  <span class="number"> 487108 </span>buff/cache</span><br><span class="line">KiB Swap: <span class="number"> 4192252 </span>total, <span class="number"> 4192252 </span>free,       <span class="number"> 0 </span>used. <span class="number"> 3414856 </span>avail Mem </span><br><span class="line"></span><br><span class="line">   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND    </span><br><span class="line"> <span class="number"> 4827 </span>redis    <span class="number"> 20 </span> <span class="number"> 0 </span> <span class="number"> 47204 </span> <span class="number"> 6632 </span> <span class="number"> 2300 </span>S   0.3  0.2   0:00.21 redis-ser+ </span><br><span class="line"> <span class="number"> 6371 </span>python   <span class="number"> 20 </span> <span class="number"> 0 </span> <span class="number"> 49000 </span> <span class="number"> 3896 </span> <span class="number"> 3176 </span>R   0.3  0.1   0:00.12 top        </span><br><span class="line">    <span class="number"> 1 </span>root     <span class="number"> 20 </span> <span class="number"> 0 </span><span class="number"> 119940 </span> <span class="number"> 6112 </span> <span class="number"> 4004 </span>S   0.0  0.2   0:02.77 systemd    </span><br><span class="line">    <span class="number"> 2 </span>root     <span class="number"> 20 </span> <span class="number"> 0 </span>     <span class="number"> 0 </span>    <span class="number"> 0 </span>    <span class="number"> 0 </span>S   0.0  0.0   0:00.02 kthreadd   </span><br><span class="line">    <span class="number"> 3 </span>root     <span class="number"> 20 </span> <span class="number"> 0 </span>     <span class="number"> 0 </span>    <span class="number"> 0 </span>    <span class="number"> 0 </span>S   0.0  0.0   0:00.11 ksoftirqd+ </span><br></pre></td></tr></table></figure>
<p>更高级的命令是htop，但需要安装：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">[root@VM_0_9_centos ~]<span class="comment"># htop</span></span><br><span class="line"></span><br><span class="line">  CPU[||                                                              1.3%]   Tasks: 55,<span class="number"> 29 </span>thr;<span class="number"> 1 </span>running</span><br><span class="line">  Mem[||||||||||||||||||||||||||||||||||||||||||||||||||||||||||184M/1.80G]   Load average: 0.00 0.01 0.05 </span><br><span class="line">  Swp[                                                               0K/0K]   Uptime:<span class="number"> 42 </span>days, 03:29:48</span><br><span class="line"></span><br><span class="line">  PID USER      PRI  NI  VIRT   RES   SHR S CPU% MEM%   TIME+  Command</span><br><span class="line"><span class="number"> 2609 </span>root      <span class="number"> 20 </span> <span class="number"> 0 </span> 156M <span class="number"> 9132 </span><span class="number"> 1784 </span>S  0.7  0.5 39:01.13 barad_agent</span><br><span class="line"><span class="number"> 2610 </span>root      <span class="number"> 20 </span> <span class="number"> 0 </span> 660M<span class="number"> 14168 </span><span class="number"> 1976 </span>S  0.7  0.8  3h35:20 barad_agent</span><br><span class="line"><span class="number"> 1158 </span>root      <span class="number"> 20 </span> <span class="number"> 0 </span> 120M <span class="number"> 2576 </span><span class="number"> 1492 </span>R  0.0  0.1  0:00.01 htop</span><br></pre></td></tr></table></figure>
<h4 id="终止进程：kill">终止进程：kill</h4>
<p>kill命令指定进程号的进程，需要配合 ps 使用。</p>
<p>使用格式：</p>
<figure class="highlight qml"><table><tr><td class="code"><pre><span class="line">kill [-<span class="keyword">signal</span><span class="string">] pid</span></span><br></pre></td></tr></table></figure>
<p>信号值从0到15，其中9为绝对终止，可以处理一般信号无法终止的进程。</p>
<h4 id="关机重启：reboot、shutdown、init">关机重启：reboot、shutdown、init</h4>
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>reboot</td>
<td>重新启动操作系统</td>
</tr>
<tr>
<td>shutdown –r now</td>
<td>重新启动操作系统，shutdown会给别的用户提示</td>
</tr>
<tr>
<td>shutdown -h now</td>
<td>立刻关机，其中now相当于时间为0的状态</td>
</tr>
<tr>
<td>shutdown -h 20:25</td>
<td>系统在今天的20:25 会关机</td>
</tr>
<tr>
<td>shutdown -h +10</td>
<td>系统再过十分钟后自动关机</td>
</tr>
<tr>
<td>init 0</td>
<td>关机</td>
</tr>
<tr>
<td>init 6</td>
<td>重启</td>
</tr>
</tbody>
</table>
<h4 id="检测磁盘空间：df">检测磁盘空间：df</h4>
<p>df命令用于检测文件系统的磁盘空间占用和空余情况，可以显示所有文件系统对节点和磁盘块的使用情况。</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>显示所有文件系统的磁盘使用情况</td>
</tr>
<tr>
<td>-m</td>
<td>以1024字节为单位显示</td>
</tr>
<tr>
<td>-t</td>
<td>显示各指定文件系统的磁盘空间使用情况</td>
</tr>
<tr>
<td>-T</td>
<td>显示文件系统</td>
</tr>
</tbody>
</table>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span>:~<span class="regexp">/test$ df -Th</span></span><br><span class="line"><span class="regexp">文件系统       类型      容量  已用  可用 已用% 挂载点</span></span><br><span class="line"><span class="regexp">udev           devtmpfs  2.0G     0  2.0G    0% /dev</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">394</span>M  <span class="number">6.4</span>M  <span class="number">388</span>M    <span class="number">2</span>% <span class="regexp">/run</span></span><br><span class="line"><span class="regexp">/dev</span><span class="regexp">/sda1      ext4       21G  8.7G   11G   45% /</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">2.0</span>G  <span class="number">256</span>K  <span class="number">2.0</span>G    <span class="number">1</span>% <span class="regexp">/dev/shm</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">5.0</span>M  <span class="number">4.0</span>K  <span class="number">5.0</span>M    <span class="number">1</span>% <span class="regexp">/run/lock</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">2.0</span>G     <span class="number">0</span>  <span class="number">2.0</span>G    <span class="number">0</span>% <span class="regexp">/sys/fs</span><span class="regexp">/cgroup</span></span><br><span class="line"><span class="regexp">tmpfs          tmpfs     394M   44K  394M    1% /run</span><span class="regexp">/user/</span><span class="number">1000</span></span><br><span class="line">[root<span class="variable">@VM_0_9_centos</span> ~]<span class="comment"># df -Th</span></span><br><span class="line">Filesystem     Type      Size  Used Avail Use% Mounted on</span><br><span class="line"><span class="regexp">/dev/vda</span>1      ext4       <span class="number">50</span>G  <span class="number">4.8</span>G   <span class="number">42</span>G  <span class="number">11</span>% <span class="regexp">/</span></span><br><span class="line"><span class="regexp">devtmpfs       devtmpfs  909M     0  909M   0% /dev</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">920</span>M   <span class="number">24</span>K  <span class="number">920</span>M   <span class="number">1</span>% <span class="regexp">/dev/shm</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">920</span>M  <span class="number">472</span>K  <span class="number">919</span>M   <span class="number">1</span>% <span class="regexp">/run</span></span><br><span class="line"><span class="regexp">tmpfs          tmpfs     920M     0  920M   0% /sys</span><span class="regexp">/fs/cgroup</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">184</span>M     <span class="number">0</span>  <span class="number">184</span>M   <span class="number">0</span>% <span class="regexp">/run/user</span><span class="regexp">/0</span></span><br></pre></td></tr></table></figure>
<h4 id="检测目录所占磁盘空间：du">检测目录所占磁盘空间：du</h4>
<p>du命令用于统计目录或文件所占磁盘空间的大小，该命令的执行结果与df类似，du更侧重于磁盘的使用状况。</p>
<p>du命令的使用格式如下： du [选项] 目录或文件名</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>递归显示指定目录中各文件和子目录中文件占用的数据块</td>
</tr>
<tr>
<td>-s</td>
<td>显示指定文件或目录占用的数据块</td>
</tr>
<tr>
<td>-b</td>
<td>以字节为单位显示磁盘占用情况</td>
</tr>
<tr>
<td>-l</td>
<td>计算所有文件大小，对硬链接文件计算多次</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python@ubuntu:~$ <span class="built_in">du</span> -sh /home/</span><br><span class="line">1.4G    /home/</span><br><span class="line">python@ubuntu:~$ <span class="built_in">du</span> -h</span><br><span class="line">4.0K    ./.gnome2/accels</span><br><span class="line">8.0K    ./.gnome2</span><br><span class="line">32K     ./.pki/nssdb</span><br><span class="line">36K     ./.pki</span><br><span class="line">8.0K    ./.dbus/session-bus</span><br><span class="line">12K     ./.dbus</span><br><span class="line">4.0K    ./.gnome2_private</span><br><span class="line">4.0K    ./Music</span><br></pre></td></tr></table></figure>
<h4 id="查看或配置网卡信息：ifconfig">查看或配置网卡信息：ifconfig</h4>
<p>ifconfig显示所有网卡的信息：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">python<span class="keyword">@ubuntu</span>:~$ ifconfig </span><br><span class="line">ens33     Link <span class="attribute">encap</span>:以太网  硬件地址 <span class="number">00</span>:<span class="number">0</span><span class="attribute">c</span>:<span class="number">29</span>:<span class="number">59</span>:<span class="number">65</span>:f2  </span><br><span class="line">          inet 地址:<span class="number">192.168</span>.<span class="number">40.11</span>  广播:<span class="number">192.168</span>.<span class="number">40.255</span>  掩码:<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">          inet6 地址: fe80::<span class="number">432</span><span class="attribute">f</span>:<span class="number">6</span>c4<span class="attribute">a</span>:f47<span class="attribute">d</span>:<span class="number">5</span>f6b/<span class="number">64</span> <span class="attribute">Scope</span>:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  <span class="attribute">MTU</span>:<span class="number">1500</span>  跃点数:<span class="number">1</span></span><br><span class="line">          接收数据包:<span class="number">422794</span> 错误:<span class="number">0</span> 丢弃:<span class="number">0</span> 过载:<span class="number">0</span> 帧数:<span class="number">0</span></span><br><span class="line">          发送数据包:<span class="number">208666</span> 错误:<span class="number">0</span> 丢弃:<span class="number">0</span> 过载:<span class="number">0</span> 载波:<span class="number">0</span></span><br><span class="line">          碰撞:<span class="number">0</span> 发送队列长度:<span class="number">1000</span> </span><br><span class="line">          接收字节:<span class="number">603741383</span> (<span class="number">603.7</span> MB)  发送字节:<span class="number">12819550</span> (<span class="number">12.8</span> MB)</span><br><span class="line"></span><br><span class="line">lo        Link <span class="attribute">encap</span>:本地环回  </span><br><span class="line">          inet 地址:<span class="number">127.0</span>.<span class="number">0.1</span>  掩码:<span class="number">255.0</span>.<span class="number">0.0</span></span><br><span class="line">          inet6 地址: ::<span class="number">1</span>/<span class="number">128</span> <span class="attribute">Scope</span>:Host</span><br><span class="line">          UP LOOPBACK RUNNING  <span class="attribute">MTU</span>:<span class="number">65536</span>  跃点数:<span class="number">1</span></span><br><span class="line">          接收数据包:<span class="number">2248</span> 错误:<span class="number">0</span> 丢弃:<span class="number">0</span> 过载:<span class="number">0</span> 帧数:<span class="number">0</span></span><br><span class="line">          发送数据包:<span class="number">2248</span> 错误:<span class="number">0</span> 丢弃:<span class="number">0</span> 过载:<span class="number">0</span> 载波:<span class="number">0</span></span><br><span class="line">          碰撞:<span class="number">0</span> 发送队列长度:<span class="number">1</span> </span><br><span class="line">          接收字节:<span class="number">497588</span> (<span class="number">497.5</span> KB)  发送字节:<span class="number">497588</span> (<span class="number">497.5</span> KB)</span><br></pre></td></tr></table></figure>
<p>修改ip:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~</span><span class="variable">$ </span>sudo ifconfig ens33 <span class="number">192.168</span>.<span class="number">40.10</span></span><br><span class="line">python<span class="variable">@ubuntu</span><span class="symbol">:~</span><span class="variable">$ </span>ifconfig ens33</span><br><span class="line">ens33     <span class="title class_">Link</span> <span class="symbol">encap:</span>以太网  硬件地址 <span class="number">00</span><span class="symbol">:</span>0<span class="symbol">c:</span><span class="number">29</span><span class="symbol">:</span><span class="number">59</span><span class="symbol">:</span><span class="number">65</span><span class="symbol">:f2</span>  </span><br><span class="line">          inet 地址<span class="symbol">:</span><span class="number">192.168</span>.<span class="number">40.10</span>  广播<span class="symbol">:</span><span class="number">192.168</span>.<span class="number">40.255</span>  掩码<span class="symbol">:</span><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">          inet6 地址: fe80::432<span class="symbol">f:</span>6<span class="symbol">c4a:</span><span class="symbol">f47d:</span>5f6b/<span class="number">64</span> <span class="title class_">Scope</span><span class="symbol">:Link</span></span><br><span class="line">          <span class="variable constant_">UP</span> <span class="variable constant_">BROADCAST</span> <span class="variable constant_">RUNNING</span> <span class="variable constant_">MULTICAST</span>  <span class="variable constant_">MTU</span><span class="symbol">:</span><span class="number">1500</span>  跃点数<span class="symbol">:</span><span class="number">1</span></span><br><span class="line">          接收数据包<span class="symbol">:</span><span class="number">422818</span> 错误<span class="symbol">:</span><span class="number">0</span> 丢弃<span class="symbol">:</span><span class="number">0</span> 过载<span class="symbol">:</span><span class="number">0</span> 帧数<span class="symbol">:</span><span class="number">0</span></span><br><span class="line">          发送数据包<span class="symbol">:</span><span class="number">208692</span> 错误<span class="symbol">:</span><span class="number">0</span> 丢弃<span class="symbol">:</span><span class="number">0</span> 过载<span class="symbol">:</span><span class="number">0</span> 载波<span class="symbol">:</span><span class="number">0</span></span><br><span class="line">          碰撞<span class="symbol">:</span><span class="number">0</span> 发送队列长度<span class="symbol">:</span><span class="number">1000</span> </span><br><span class="line">          接收字节<span class="symbol">:</span><span class="number">603745130</span> (<span class="number">603.7</span> <span class="variable constant_">MB</span>)  发送字节<span class="symbol">:</span><span class="number">12822615</span> (<span class="number">12.8</span> <span class="variable constant_">MB</span>)</span><br></pre></td></tr></table></figure>
<h4 id="测试远程主机连通性：ping">测试远程主机连通性：ping</h4>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">python@ubuntu:~$<span class="built_in"> ping </span>192.168.40.1<span class="built_in"></span></span><br><span class="line"><span class="built_in">PING </span>192.168.40.1 (192.168.40.1) 56(84) bytes of data.</span><br><span class="line">64 bytes <span class="keyword">from</span> 192.168.40.1: <span class="attribute">icmp_seq</span>=1 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.699 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 192.168.40.1: <span class="attribute">icmp_seq</span>=2 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.372 ms</span><br><span class="line">^C</span><br><span class="line">--- 192.168.40.1<span class="built_in"> ping </span>statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1001ms</span><br><span class="line">rtt min/avg/max/mdev = 0.372/0.535/0.699/0.165 ms</span><br><span class="line">python@ubuntu:~$<span class="built_in"> ping </span>192.168.40.1 -c 3<span class="built_in"></span></span><br><span class="line"><span class="built_in">PING </span>192.168.40.1 (192.168.40.1) 56(84) bytes of data.</span><br><span class="line">64 bytes <span class="keyword">from</span> 192.168.40.1: <span class="attribute">icmp_seq</span>=1 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.409 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 192.168.40.1: <span class="attribute">icmp_seq</span>=2 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.367 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 192.168.40.1: <span class="attribute">icmp_seq</span>=3 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.373 ms</span><br><span class="line"></span><br><span class="line">--- 192.168.40.1<span class="built_in"> ping </span>statistics ---</span><br><span class="line">3 packets transmitted, 3 received, 0% packet loss, time 2000ms</span><br><span class="line">rtt min/avg/max/mdev = 0.367/0.383/0.409/0.018 ms</span><br><span class="line">python@ubuntu:~$ </span><br></pre></td></tr></table></figure>
<h3 id="Linux-磁盘管理">Linux 磁盘管理</h3>
<p>Linux磁盘管理常用三个命令为df、du和fdisk。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>df：列出文件系统的整体磁盘使用量</p>
</li>
<li class="lvl-2">
<p>du：检查磁盘空间使用量</p>
</li>
<li class="lvl-2">
<p>fdisk：用于磁盘分区</p>
</li>
</ul>
<h4 id="df">df</h4>
<p>获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">df <span class="selector-attr">[-ahikHTm]</span> <span class="selector-attr">[目录或文件名]</span></span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；</p>
</li>
<li class="lvl-2">
<p>-k ：以 KBytes 的容量显示各文件系统；</p>
</li>
<li class="lvl-2">
<p>-m ：以 MBytes 的容量显示各文件系统；</p>
</li>
<li class="lvl-2">
<p>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；</p>
</li>
<li class="lvl-2">
<p>-H ：以 M=1000K 取代 M=1024K 的进位方式；</p>
</li>
<li class="lvl-2">
<p>-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；</p>
</li>
<li class="lvl-2">
<p>-i ：不用硬盘容量，而以 inode 的数量来显示</p>
</li>
</ul>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@VM_0_9_centos</span> ~]<span class="comment"># df -hT</span></span><br><span class="line">Filesystem     Type      Size  Used Avail Use% Mounted on</span><br><span class="line"><span class="regexp">/dev/vda</span>1      ext4       <span class="number">50</span>G  <span class="number">4.9</span>G   <span class="number">42</span>G  <span class="number">11</span>% <span class="regexp">/</span></span><br><span class="line"><span class="regexp">devtmpfs       devtmpfs  909M     0  909M   0% /dev</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">920</span>M   <span class="number">24</span>K  <span class="number">920</span>M   <span class="number">1</span>% <span class="regexp">/dev/shm</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">920</span>M  <span class="number">496</span>K  <span class="number">919</span>M   <span class="number">1</span>% <span class="regexp">/run</span></span><br><span class="line"><span class="regexp">tmpfs          tmpfs     920M     0  920M   0% /sys</span><span class="regexp">/fs/cgroup</span></span><br><span class="line">tmpfs          tmpfs     <span class="number">184</span>M     <span class="number">0</span>  <span class="number">184</span>M   <span class="number">0</span>% <span class="regexp">/run/user</span><span class="regexp">/0</span></span><br></pre></td></tr></table></figure>
<p>将系统内的所有特殊文件格式及名称都列出来</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># df -aT</span></span><br><span class="line">Filesystem    Type 1K-blocks    Used Available Use% Mounted on</span><br><span class="line">/dev/hdc2     ext3  <span class="number"> 9920624 </span>3823112  <span class="number"> 5585444 </span> 41% /</span><br><span class="line">proc          proc        <span class="number"> 0 </span>     <span class="number"> 0 </span>       <span class="number"> 0 </span>  -  /proc</span><br><span class="line">sysfs        sysfs        <span class="number"> 0 </span>     <span class="number"> 0 </span>       <span class="number"> 0 </span>  -  /sys</span><br><span class="line">devpts      devpts        <span class="number"> 0 </span>     <span class="number"> 0 </span>       <span class="number"> 0 </span>  -  /dev/pts</span><br><span class="line">/dev/hdc3     ext3  <span class="number"> 4956316 </span><span class="number"> 141376 </span> <span class="number"> 4559108 </span>  4% /home</span><br><span class="line">/dev/hdc1     ext3   <span class="number"> 101086 </span> <span class="number"> 11126 </span>   <span class="number"> 84741 </span> 12% /boot</span><br><span class="line">tmpfs        tmpfs   <span class="number"> 371332 </span>     <span class="number"> 0 </span>  <span class="number"> 371332 </span>  0% /dev/shm</span><br><span class="line">none   binfmt_misc        <span class="number"> 0 </span>     <span class="number"> 0 </span>       <span class="number"> 0 </span>  -  /proc/sys/fs/binfmt_misc</span><br><span class="line">sunrpc  rpc_pipefs        <span class="number"> 0 </span>     <span class="number"> 0 </span>       <span class="number"> 0 </span>  -  /var/lib/nfs/rpc_pipefs</span><br></pre></td></tr></table></figure>
<h4 id="du">du</h4>
<p>du命令是对文件和目录磁盘使用的空间的查看.</p>
<p>语法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span> [-ahskm] 文件或目录名称</span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</p>
</li>
<li class="lvl-2">
<p>-h ：以人们较易读的容量格式 (G/M) 显示；</p>
</li>
<li class="lvl-2">
<p>-s ：列出总量而已，而不列出每个各别的目录占用容量；</p>
</li>
<li class="lvl-2">
<p>-S ：不包括子目录下的总计，与 -s 有点差别。</p>
</li>
<li class="lvl-2">
<p>-k ：以 KBytes 列出容量显示；</p>
</li>
<li class="lvl-2">
<p>-m ：以 MBytes 列出容量显示；</p>
</li>
</ul>
<p>du没有加任何选项时，只列出当前目录下的所有文件夹容量（包括隐藏文件夹）:</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># du</span></span><br><span class="line">8       <span class="string">./test4</span>     &lt;==每个目录都会列出来</span><br><span class="line">8       <span class="string">./test2</span></span><br><span class="line"><span class="string">....</span>中间省略<span class="string">....</span></span><br><span class="line">12      <span class="string">./.gconfd</span>   &lt;==包括隐藏文件的目录</span><br><span class="line">220     .           &lt;==这个目录<span class="params">(.)</span>所占用的总量</span><br></pre></td></tr></table></figure>
<p>直接输入 du 没有加任何选项时，则 du 会分析当前所在目录的文件与目录所占用的硬盘空间。</p>
<p>加<code>-a</code>选项才显示文件的容量：</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># du -a</span></span><br><span class="line">12      <span class="string">./install.log.syslog</span>   &lt;==有文件的列表了</span><br><span class="line">8       <span class="string">./.bash_logout</span></span><br><span class="line">8       <span class="string">./test4</span></span><br><span class="line">8       <span class="string">./test2</span></span><br><span class="line"><span class="string">....</span>中间省略<span class="string">....</span></span><br><span class="line">12      <span class="string">./.gconfd</span></span><br><span class="line">220     .</span><br></pre></td></tr></table></figure>
<p>检查根目录底下每个目录所占用的容量</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># du -sh /*</span></span><br><span class="line">0       <span class="string">/bin</span></span><br><span class="line">108M    <span class="string">/boot</span></span><br><span class="line">4.0K    <span class="string">/data</span></span><br><span class="line"><span class="string">.....</span>中间省略<span class="string">....</span></span><br><span class="line">0       <span class="string">/proc</span></span><br><span class="line"><span class="string">.....</span>中间省略<span class="string">....</span></span><br><span class="line">40K     <span class="string">/tmp</span></span><br><span class="line">2.4G    <span class="string">/usr</span></span><br><span class="line">2.4G    <span class="string">/var</span></span><br></pre></td></tr></table></figure>
<h4 id="fdisk">fdisk</h4>
<p>fdisk 是 Linux 的磁盘分区表操作工具。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">fdisk <span class="selector-attr">[-l]</span> 装置名称</span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-l ：输出后面接的装置所有的分区内容。若仅有 fdisk -l 时， 则系统将会把整个系统内能够搜寻到的装置的分区均列出来。</p>
</li>
</ul>
<p>列出所有分区信息：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">[root@AY120919111755c246621 tmp]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">Disk /dev/xvda: 21.5 GB,<span class="number"> 21474836480 </span>bytes</span><br><span class="line">255 heads,<span class="number"> 63 </span>sectors/track,<span class="number"> 2610 </span>cylinders</span><br><span class="line">Units = cylinders of<span class="number"> 16065 </span>*<span class="number"> 512 </span>=<span class="number"> 8225280 </span>bytes</span><br><span class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line">    Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/xvda1   *          <span class="number"> 1 </span>      <span class="number"> 2550 </span>  <span class="number"> 20480000 </span> <span class="number"> 83 </span> Linux</span><br><span class="line">/dev/xvda2           <span class="number"> 2550 </span>      <span class="number"> 2611 </span>    <span class="number"> 490496 </span> <span class="number"> 82 </span> Linux swap / Solaris</span><br><span class="line"></span><br><span class="line">Disk /dev/xvdb: 21.5 GB,<span class="number"> 21474836480 </span>bytes</span><br><span class="line">255 heads,<span class="number"> 63 </span>sectors/track,<span class="number"> 2610 </span>cylinders</span><br><span class="line">Units = cylinders of<span class="number"> 16065 </span>*<span class="number"> 512 </span>=<span class="number"> 8225280 </span>bytes</span><br><span class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</span><br><span class="line">Disk identifier: 0x56f40944</span><br><span class="line"></span><br><span class="line">    Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/xvdb2              <span class="number"> 1 </span>      <span class="number"> 2610 </span>   20964793+ <span class="number"> 83 </span> Linux</span><br></pre></td></tr></table></figure>
<p>查看根目录所在磁盘，并查阅该硬盘内的相关信息：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># df /            &lt;==注意：重点在找出磁盘文件名而已</span></span><br><span class="line">Filesystem           <span class="number">1</span>K-blocks      Used Available Use% Mounted <span class="keyword">on</span></span><br><span class="line">/dev/hdc2              <span class="number">9920624</span>   <span class="number">3823168</span>   <span class="number">5585388</span>  <span class="number">41</span>% /</span><br><span class="line"></span><br><span class="line">[root@www ~]<span class="comment"># fdisk /dev/hdc  &lt;==不要加上数字！</span></span><br><span class="line">The <span class="built_in">number</span> <span class="keyword">of</span> cylinders <span class="keyword">for</span> this disk <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> <span class="number">5005.</span></span><br><span class="line">There <span class="keyword">is</span> nothing wrong <span class="keyword">with</span> <span class="keyword">that</span>, <span class="keyword">but</span> this <span class="keyword">is</span> larger than <span class="number">1024</span>,</span><br><span class="line"><span class="keyword">and</span> could <span class="keyword">in</span> certain setups cause problems <span class="keyword">with</span>:</span><br><span class="line"><span class="number">1</span>) software <span class="keyword">that</span> runs <span class="keyword">at</span> boot <span class="built_in">time</span> (e.g., old versions <span class="keyword">of</span> LILO)</span><br><span class="line"><span class="number">2</span>) booting <span class="keyword">and</span> partitioning software <span class="keyword">from</span> other OSs</span><br><span class="line">   (e.g., DOS FDISK, OS/<span class="number">2</span> FDISK)</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> help):     &lt;==等待你的输入！</span><br></pre></td></tr></table></figure>
<p>输入 m 后，就会看到底下这些命令介绍</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> help): m   <span class="operator">&lt;=</span><span class="operator">=</span> 输入 m 后，就会看到底下这些命令介绍</span><br><span class="line">Command action</span><br><span class="line">   a   toggle a bootable flag</span><br><span class="line">   b   edit bsd disklabel</span><br><span class="line">   c   toggle the dos compatibility flag</span><br><span class="line">   d   <span class="keyword">delete</span> a <span class="keyword">partition</span>            <span class="operator">&lt;=</span><span class="operator">=</span>删除一个<span class="keyword">partition</span></span><br><span class="line">   l   list known <span class="keyword">partition</span> types</span><br><span class="line">   m   print this menu</span><br><span class="line">   n   <span class="keyword">add</span> a <span class="keyword">new</span> <span class="keyword">partition</span>           <span class="operator">&lt;=</span><span class="operator">=</span>新增一个<span class="keyword">partition</span></span><br><span class="line">   o   <span class="keyword">create</span> a <span class="keyword">new</span> <span class="keyword">empty</span> DOS <span class="keyword">partition</span> <span class="keyword">table</span></span><br><span class="line">   p   print the <span class="keyword">partition</span> <span class="keyword">table</span>     <span class="operator">&lt;=</span><span class="operator">=</span>在屏幕上显示分割表</span><br><span class="line">   q   quit <span class="keyword">without</span> saving changes   <span class="operator">&lt;=</span><span class="operator">=</span>不储存离开fdisk程序</span><br><span class="line">   s   <span class="keyword">create</span> a <span class="keyword">new</span> <span class="keyword">empty</span> Sun disklabel</span><br><span class="line">   t   change a <span class="keyword">partition</span><span class="string">&#x27;s system id</span></span><br><span class="line"><span class="string">   u   change display/entry units</span></span><br><span class="line"><span class="string">   v   verify the partition table</span></span><br><span class="line"><span class="string">   w   write table to disk and exit  &lt;==将刚刚的动作写入分割表</span></span><br><span class="line"><span class="string">   x   extra functionality (experts only)</span></span><br></pre></td></tr></table></figure>
<p>离开 fdisk 时按下 <code>q</code>，那么所有的动作都不会生效！相反的， 按下<code>w</code>就是动作生效的意思。</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">Command (m for help): p  &lt;== 这里可以输出目前磁盘的状态</span><br><span class="line"></span><br><span class="line">Disk /dev/hdc: 41.1 GB,<span class="number"> 41174138880 </span>bytes        &lt;==这个磁盘的文件名与容量</span><br><span class="line">255 heads,<span class="number"> 63 </span>sectors/track,<span class="number"> 5005 </span>cylinders      &lt;==磁头、扇区与磁柱大小</span><br><span class="line">Units = cylinders of<span class="number"> 16065 </span>*<span class="number"> 512 </span>=<span class="number"> 8225280 </span>bytes &lt;==每个磁柱的大小</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/hdc1   *          <span class="number"> 1 </span>        <span class="number"> 13 </span>    <span class="number"> 104391 </span> <span class="number"> 83 </span> Linux</span><br><span class="line">/dev/hdc2             <span class="number"> 14 </span>      <span class="number"> 1288 </span>   10241437+ <span class="number"> 83 </span> Linux</span><br><span class="line">/dev/hdc3           <span class="number"> 1289 </span>      <span class="number"> 1925 </span>    5116702+ <span class="number"> 83 </span> Linux</span><br><span class="line">/dev/hdc4           <span class="number"> 1926 </span>      <span class="number"> 5005 </span>  <span class="number"> 24740100 </span>  <span class="number"> 5 </span> Extended</span><br><span class="line">/dev/hdc5           <span class="number"> 1926 </span>      <span class="number"> 2052 </span>   <span class="number"> 1020096 </span> <span class="number"> 82 </span> Linux swap / Solaris</span><br><span class="line"><span class="comment"># 装置文件名 启动区否 开始磁柱    结束磁柱  1K大小容量 磁盘分区槽内的系统</span></span><br><span class="line"></span><br><span class="line">Command (m for help): q</span><br></pre></td></tr></table></figure>
<p>使用 <code>p</code> 可以列出目前这颗磁盘的分割表信息，这个信息的上半部在显示整体磁盘的状态。</p>
<h4 id="磁盘格式化">磁盘格式化</h4>
<p>磁盘分割完毕后自然就是要进行文件系统的格式化，格式化的命令非常的简单，使用 <code>mkfs</code>（make filesystem） 命令。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">mkfs <span class="selector-attr">[-t 文件系统格式]</span> 装置文件名</span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-t ：可以接文件系统格式，例如 ext3, ext2, vfat 等(系统有支持才会生效)</p>
</li>
</ul>
<p>查看 mkfs 支持的文件格式：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">[root@VM_0_9_centos web]<span class="comment"># mkfs[tab]</span></span><br><span class="line">mkfs         mkfs.cramfs  mkfs.<span class="keyword">ext3 </span>   mkfs.minix   </span><br><span class="line">mkfs.<span class="keyword">btrfs </span>  mkfs.<span class="keyword">ext2 </span>   mkfs.<span class="keyword">ext4 </span>   mkfs.xfs</span><br></pre></td></tr></table></figure>
<p>按下两个[tab]，会发现 mkfs 支持的文件格式如上所示。</p>
<p>将分区 /dev/hdc6（可指定其他分区） 格式化为ext3文件系统：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[root@www ~]# mkfs -t ext3 /dev/hdc6</span><br><span class="line">mke2fs 1.39 (29-May-2006)</span><br><span class="line">Filesystem label=                &lt;==这里指的是分割槽的名称(label)</span><br><span class="line">OS type: Linux</span><br><span class="line">Block <span class="attribute">size</span>=4096 (<span class="attribute">log</span>=2)          &lt;==block 的大小配置为 4K </span><br><span class="line">Fragment <span class="attribute">size</span>=4096 (<span class="attribute">log</span>=2)</span><br><span class="line">251392 inodes, 502023 blocks     &lt;==由此配置决定的inode/block数量</span><br><span class="line">25101 blocks (5.00%) reserved <span class="keyword">for</span> the super<span class="built_in"> user</span></span><br><span class="line"><span class="built_in"></span>First data <span class="attribute">block</span>=0</span><br><span class="line">Maximum filesystem <span class="attribute">blocks</span>=515899392</span><br><span class="line">16 block groups</span><br><span class="line">32768 blocks per group, 32768 fragments per<span class="built_in"> group</span></span><br><span class="line"><span class="built_in"></span>15712 inodes per<span class="built_in"> group</span></span><br><span class="line"><span class="built_in"></span>Superblock backups stored on blocks:</span><br><span class="line">        32768, 98304, 163840, 229376, 294912</span><br><span class="line"></span><br><span class="line">Writing inode tables: done</span><br><span class="line">Creating journal (8192 blocks): done &lt;==有日志记录</span><br><span class="line">Writing superblocks <span class="keyword">and</span> filesystem<span class="built_in"> accounting </span>information: done</span><br><span class="line"></span><br><span class="line">This filesystem will be automatically checked every 34 mounts <span class="keyword">or</span></span><br><span class="line">180 days, whichever comes first.  Use tune2fs -c <span class="keyword">or</span> -i <span class="keyword">to</span> override.</span><br><span class="line"><span class="comment"># 这样就创建起来我们所需要的 Ext3 文件系统了！简单明了！</span></span><br></pre></td></tr></table></figure>
<h4 id="磁盘检验">磁盘检验</h4>
<p>fsck（file system check）用来检查和维护不一致的文件系统。</p>
<p>若系统掉电或磁盘发生问题，可利用fsck命令对文件系统进行检查。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">fsck <span class="selector-attr">[-t 文件系统]</span> <span class="selector-attr">[-ACay]</span> 装置名称</span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数</p>
</li>
<li class="lvl-2">
<p>-s : 依序一个一个地执行 fsck 的指令来检查</p>
</li>
<li class="lvl-2">
<p>-A : 对/etc/fstab 中所有列出来的 分区（partition）做检查</p>
</li>
<li class="lvl-2">
<p>-C : 显示完整的检查进度</p>
</li>
<li class="lvl-2">
<p>-d : 打印出 e2fsck 的 debug 结果</p>
</li>
<li class="lvl-2">
<p>-p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行</p>
</li>
<li class="lvl-2">
<p>-R : 同时有 -A 条件时，省略 / 不检查</p>
</li>
<li class="lvl-2">
<p>-V : 详细显示模式</p>
</li>
<li class="lvl-2">
<p>-a : 如果检查有错则自动修复</p>
</li>
<li class="lvl-2">
<p>-r : 如果检查有错则由使用者回答是否修复</p>
</li>
<li class="lvl-2">
<p>-y : 选项指定检测每个文件是自动输入yes，在不确定那些是不正常的时候，可以执行 # fsck -y 全部检查修复。</p>
</li>
</ul>
<p>查看系统有多少文件系统支持的 fsck 命令：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[root@www ~]</span># fsck<span class="selector-attr">[tab]</span><span class="selector-attr">[tab]</span></span><br><span class="line">fsck         fsck<span class="selector-class">.cramfs</span>  fsck<span class="selector-class">.ext2</span>    fsck<span class="selector-class">.ext3</span>    fsck<span class="selector-class">.msdos</span>   fsck<span class="selector-class">.vfat</span></span><br></pre></td></tr></table></figure>
<p>强制检测 /dev/hdc6 分区:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">root@www</span> <span class="string">~</span>]<span class="comment"># fsck -C -f -t ext3 /dev/hdc6 </span></span><br><span class="line"><span class="string">fsck</span> <span class="number">1.39</span> <span class="string">(29-May-2006)</span></span><br><span class="line"><span class="string">e2fsck</span> <span class="number">1.39</span> <span class="string">(29-May-2006)</span></span><br><span class="line"><span class="attr">Pass 1:</span> <span class="string">Checking</span> <span class="string">inodes,</span> <span class="string">blocks,</span> <span class="string">and</span> <span class="string">sizes</span></span><br><span class="line"><span class="attr">Pass 2:</span> <span class="string">Checking</span> <span class="string">directory</span> <span class="string">structure</span></span><br><span class="line"><span class="attr">Pass 3:</span> <span class="string">Checking</span> <span class="string">directory</span> <span class="string">connectivity</span></span><br><span class="line"><span class="attr">Pass 4:</span> <span class="string">Checking</span> <span class="string">reference</span> <span class="string">counts</span></span><br><span class="line"><span class="attr">Pass 5:</span> <span class="string">Checking</span> <span class="string">group</span> <span class="string">summary</span> <span class="string">information</span></span><br><span class="line"><span class="attr">vbird_logical:</span> <span class="number">11</span><span class="string">/251968</span> <span class="string">files</span> <span class="string">(9.1%</span> <span class="string">non-contiguous),</span> <span class="number">36926</span><span class="string">/1004046</span> <span class="string">blocks</span></span><br></pre></td></tr></table></figure>
<p>如果没有加上 -f 的选项，则由于这个文件系统不曾出现问题，检查的经过非常快速！若加上 -f 强制检查，才会一项一项的显示过程。</p>
<h4 id="磁盘挂载与卸除">磁盘挂载与卸除</h4>
<p>Linux 的磁盘挂载使用 <code>mount</code> 命令，卸载使用 <code>umount</code> 命令。</p>
<p>磁盘挂载语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">mount <span class="selector-attr">[-t 文件系统]</span> <span class="selector-attr">[-L Label名]</span> <span class="selector-attr">[-o 额外选项]</span> <span class="selector-attr">[-n]</span>  装置文件名  挂载点</span><br></pre></td></tr></table></figure>
<p>用默认的方式，将刚刚创建的 /dev/hdc6 挂载到 /mnt/hdc6 上面！</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@www</span> ~]<span class="comment"># mkdir /mnt/hdc6</span></span><br><span class="line">[root<span class="variable">@www</span> ~]<span class="comment"># mount /dev/hdc6 /mnt/hdc6</span></span><br><span class="line">[root<span class="variable">@www</span> ~]<span class="comment"># df</span></span><br><span class="line">Filesystem           <span class="number">1</span>K-blocks      Used Available Use% Mounted on</span><br><span class="line">.....中间省略.....</span><br><span class="line"><span class="regexp">/dev/hdc</span>6              <span class="number">1976312</span>     <span class="number">42072</span>   <span class="number">1833836</span>   <span class="number">3</span>% <span class="regexp">/mnt/hdc</span>6</span><br></pre></td></tr></table></figure>
<p>磁盘卸载命令 <code>umount</code> 语法：</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">umount</span> [-<span class="meta">fn</span>] 装置文件名或挂载点</span><br></pre></td></tr></table></figure>
<p>选项与参数：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下；</p>
</li>
<li class="lvl-2">
<p>-n ：不升级 /etc/mtab 情况下卸除。</p>
</li>
</ul>
<p>卸载/dev/hdc6</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@www</span> ~]<span class="meta"># umount /dev/hdc6     </span></span><br></pre></td></tr></table></figure>
<h3 id="Linux管道命令">Linux管道命令</h3>
<p>Linux的管道命令是’|’，通过它可以对数据进行连续处理，其示意图如下：</p>
<p><img src="/posts/5826694d//image-20250208212719915.png" alt="image-20250208212719915"></p>
<p>注意：</p>
<p>1）管道命令仅处理标准输出，对于标准错误输出，将忽略</p>
<p>2）管道命令右边命令，必须能够接收标准输入流命令才行，否则传递过程中数据会抛弃。</p>
<p>常用来作为接收数据管道命令有： less,more,head,tail，而ls, cp, mv就不行。</p>
<h4 id="wc-统计字数">wc - 统计字数</h4>
<p>可以计算文件的Byte数、字数、或是列数，若不指定文件名称、或是所给予的文件名为&quot;-&quot;，则wc指令会从标准输入设备读取数据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">wc</span> [-lwm] [filename]</span><br><span class="line">-l: 统计行数</span><br><span class="line">-w：统计英文单词</span><br><span class="line">-m：统计字符数</span><br><span class="line">python@xxx:~$ <span class="built_in">wc</span> -l /etc/passwd</span><br><span class="line">49 /etc/passwd</span><br><span class="line">python@xxx:~$ <span class="built_in">wc</span> -w /etc/passwd</span><br><span class="line">81 /etc/passwd</span><br><span class="line">python@xxx:~$ <span class="built_in">wc</span> -m /etc/passwd</span><br><span class="line">2696 /etc/passwd</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>【hexo】更高级的Markdown渲染器——hexo-renderer-markdown-it</title>
    <url>/posts/e3e8d0c4/</url>
    <content><![CDATA[<h2 id="引言">引言</h2>
<p>Hexo 默认搭配的 Markdown 渲染器是 hexo-renderer-marked，但其支持的渲染格式有限，不利于自由写作。因此，今天教大家如何更换为功能更加强大，渲染速度更快的 hexo-renderer-markdown-it 渲染器，并且还会详细介绍常用插件的配置，实现更优雅的 Markdown 写作。</p>
<p>container和footnote不知道为什么不能使用，估计也用不上，暂时不处理了。原文在参考文章里。</p>
<span id="more"></span>
<h2 id="安装">安装</h2>
<p>卸载 <code>hexo-renderer-marked</code></p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<p>安装 <code>hexo-renderer-markdown-it</code></p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-<span class="keyword">it</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<h2 id="配置">配置</h2>
<p>将如下文本复制粘贴到 <a href="https://so.csdn.net/so/search?q=Hexo&amp;spm=1001.2101.3001.7020">Hexo</a> 的配置文件 <code>_config.yml</code> 的尾部</p>
<figure class="highlight nestedtext"><table><tr><td class="code"><pre><span class="line"><span class="attribute">markdown</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">preset</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span></span><br><span class="line">  <span class="attribute">render</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">html</span><span class="punctuation">:</span> <span class="string">true</span></span><br><span class="line">    <span class="attribute">xhtmlOut</span><span class="punctuation">:</span> <span class="string">false</span></span><br><span class="line">    <span class="attribute">langPrefix</span><span class="punctuation">:</span> <span class="string">&quot;language-&quot;</span></span><br><span class="line">    <span class="attribute">breaks</span><span class="punctuation">:</span> <span class="string">true</span></span><br><span class="line">    <span class="attribute">linkify</span><span class="punctuation">:</span> <span class="string">true</span></span><br><span class="line">    <span class="attribute">typographer</span><span class="punctuation">:</span> <span class="string">true</span></span><br><span class="line">    <span class="attribute">quotes</span><span class="punctuation">:</span> <span class="string">&quot;“”‘’&quot;</span></span><br><span class="line">  <span class="attribute">enable_rules</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">disable_rules</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">plugins</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-cjk-breaks</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-deflist</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-mark</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-checkbox</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-imsize</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-expandable</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">name: markdown-it-container</span></span><br><span class="line">      <span class="attribute">options</span><span class="punctuation">:</span> <span class="string">success</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">name: markdown-it-container</span></span><br><span class="line">      <span class="attribute">options</span><span class="punctuation">:</span> <span class="string">tips</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">name: markdown-it-container</span></span><br><span class="line">      <span class="attribute">options</span><span class="punctuation">:</span> <span class="string">warning</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">name: markdown-it-container</span></span><br><span class="line">      <span class="attribute">options</span><span class="punctuation">:</span> <span class="string">danger</span></span><br><span class="line">  <span class="attribute">anchors</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">level</span><span class="punctuation">:</span> <span class="string">2</span></span><br><span class="line">    <span class="attribute">collisionSuffix</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attribute">permalink</span><span class="punctuation">:</span> <span class="string">false</span></span><br><span class="line">    <span class="attribute">permalinkClass</span><span class="punctuation">:</span> <span class="string">&quot;header-anchor&quot;</span></span><br><span class="line">    <span class="attribute">permalinkSide</span><span class="punctuation">:</span> <span class="string">&quot;left&quot;</span></span><br><span class="line">    <span class="attribute">permalinkSymbol</span><span class="punctuation">:</span> <span class="string">&quot;¶&quot;</span></span><br><span class="line">    <span class="attribute">case</span><span class="punctuation">:</span> <span class="string">0</span></span><br><span class="line">    <span class="attribute">separator</span><span class="punctuation">:</span> <span class="string">&quot;-&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="插件">插件</h2>
<p>本章节讲述各种插件的用法、配置和注意事项。</p>
<h3 id="安装-2">安装</h3>
<p>分别使用 <code>npm</code> 命令安装以下三个插件：</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> i markdown-<span class="literal">it</span>-checkbox</span><br><span class="line"><span class="built_in">npm</span> i markdown-<span class="literal">it</span>-imsize</span><br><span class="line"><span class="built_in">npm</span> i markdown-<span class="literal">it</span>-expandable</span><br></pre></td></tr></table></figure>
<p>其它插件 <code>hexo-renderer-markdown-it</code> 渲染器自带的有，不要安装。</p>
<h3 id="用法">用法</h3>
<h4 id="基础">基础</h4>
<table>
<thead>
<tr>
<th>名称</th>
<th>描述</th>
<th>语法</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>markdown-it-abbr</td>
<td>注释</td>
<td><code>*[HTML]: 超文本标记语言</code></td>
<td>*[HTML]: 超文本标记语言</td>
</tr>
<tr>
<td>markdown-it-emoji</td>
<td>表情</td>
<td><code>:)</code>  <code>:crab:</code>  <code>:horse:</code></td>
<td>😃 🦀 🐴</td>
</tr>
<tr>
<td>markdown-it-footnote</td>
<td>脚注</td>
<td><code>参考文献&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</code></td>
<td>参考文献<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></td>
</tr>
<tr>
<td>markdown-it-ins</td>
<td>下划线</td>
<td><code>++下划线++</code></td>
<td><ins>下划线</ins></td>
</tr>
<tr>
<td>markdown-it-mark</td>
<td>突出显示</td>
<td><code>==标记==</code></td>
<td><mark>标记</mark></td>
</tr>
<tr>
<td>markdown-it-sub</td>
<td>下标</td>
<td><code>H~2~O</code></td>
<td>H<sub>2</sub>O</td>
</tr>
<tr>
<td>markdown-it-sup</td>
<td>上标</td>
<td><code>X^2^</code></td>
<td>X<sup>2</sup></td>
</tr>
<tr>
<td>markdown-it-checkbox</td>
<td>复选框</td>
<td><input type="checkbox" id="checkbox1"><label for="checkbox1"></label>未选 <br> <input type="checkbox" id="checkbox0" checked="true"><label for="checkbox0"></label>选中</td>
<td><img src="/posts/e3e8d0c4//image-20241111151833850.png" alt="image-20241111151833850"></td>
</tr>
</tbody>
</table>
<ul class="lvl-0">
<li class="lvl-2">
<p><input type="checkbox" id="checkbox2"><label for="checkbox2">未选</label></p>
</li>
<li class="lvl-2">
<p><input type="checkbox" id="checkbox3" checked="true"><label for="checkbox3">选中</label></p>
</li>
</ul>
<h4 id="进阶">进阶</h4>
<blockquote>
<p><a href="https://github.com/tatsy/markdown-it-imsize">markdown-it-imsize</a>：自定义图片宽高。</p>
</blockquote>
<p>语法：（<strong>注意</strong>：<code>=100x200</code> 前面有一个空格）</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">!<span class="selector-attr">[test]</span>(<span class="number">006</span>.png =<span class="number">100</span>x200)</span><br></pre></td></tr></table></figure>
<p><img src="/posts/e3e8d0c4//006.png" alt="test" width="100" height="200"></p>
<blockquote>
<p><a href="https://github.com/bioruebe/markdown-it-collapsible">markdown-it-expandable</a>：折叠/展开内容。</p>
</blockquote>
<p>语法：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="code">+++</span> <span class="strong">**点击折叠**</span></span><br><span class="line"><span class="section">这是被隐藏的内容</span></span><br><span class="line"><span class="section">+++</span></span><br></pre></td></tr></table></figure>
<p>效果：</p>
<details open>
<summary><span class="pre-summary">&nbsp;</span><strong>点击折叠</strong></summary><p>这是被隐藏的内容</p>
</details>
<blockquote>
<p><a href="https://github.com/markdown-it/markdown-it-container">markdown-it-container</a>：自定义容器。</p>
</blockquote>
<p>语法：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="meta">:::</span> tips</span><br><span class="line"><span class="strong">**提示**</span></span><br><span class="line">这是一个提示</span><br><span class="line"><span class="meta">:::</span></span><br><span class="line"></span><br><span class="line"><span class="meta">:::</span> warning</span><br><span class="line"><span class="strong">**注意**</span></span><br><span class="line">这是一个警告</span><br><span class="line"><span class="meta">:::</span></span><br><span class="line"></span><br><span class="line"><span class="meta">:::</span> danger</span><br><span class="line"><span class="strong">**警告**</span></span><br><span class="line">这是一个危险信号</span><br><span class="line"><span class="meta">:::</span></span><br><span class="line"></span><br><span class="line"><span class="meta">:::</span> success</span><br><span class="line"><span class="strong">**成功**</span></span><br><span class="line">这是一个成功信号</span><br><span class="line"><span class="meta">:::</span></span><br></pre></td></tr></table></figure>
<p>效果：</p>
<div class="tips">
<p><strong>提示</strong><br>
这是一个提示</p>
</div>
<div class="warning">
<p><strong>注意</strong><br>
这是一个警告</p>
</div>
<div class="danger">
<p><strong>警告</strong><br>
这是一个危险信号</p>
</div>
<div class="success">
<p><strong>成功</strong><br>
这是一个成功信号</p>
</div>
<p>本文参考：</p>
<p><a href="https://blog.csdn.net/qq_42951560/article/details/123596899">【Hexo】选择更高级的Markdown渲染器</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】typora快捷键</title>
    <url>/posts/d6f6acd6/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">加粗</td>
<td style="text-align:center">Ctrl+B</td>
<td style="text-align:center">插入图像</td>
<td style="text-align:center">Ctrl+Shift+I</td>
</tr>
<tr>
<td style="text-align:center">斜体</td>
<td style="text-align:center">Ctrl+I</td>
<td style="text-align:center">删除线</td>
<td style="text-align:center">Alt+Shift+5</td>
</tr>
<tr>
<td style="text-align:center">下划线</td>
<td style="text-align:center">Ctrl+U</td>
<td style="text-align:center">公式块</td>
<td style="text-align:center">Ctrl+Shift+M</td>
</tr>
<tr>
<td style="text-align:center">超链接</td>
<td style="text-align:center">Ctrl+K</td>
<td style="text-align:center">代码块</td>
<td style="text-align:center">Ctrl+Shift+K</td>
</tr>
<tr>
<td style="text-align:center">表格</td>
<td style="text-align:center">Ctrl+T</td>
<td style="text-align:center">代码段</td>
<td style="text-align:center">Ctrl+Shift+`</td>
</tr>
<tr>
<td style="text-align:center">引用</td>
<td style="text-align:center">&gt;+空格</td>
<td style="text-align:center">退出引用</td>
<td style="text-align:center">Shift+Tab</td>
</tr>
<tr>
<td style="text-align:center">段落</td>
<td style="text-align:center">Ctrl+0</td>
<td style="text-align:center">有序列表</td>
<td style="text-align:center">Ctrl+Shift+[</td>
</tr>
<tr>
<td style="text-align:center">标题</td>
<td style="text-align:center">Ctrl+数字</td>
<td style="text-align:center">无序列表</td>
<td style="text-align:center">Ctrl+Shift+]</td>
</tr>
<tr>
<td style="text-align:center">全选</td>
<td style="text-align:center">Ctrl+A</td>
<td style="text-align:center">选中行/句</td>
<td style="text-align:center">Ctrl+L</td>
</tr>
<tr>
<td style="text-align:center">选中段落</td>
<td style="text-align:center">Ctrl+E</td>
<td style="text-align:center">选中当前词</td>
<td style="text-align:center">Ctrl+D</td>
</tr>
<tr>
<td style="text-align:center">跳转所选</td>
<td style="text-align:center">Ctrl+J</td>
<td style="text-align:center">跳转文首/末</td>
<td style="text-align:center">Ctrl+Home/End</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">源代码模式</td>
<td style="text-align:center">Ctrl+/</td>
</tr>
</tbody>
</table>
<span id="more"></span>
<p>下方背诵表</p>
<p>  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓<br>
  ↓</p>
<table>
<thead>
<tr>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">加粗</td>
<td style="text-align:center"></td>
<td style="text-align:center">插入图像</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">斜体</td>
<td style="text-align:center"></td>
<td style="text-align:center">删除线</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">下划线</td>
<td style="text-align:center"></td>
<td style="text-align:center">公式块</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">超链接</td>
<td style="text-align:center"></td>
<td style="text-align:center">代码块</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">表格</td>
<td style="text-align:center"></td>
<td style="text-align:center">代码段</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">引用</td>
<td style="text-align:center"></td>
<td style="text-align:center">退出引用</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">段落</td>
<td style="text-align:center"></td>
<td style="text-align:center">有序列表</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">标题</td>
<td style="text-align:center"></td>
<td style="text-align:center">无序列表</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">全选</td>
<td style="text-align:center"></td>
<td style="text-align:center">选中行/句</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">选中段落</td>
<td style="text-align:center"></td>
<td style="text-align:center">选中当前词</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">跳转所选</td>
<td style="text-align:center"></td>
<td style="text-align:center">跳转文首/末</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">源代码模式</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】标签插件使用</title>
    <url>/posts/eefe99e9/</url>
    <content><![CDATA[<p>「tag 插件」(Tag Plugin) 是 Hexo 提供的一种快速生成特定内容的方式。 例如，在标准 Markdown 语法中，我们无法指定图片的大小。这种情景，我们即可使用标签来解决。 Hexo 内置来许多标签来帮助写作者可以更快的书写， 完整的标签列表 可以参考 <a href="https://hexo.io/docs/tag-plugins.html">Hexo 官网</a>。 另外，Hexo 也开放来接口给主题，使主题有可能提供给写作者更简便的写作方法。</p>
<span id="more"></span>
<h2 id="引用块">引用块</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>blockquote</strong></p>
</li>
</ul>
<p>在文章中插入引言，可包含作者、来源和标题，均可选。</p>
<p>标签方式：使用 <code>blockquote</code> 或者 简写 <code>quote</code>。</p>
<figure class="highlight twig"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%</span> <span class="name">block</span>quote author, <span class="name">source</span> link source_link_title <span class="template-tag">%&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">content</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%</span> <span class="name">endblock</span>quote <span class="template-tag">%&#125;</span></span><br></pre></td></tr></table></figure>
<p>示例如下：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">blockquote</span> Corazon, https://www.mcorazon.top Corazon博客首页 %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">这个世界总有黑夜</span></span><br><span class="line"><span class="language-xml">但是我们总发着光</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote><p>这个世界总有黑夜但是我们总发着光</p>
<footer><strong>Corazon,</strong><cite><a href="https://www.mcorazon.top">Corazon博客首页</a></cite></footer></blockquote>	
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>pullquote</strong></p>
</li>
</ul>
<p>pullquote 可以自定义引用块的样式</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">&#123;% pullquote [<span class="class"><span class="keyword">class</span>] %&#125;</span></span><br><span class="line"><span class="class"><span class="title">content</span></span></span><br><span class="line"><span class="class"></span>&#123;% endpullquote <span class="variable">%&#125;</span></span><br></pre></td></tr></table></figure>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>居中引用</strong></p>
</li>
</ul>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">centerquote</span> %&#125;</span><span class="language-xml">blah blah blah</span><span class="template-tag">&#123;% <span class="name">endcenterquote</span> %&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>blah blah blah</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
<p>同时HTML 居中引用的方式也比较简单：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">blockquote </span>class=<span class="string">&quot;blockquote-center&quot;</span>&gt;<span class="keyword">blah </span><span class="keyword">blah </span><span class="keyword">blah&lt;/blockquote&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">blah blah blah</blockquote>
<h2 id="代码块-a-id-dmk-a">代码块<a id="dmk"></a></h2>
<p>在文章中插入代码，包含指定语言、附加说明和网址，均可选。标签方式：使用 <code>codeblock</code> 或者 简写 <code>code</code>。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>codeblock代码块</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock <span class="selector-attr">[title]</span> <span class="selector-attr">[lang:language]</span> <span class="selector-attr">[url]</span> <span class="selector-attr">[link text]</span> <span class="selector-attr">[additional options]</span> %&#125;</span><br><span class="line"><span class="selector-tag">code</span> snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>
<p>示例如下：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">codeblock</span> 示例代码 lang:objc https://www.mcorazon.top 博客首页 %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">[rectangle setX: 10 y: 10 width: 20 height: 20];</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight objc"><figcaption><span>示例代码</span><a href="https://www.mcorazon.top/posts/eefe99e9/#dmk">代码块示例</a></figcaption><table><tr><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></table></figure>
<p>在 <code>additional options</code> 中，以 option:value 格式指定附加选项，例如 line_number:false（行数） first_line:5。</p>
<table>
<thead>
<tr>
<th style="text-align:center">Extra Options</th>
<th style="text-align:center">Description</th>
<th style="text-align:center">Default</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>line_number</code></td>
<td style="text-align:center">Show line number</td>
<td style="text-align:center"><code>true</code></td>
</tr>
<tr>
<td style="text-align:center"><code>line_threshold</code></td>
<td style="text-align:center">Only show line numbers as long as the numbers of lines of the code block exceed such threshold.</td>
<td style="text-align:center"><code>0</code></td>
</tr>
<tr>
<td style="text-align:center"><code>highlight</code></td>
<td style="text-align:center">Enable code highlighting</td>
<td style="text-align:center"><code>true</code></td>
</tr>
<tr>
<td style="text-align:center"><code>first_line</code></td>
<td style="text-align:center">Specify the first line number</td>
<td style="text-align:center"><code>1</code></td>
</tr>
<tr>
<td style="text-align:center"><code>mark</code></td>
<td style="text-align:center">Line highlight specific line(s), each value separated by a comma. Specify the number range using a dash Example: <code>mark:1,4-7,10</code> will mark lines 1, 4 to 7 and 10.</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><code>wrap</code></td>
<td style="text-align:center">Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table">``</a></td>
<td style="text-align:center"><code>true</code></td>
</tr>
</tbody>
</table>
<ul class="lvl-0">
<li class="lvl-2">
<p>反引号代码块<a id="fyhdmk"></a></p>
</li>
</ul>
<p>这与使用代码块相同，但使用了三个回车键来分隔代码块。</p>
<p>`` [language] [title] [url] [link text] code snippet ``</p>
<p>示例如下：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">```python <span class="selector-attr">[反引号代码块示例]</span> https:<span class="comment">//www.mcorazon.top/posts/eefe99e9/#fyhdmk 反引号代码块</span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">&quot;hello-word&quot;</span>)</span></span> </span><br><span class="line">```</span><br></pre></td></tr></table></figure>
 <figure class="highlight python"><figcaption><span>[反引号代码块示例]</span><a href="https://www.mcorazon.top/posts/eefe99e9/#fyhdmk">反引号代码块</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello-word&quot;</span>) </span><br></pre></td></tr></table></figure>
<h2 id="iframe">iframe</h2>
<p>在文章中嵌入 iframe，</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="selector-tag">iframe</span> url <span class="selector-attr">[width]</span> <span class="selector-attr">[height]</span> %&#125;</span><br></pre></td></tr></table></figure>
<p>示例如下：</p>
<figure class="highlight twig"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%</span> <span class="name">if</span>rame //player.bilibili.com/player.html?isOutside=true&amp;aid=<span class="number">113446695739195</span>&amp;bvid=BV<span class="number">17</span>rDZYZEM<span class="number">1</span>&amp;cid=<span class="number">26669354075</span>&amp;p=<span class="number">1</span>  <span class="number">500</span>px <span class="number">250</span>px <span class="template-tag">%&#125;</span></span><br></pre></td></tr></table></figure>
<iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113446695739195&bvid=BV17rDZYZEM1&cid=26669354075&p=1" width="500px" height="250px" frameborder="0" loading="lazy" allowfullscreen></iframe>
<p>可能是因为主题的原因，目前video的iframe大小没有设置成功，但网页，图片可以设置。由于目前前端水平不足，暂时不处理。</p>
<p>以下HTML代码可实现同样的功能，不予演示。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?isOutside=true&amp;aid=113446695739195&amp;bvid=BV17rDZYZEM1&amp;cid=26669354075&amp;p=1&quot;</span> <span class="attribute">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attribute">border</span>=<span class="string">&quot;0&quot;</span> <span class="attribute">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attribute">framespacing</span>=<span class="string">&quot;0&quot;</span>  <span class="attribute">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>
<h2 id="图像">图像</h2>
<p>使用标签插入图像可以自定义图像的大小</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#123;% img [<span class="keyword">class</span> <span class="symbol">names</span>] /<span class="symbol">path</span>/<span class="symbol">to</span>/<span class="symbol">image</span> [<span class="symbol">width</span>] [<span class="symbol">height</span>] &#x27;&quot;<span class="symbol">title</span> <span class="symbol">text</span>&quot; &quot;<span class="symbol">alt</span> <span class="symbol">text</span>&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure>
<p>示例如下：</p>
<figure class="highlight twig"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%</span> <span class="name">img</span> imgcls /【Hexo】标签插件使用/<span class="number">004</span>.png <span class="number">20</span>px <span class="number">20</span>px <span class="string">&#x27;&quot;004.png&quot; &quot;这就是我的头像&quot;&#x27;</span> <span class="template-tag">%&#125;</span></span><br></pre></td></tr></table></figure>
<img src="/posts/eefe99e9//004.png" class="imgcls" title="20px 20px &quot;004.png&quot; &quot;这就是我的头像&quot;">
<p><font class="notice"><em><s>mlgbzd</s>，一会儿行一会不行的</em></font></p>
<h2 id="Video-标签">Video 标签</h2>
<figure class="highlight twig"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%</span> <span class="name">video</span> //player.bilibili.com/player.html?isOutside=true&amp;aid=<span class="number">113446695739195</span>&amp;bvid=BV<span class="number">17</span>rDZYZEM<span class="number">1</span>&amp;cid=<span class="number">26669354075</span>&amp;p=<span class="number">1</span> <span class="template-tag">%&#125;</span></span><br></pre></td></tr></table></figure>
<video src="//player.bilibili.com/player.html?isOutside=true&aid=113446695739195&bvid=BV17rDZYZEM1&cid=26669354075&p=1" preload="metadata" controls playsinline poster>Sorry, your browser does not support the video tag.</video>
<h2 id="链接">链接</h2>
<p>插入带有 target=“_blank” 属性的链接。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;% link <span class="selector-tag">text</span> url <span class="selector-attr">[external]</span> <span class="selector-attr">[title]</span> %&#125;</span><br></pre></td></tr></table></figure>
<p>示例如下：</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">&#123;% link <span class="built_in">text</span> https:<span class="comment">// [external] [title] %&#125;</span></span><br></pre></td></tr></table></figure>
<div class="video-container"><iframe src="https://www.youtube.com/embed/lJIrF4YjHfQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<p>参考文章：</p>
<p><a href="https://blog.csdn.net/qq_41518277/article/details/101765886">Hexo标签插件的使用</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】typora+hexo图片路径设置</title>
    <url>/posts/c59e83fa/</url>
    <content><![CDATA[<p>**1. **  <strong>冲突来源</strong></p>
<p>Hexo上对于图片在md中的引用，使用了post_asset_folder: true配置，来更好的管理图片。当一篇名为xxx.md的文章引用1.png图片时，默认让1.png保持在xxx文件夹下，那么md中即可使用来引用图片。</p>
<p><img src="/posts/c59e83fa//image-20241028094752220.png" alt="image-20241028094752220"></p>
<p>按照如上图所示操作，即可使typora在每次复制图片到md时将其自动放入和md文件名同名文件夹下。</p>
<p>原文链接：<a href="https://blog.csdn.net/m0_51390969/article/details/139906818">https://blog.csdn.net/m0_51390969/article/details/139906818</a></p>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客——开启我的新篇章</title>
    <url>/posts/8d60c6a5/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Wrong password, please try again.Or you can contact the author to view the blog" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3528a56aeba1a675791371d7698aeab3b12aea6720b0157e60f1935c38074323">35e94af5aa3de4403be2a274c3bae36ffa679d444bbf2c0ce98987b44b30a2b177390b045ff9b811b9d33ebdbc694d1dc87365728d7c66f7bd90d31b5c38ab9214a97f9a3b1e49c46ec95f9c4eb8dce252ab22ff16259921bf1f5d25bb525c592e381a68ea7bc6b289b36993d1d2a8ace0a87a2f629e64256dbfe2806228ad0ddb14ffedbbc828533f60c7c295453636a6eca6d52d1a5b5244a569529d38f5b8a542f55f8310e64fd67b6894930d4ca3405233fc057a8fecc27cdda65788f5c54afb9df1ceff2e4850e97f108f8c13d1ae6ad241254e6d769f7c9856d224a79665f2e112d88473eea7213660d383bf252530df3cfc4de7e20a54c29c095f96e0a4aa9d367bbd54003e0bf6e01feef60f2cbd0ba0163ff4f8f087a6cb96f4ab5c4c599b882784d6b5650a556c015cbb57526281545d4bb3a4ca46c04d07a382c0214ec2889b6a1add6510a1854a1904ffe3ba06ea7cd221da90f1e601841dfac17f597a518cb14338866248d60b6405f939be2d0146f9f23729ef0618474a96a73d1fbadb7547b52989a4bd04a4597dd5dd4502baf6c0fe0610889ea65a08a13d9d1810d334af5dc738548eff49d3ef7e5fc577c055eaa3b8c08e8082cb60c56c0bdc1549baa7e08a26daeec1b120ee9662fd81e2f7ee703d7db8b24d2d4b3c1970cb4c2aa92e1c17c883fb96c3df13eb5e747a15216a5357261471141171d5ca2adb8118cf28095b3a162c64c40190fad91789cea76174c6e74e5ca7eddc215ce231c2826db2a09c540a3579ac743f3a19b7788b3d1e802d2247d55f567a0723ebd72fbce905fa31c5ab88048784ba2d1019c26c449e94917bf75c14e17e636cc0d0032c17fa7aa2641204995761c93895aad607108350e4bcb8224c6bc5a19255a800d572203d5d3c9fd2019471e13c6a901122b37b26200b3cada781cc50ebc4bb7d19bd84330e1035bfb1b8c48ef83df64e500530de68a5b1878d6c2d290897d68c3fdb0a179d33195681206fa7d8368e1eb84f6875e97b16849449e0e98bfbcb4170916ea9ba56441336d23bd7cc940e16b111cefa2c5393a2af40a1b7843b9fa851c37f57fade9d1240ec8d2946370903fdbd4fbd2e08cd77e12799f42603b48aa5f85bf4ceedab1124a016051ff43aae544296fdca263a6bd4879cb1d8451208b61f47c5881269a1e2e8476bd4ba4278e0cecab7ebcecc03d2648c75003889a7ebe4f95e20d6b0a789a0dcb4f29776d9ad4642b85f3823bbd97b95a5c02b8e1a18e9bc6e06a2aba3eea8d6984dd332bb3159be480f524d677ccc06f85ca3ced1d3d2dd029a1424bc68a96254af1818bf2a38e7a93f5aecdee7c1edfbbdca0b610f756523ba0bdb7bb0a9fdcad205c9959e126e2ea8b0144dc647a27dbb23e10937bbe7a21cdac4f9e2e7292a778f6c1931ae509fce0a4b3520e20d57e3d89219c72d3f6c68ed98adaeb8a4edd1cf40263f360a2f224e7e5a8337ef1f28718f577f33300a45ca89174a647ddf17793dedddc18c550df9814854f691098ae21963e409aeb56d3dd0c4d095bcd504af39026fa6efb78f448c219e6176daa6c6c8256a9be7d8848e51fe2b7c45d9a4b106051ee9bcc7ce4c537ed917a7f4c77ffddca6b85e10ef1a4293f763ba58c879f01e65d8032fad7d5785fb561ca20c424f6d09adb5510f05d2bf86592d0e5de7a67c463080237f13d576e97b30d30f567e27526eb4e7867492f31587b359d3fae943691022bc5a3481e852ad3be8b98aebefd575a7d06b8b2f2186f75cc3101aa9eafbbfae6834e37f3275b44be4ef835e2b4c2b48daac0ec25712096104ccc9f8edb0587dcfb5d5908ad8846b92f369d68846f65c5d075bc188074612ad67323274a7d6bd034e79fa86b22d49f1c35e57a2adbb8fa31ffdf6eb1ba2f5e4bd4cd0a14c27ac447905c09af8b390f6a11ade9083decc833561f009817f6faad23155d4cfaf2c8d0a6f1df6c3573a1b102aeac4e7e7c7776bc851d630afc42236960c3c89d07039def65f0b4f92f181622a18b5feb39e3d7ee94893798797556a206a2add60f7384dfe3828dfd393908d2c496a6d33a548397ff78534a45b3eee2a3e0dad706ea2825f42db5cb9867770c0c9b472c2af9b44a7a896a2998949b13c614dbdc709f05e4f9473474415df6f10710b28dead3579c553070ccfb9e602283bd196ed12286ef3dde102b8ac09d4b5525aa61745e31e800e9b967081fb42d2a72c539af4eace26b4e19581f7cd79b3999d9757c316780d5ee3fcf60b87d46de39b3bc5fcdc800ff0cf5a59ef6dbd</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
